#include <app/Experimental.Cache.DiskCacheEntry.h>
#include <app/Fuse.Animations.Animator.h>
#include <app/Fuse.Animations.IMixerMaster.h>
#include <app/Fuse.Animations.Keyframe.h>
#include <app/Fuse.Animations.MixerHandle__bool.h>
#include <app/Fuse.Animations.MixerHandle__char.h>
#include <app/Fuse.Animations.MixerHandle__double.h>
#include <app/Fuse.Animations.MixerHandle__float.h>
#include <app/Fuse.Animations.MixerHandle__float2.h>
#include <app/Fuse.Animations.MixerHandle__float3.h>
#include <app/Fuse.Animations.MixerHandle__float4.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Animations_AnimationVariant.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Animations_Easing.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Animations_KeyframeInterpolation.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Animations_MixOp.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Drawing_BlendMode.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Drawing_Brush.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Drawing_DynamicBrush.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Drawing_GradientStop.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Drawing_LinearGradient.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Drawing_SolidColor.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Drawing_StaticBrush.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_Alignment.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_CachingMode.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_Element.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_HitTestMode.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_SizeUnit.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_StretchDirection.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_StretchMode.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_StretchSizing.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_TextAlignment.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_TextWrapping.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Elements_Visibility.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Font.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Gestures_Edge.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Gestures_ScrollDirections.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Layouts_Dock.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Layouts_FlowDirection.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Layouts_Metric.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Layouts_Orientation.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Navigation_NavigationDirection.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Navigation_NavigationEdge.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Navigation_NavigationGotoMode.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Navigation_SnapTo.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Navigation_SwipeDirection.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Navigation_SwipeEnds.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Node.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Resources_ImageSource.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Transform.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Triggers_Actions_TriggerDirection.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Triggers_State.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Triggers_StateTransition.h>
#include <app/Fuse.Animations.MixerHandle__Fuse_Triggers_TriggerBypassMode.h>
#include <app/Fuse.Animations.MixerHandle__int.h>
#include <app/Fuse.Animations.MixerHandle__int2.h>
#include <app/Fuse.Animations.MixerHandle__int3.h>
#include <app/Fuse.Animations.MixerHandle__int4.h>
#include <app/Fuse.Animations.MixerHandle__long.h>
#include <app/Fuse.Animations.MixerHandle__object.h>
#include <app/Fuse.Animations.MixerHandle__short.h>
#include <app/Fuse.Animations.MixerHandle__string.h>
#include <app/Fuse.Animations.MixerHandle__Uno_EventArgs.h>
#include <app/Fuse.Animations.MixerHandle__Uno_Platform_iOS_StatusBarStyle.h>
#include <app/Fuse.Animations.MixerHandle__Uno_UX_FileSource.h>
#include <app/Fuse.Behavior.h>
#include <app/Fuse.CacheFramebuffer.h>
#include <app/Fuse.Controls.Control.h>
#include <app/Fuse.Controls.Internal.WordWrapperWord.h>
#include <app/Fuse.Controls.Internal.WrappedLine.h>
#include <app/Fuse.Controls.TextEdit.LineCacheLine.h>
#include <app/Fuse.Drawing.Batching.Batch.h>
#include <app/Fuse.Drawing.Batching.Entry.h>
#include <app/Fuse.Drawing.Brush.h>
#include <app/Fuse.Drawing.Contour.h>
#include <app/Fuse.Drawing.GradientStop.h>
#include <app/Fuse.Drawing.Internal.MultiBuffer_Field.h>
#include <app/Fuse.Drawing.PathGeometry.h>
#include <app/Fuse.Drawing.Stroke.h>
#include <app/Fuse.Effects.Effect.h>
#include <app/Fuse.Elements.Element.h>
#include <app/Fuse.Elements.ElementAtlas.h>
#include <app/Fuse.Elements.ElementBatch.h>
#include <app/Fuse.Elements.ElementBatchEntry.h>
#include <app/Fuse.Elements.IElementBatchDrawable.h>
#include <app/Fuse.Entities.Component.h>
#include <app/Fuse.Entities.Entity.h>
#include <app/Fuse.Input.Capturer.h>
#include <app/Fuse.Input.FocusGainedHandler.h>
#include <app/Fuse.Input.FocusLostHandler.h>
#include <app/Fuse.Input.IsFocusableChangedHandler.h>
#include <app/Fuse.Input.KeyPressedHandler.h>
#include <app/Fuse.Input.KeyReleasedHandler.h>
#include <app/Fuse.Input.Pointer_PELHolder.h>
#include <app/Fuse.Input.PointerEnteredHandler.h>
#include <app/Fuse.Input.PointerLeftHandler.h>
#include <app/Fuse.Input.PointerMovedHandler.h>
#include <app/Fuse.Input.PointerPressedHandler.h>
#include <app/Fuse.Input.PointerReleasedHandler.h>
#include <app/Fuse.Input.PointerWheelMovedHandler.h>
#include <app/Fuse.Input.TextEnteredHandler.h>
#include <app/Fuse.iOS.StatusBarConfig.h>
#include <app/Fuse.IViewport.h>
#include <app/Fuse.Layouts.Column.h>
#include <app/Fuse.Layouts.Row.h>
#include <app/Fuse.Navigation.INavigationAnimator.h>
#include <app/Fuse.Navigation.IPageResourceBinding.h>
#include <app/Fuse.Node.h>
#include <app/Fuse.Physics.Body.h>
#include <app/Fuse.Physics.IRule.h>
#include <app/Fuse.Reactive.Case.h>
#include <app/Fuse.Reactive.FuseJS.Timer_Time.h>
#include <app/Fuse.Reactive.JavaScript.h>
#include <app/Fuse.RenderTargetEntry.h>
#include <app/Fuse.Resources.ImageSource.h>
#include <app/Fuse.Resources.IMemoryResource.h>
#include <app/Fuse.Resources.ISoftDisposable.h>
#include <app/Fuse.Scripting.INameListener.h>
#include <app/Fuse.Scripting.NativeMember.h>
#include <app/Fuse.Stage.h>
#include <app/Fuse.Style.h>
#include <app/Fuse.StyleProperty.h>
#include <app/Fuse.Transform.h>
#include <app/Fuse.Triggers.Actions.TriggerAction.h>
#include <app/Fuse.Triggers.State.h>
#include <app/Fuse.UpdateListener.h>
#include <app/Outracks.Simulator.Bytecode.TypeName.h>
#include <app/Outracks.Simulator.Task__Outracks_Simulator_ISimulatorClient.h>
#include <app/Outracks.Simulator.Task__Uno_Net_IPEndPoint__.h>
#include <app/Uno.Action.h>
#include <app/Uno.Array.h>
#include <app/Uno.Bool.h>
#include <app/Uno.Byte.h>
#include <app/Uno.Char.h>
#include <app/Uno.CharPunctuationChecker_PunctuationRange.h>
#include <app/Uno.Collections.Dictionary__Outracks_Simulator_Bytecode_TypeNam-95c49e9b.h>
#include <app/Uno.Collections.IEnumerator.h>
#include <app/Uno.Collections.IEnumerator__byte.h>
#include <app/Uno.Collections.IEnumerator__byte__.h>
#include <app/Uno.Collections.IEnumerator__char.h>
#include <app/Uno.Collections.IEnumerator__Experimental_Cache_DiskCacheEntry.h>
#include <app/Uno.Collections.IEnumerator__float2.h>
#include <app/Uno.Collections.IEnumerator__float3.h>
#include <app/Uno.Collections.IEnumerator__float4.h>
#include <app/Uno.Collections.IEnumerator__framebuffer.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_Animator.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_IMixerMaster.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_Keyframe.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_bool_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_char_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_double_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_float_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_float2_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_float3_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_float4_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_A-20cdfbae.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_A-6353e07c.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_A-8f9f93ac.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_A-aff3378d.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_D-2b7bb45b.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_D-5de458de.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_D-79f7a53d.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_D-d521c5db.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_D-e22ae549.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_D-e6102d54.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_D-fc73587b.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-171b0acb.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-1c52616b.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-233c7341.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-2bd15cb5.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-373c4615.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-49b2d237.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-9558d0dd.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-9d121238.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-a5a32339.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-ab4d9ede.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_E-ac3ba9d3.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_Font_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_G-6374a15e.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_G-bc18922b.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_L-11bf21e.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_L-89ed9177.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_L-9f7d6395.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_L-dfb7cbaa.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_N-1c7bf95a.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_N-209136d6.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_N-514756ff.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_N-be20af5.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_N-ca3f3972.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_N-cf05b355.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_Node_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_R-95fec26e.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_T-335c594e.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_T-45d6ddf8.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_T-e6118f16.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_T-f29074da.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Fuse_Transform_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_int_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_int2_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_int3_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_int4_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_long_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_object_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_short_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_string_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Uno_EventArgs_.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Uno_Pl-5087d200.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Animations_MixerHandle_Uno_UX-6a48e784.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Behavior.h>
#include <app/Uno.Collections.IEnumerator__Fuse_CacheFramebuffer.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Controls_Control.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Controls_Internal_WordWrapperWord.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Controls_Internal_WrappedLine.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Controls_TextEdit_LineCacheLine.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Drawing_Batching_Batch.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Drawing_Batching_Entry.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Drawing_Brush.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Drawing_Contour.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Drawing_GradientStop.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Drawing_Internal_MultiBuffer_Field.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Drawing_PathGeometry.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Drawing_Stroke.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Effects_Effect.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Elements_Element.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Elements_ElementAtlas.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Elements_ElementBatch.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Elements_ElementBatchEntry.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Elements_IElementBatchDrawable.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Entities_Component.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Entities_Entity.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Entities_Entry.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_Capturer.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_FocusGainedHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_FocusLostHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_IsFocusableChangedHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_KeyPressedHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_KeyReleasedHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_Pointer_PELHolder.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_PointerEnteredHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_PointerLeftHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_PointerMovedHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_PointerPressedHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_PointerReleasedHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_PointerWheelMovedHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Input_TextEnteredHandler.h>
#include <app/Uno.Collections.IEnumerator__Fuse_iOS_StatusBarConfig.h>
#include <app/Uno.Collections.IEnumerator__Fuse_IViewport.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Layouts_Column.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Layouts_DefinitionBase_ParseDataItem.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Layouts_Row.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Navigation_INavigationAnimator.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Navigation_IPageResourceBinding.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Node.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Physics_Body.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Physics_IRule.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Reactive_Case.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Reactive_FuseJS_Timer_Time.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Reactive_JavaScript.h>
#include <app/Uno.Collections.IEnumerator__Fuse_RenderTargetEntry.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Resources_ImageSource.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Resources_IMemoryResource.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Resources_ISoftDisposable.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Scripting_INameListener.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Scripting_NativeMember.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Stage.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Style.h>
#include <app/Uno.Collections.IEnumerator__Fuse_StyleProperty.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Transform.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Triggers_Actions_TriggerAction.h>
#include <app/Uno.Collections.IEnumerator__Fuse_Triggers_State.h>
#include <app/Uno.Collections.IEnumerator__Fuse_UpdateListener.h>
#include <app/Uno.Collections.IEnumerator__int.h>
#include <app/Uno.Collections.IEnumerator__int4.h>
#include <app/Uno.Collections.IEnumerator__object.h>
#include <app/Uno.Collections.IEnumerator__Outracks_Simulator_Bytecode_TypeName.h>
#include <app/Uno.Collections.IEnumerator__Outracks_Simulator_Task_Outracks_S-51bc72a7.h>
#include <app/Uno.Collections.IEnumerator__Outracks_Simulator_Task_Uno_Net_IP-51d80b77.h>
#include <app/Uno.Collections.IEnumerator__string.h>
#include <app/Uno.Collections.IEnumerator__Uno_Action.h>
#include <app/Uno.Collections.IEnumerator__Uno_CharPunctuationChecker_PunctuationRange.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_ConcurrentCollecti-4e4ef92.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_ConcurrentCollecti-62da0c27.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_Dictionary_Outrack-73508a70.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Models_ModelDrawable.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Models_ModelNode.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Models_ModelParameter_float4x4_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Models_ModelSkin.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Models_SkinBone.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Models_SkinDrawable.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Models_VertexInfluence.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Splines_KeyframedSplin-1bd22fa2.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Splines_KeyframedSplin-6b046d0c.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Splines_KeyframedSplin-de50e1a7.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Splines_KeyframedSplin-e11d5895.h>
#include <app/Uno.Collections.IEnumerator__Uno_Content_Splines_KeyframedSplin-ec9d5642.h>
#include <app/Uno.Collections.IEnumerator__Uno_Data_Json_Value.h>
#include <app/Uno.Collections.IEnumerator__Uno_Data_Xml_XmlAttribute.h>
#include <app/Uno.Collections.IEnumerator__Uno_Data_Xml_XmlAttributeHandle.h>
#include <app/Uno.Collections.IEnumerator__Uno_Data_Xml_XmlLinkedNode.h>
#include <app/Uno.Collections.IEnumerator__Uno_Data_Xml_XmlNodeHandle.h>
#include <app/Uno.Collections.IEnumerator__Uno_Diagnostics_ProfileEvent.h>
#include <app/Uno.Collections.IEnumerator__Uno_EventHandler.h>
#include <app/Uno.Collections.IEnumerator__Uno_Exception.h>
#include <app/Uno.Collections.IEnumerator__Uno_Graphics_PolygonFace.h>
#include <app/Uno.Collections.IEnumerator__Uno_Net_Http_HttpMessageHandlerRequest.h>
#include <app/Uno.Collections.IEnumerator__Uno_Platform_Key.h>
#include <app/Uno.Collections.IEnumerator__Uno_Reflection_CppField.h>
#include <app/Uno.Collections.IEnumerator__Uno_Reflection_CppFunction.h>
#include <app/Uno.Collections.IEnumerator__Uno_Runtime_Implementation_Interna-7482e939.h>
#include <app/Uno.Collections.IEnumerator__Uno_UX_FileSource.h>
#include <app/Uno.Collections.IEnumerator__Uno_UX_IFactory.h>
#include <app/Uno.Collections.IEnumerator__Uno_UX_ITemplate.h>
#include <app/Uno.Collections.IEnumerator__Uno_UX_Resource.h>
#include <app/Uno.Collections.List__byte.h>
#include <app/Uno.Collections.List__byte__.h>
#include <app/Uno.Collections.List__char.h>
#include <app/Uno.Collections.List__Experimental_Cache_DiskCacheEntry.h>
#include <app/Uno.Collections.List__float2.h>
#include <app/Uno.Collections.List__float3.h>
#include <app/Uno.Collections.List__float4.h>
#include <app/Uno.Collections.List__framebuffer.h>
#include <app/Uno.Collections.List__Fuse_Animations_Animator.h>
#include <app/Uno.Collections.List__Fuse_Animations_IMixerMaster.h>
#include <app/Uno.Collections.List__Fuse_Animations_Keyframe.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_bool_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_char_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_double_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_float_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_float2_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_float3_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_float4_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Animatio-1b1ceaef.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Animatio-c43422b7.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Animatio-de2b4376.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Drawing_-3f43563f.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Drawing_-7a791c6d.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Drawing_-818bbb98.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Drawing_-ab5b8893.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Drawing_-c2c4d18f.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Drawing_-c6ec7155.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements-236ff2e8.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements-2d323b6a.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements-2ddaef72.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements-66b5256c.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements-9b8cf363.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements-ae19f2c.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements-dea964a1.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements-e5ad418a.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements-ee8d3288.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Elements-fb40cafa.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Font_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Gestures-d0c56820.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Layouts_-14d19b1.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Layouts_-674d48c3.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Navigati-15d1b05f.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Navigati-5d642e47.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Navigati-722e3c28.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Navigati-90924e98.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Navigati-a2fb39d8.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Navigati-ebf2794b.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Node_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Resource-c3432dcb.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Transform_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Triggers-24b0b685.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Triggers-7a15d5ab.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Fuse_Triggers-bd665cb8.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_int_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_int2_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_int3_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_int4_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_long_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_object_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_short_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_string_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Uno_EventArgs_.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Uno_Platform_-a51e53a8.h>
#include <app/Uno.Collections.List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_.h>
#include <app/Uno.Collections.List__Fuse_Behavior.h>
#include <app/Uno.Collections.List__Fuse_CacheFramebuffer.h>
#include <app/Uno.Collections.List__Fuse_Controls_Control.h>
#include <app/Uno.Collections.List__Fuse_Controls_Internal_WordWrapperWord.h>
#include <app/Uno.Collections.List__Fuse_Controls_Internal_WrappedLine.h>
#include <app/Uno.Collections.List__Fuse_Controls_TextEdit_LineCacheLine.h>
#include <app/Uno.Collections.List__Fuse_Drawing_Batching_Batch.h>
#include <app/Uno.Collections.List__Fuse_Drawing_Batching_Entry.h>
#include <app/Uno.Collections.List__Fuse_Drawing_Brush.h>
#include <app/Uno.Collections.List__Fuse_Drawing_Contour.h>
#include <app/Uno.Collections.List__Fuse_Drawing_GradientStop.h>
#include <app/Uno.Collections.List__Fuse_Drawing_Internal_MultiBuffer_Field.h>
#include <app/Uno.Collections.List__Fuse_Drawing_PathGeometry.h>
#include <app/Uno.Collections.List__Fuse_Drawing_Stroke.h>
#include <app/Uno.Collections.List__Fuse_Effects_Effect.h>
#include <app/Uno.Collections.List__Fuse_Elements_Element.h>
#include <app/Uno.Collections.List__Fuse_Elements_ElementAtlas.h>
#include <app/Uno.Collections.List__Fuse_Elements_ElementBatch.h>
#include <app/Uno.Collections.List__Fuse_Elements_ElementBatchEntry.h>
#include <app/Uno.Collections.List__Fuse_Elements_IElementBatchDrawable.h>
#include <app/Uno.Collections.List__Fuse_Entities_Component.h>
#include <app/Uno.Collections.List__Fuse_Entities_Entity.h>
#include <app/Uno.Collections.List__Fuse_Entities_Entry.h>
#include <app/Uno.Collections.List__Fuse_Input_Capturer.h>
#include <app/Uno.Collections.List__Fuse_Input_FocusGainedHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_FocusLostHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_IsFocusableChangedHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_KeyPressedHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_KeyReleasedHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_Pointer_PELHolder.h>
#include <app/Uno.Collections.List__Fuse_Input_PointerEnteredHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_PointerLeftHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_PointerMovedHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_PointerPressedHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_PointerReleasedHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_PointerWheelMovedHandler.h>
#include <app/Uno.Collections.List__Fuse_Input_TextEnteredHandler.h>
#include <app/Uno.Collections.List__Fuse_iOS_StatusBarConfig.h>
#include <app/Uno.Collections.List__Fuse_IViewport.h>
#include <app/Uno.Collections.List__Fuse_Layouts_Column.h>
#include <app/Uno.Collections.List__Fuse_Layouts_DefinitionBase_ParseDataItem.h>
#include <app/Uno.Collections.List__Fuse_Layouts_Row.h>
#include <app/Uno.Collections.List__Fuse_Navigation_INavigationAnimator.h>
#include <app/Uno.Collections.List__Fuse_Navigation_IPageResourceBinding.h>
#include <app/Uno.Collections.List__Fuse_Node.h>
#include <app/Uno.Collections.List__Fuse_Physics_Body.h>
#include <app/Uno.Collections.List__Fuse_Physics_IRule.h>
#include <app/Uno.Collections.List__Fuse_Reactive_Case.h>
#include <app/Uno.Collections.List__Fuse_Reactive_FuseJS_Timer_Time.h>
#include <app/Uno.Collections.List__Fuse_Reactive_JavaScript.h>
#include <app/Uno.Collections.List__Fuse_RenderTargetEntry.h>
#include <app/Uno.Collections.List__Fuse_Resources_ImageSource.h>
#include <app/Uno.Collections.List__Fuse_Resources_IMemoryResource.h>
#include <app/Uno.Collections.List__Fuse_Resources_ISoftDisposable.h>
#include <app/Uno.Collections.List__Fuse_Scripting_INameListener.h>
#include <app/Uno.Collections.List__Fuse_Scripting_NativeMember.h>
#include <app/Uno.Collections.List__Fuse_Stage.h>
#include <app/Uno.Collections.List__Fuse_Style.h>
#include <app/Uno.Collections.List__Fuse_StyleProperty.h>
#include <app/Uno.Collections.List__Fuse_Transform.h>
#include <app/Uno.Collections.List__Fuse_Triggers_Actions_TriggerAction.h>
#include <app/Uno.Collections.List__Fuse_Triggers_State.h>
#include <app/Uno.Collections.List__Fuse_UpdateListener.h>
#include <app/Uno.Collections.List__int.h>
#include <app/Uno.Collections.List__int4.h>
#include <app/Uno.Collections.List__object.h>
#include <app/Uno.Collections.List__Outracks_Simulator_Bytecode_TypeName.h>
#include <app/Uno.Collections.List__Outracks_Simulator_Task_Outracks_Simulato-ae93148c.h>
#include <app/Uno.Collections.List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___.h>
#include <app/Uno.Collections.List__string.h>
#include <app/Uno.Collections.List__Uno_Action.h>
#include <app/Uno.Collections.List__Uno_CharPunctuationChecker_PunctuationRange.h>
#include <app/Uno.Collections.List__Uno_Collections_ConcurrentCollection1_Mod-2c2f5a91.h>
#include <app/Uno.Collections.List__Uno_Collections_ConcurrentCollection1_Mod-2fdc210.h>
#include <app/Uno.Collections.List__Uno_Collections_Dictionary_Outracks_Simul-c14837e5.h>
#include <app/Uno.Collections.List__Uno_Content_Models_ModelDrawable.h>
#include <app/Uno.Collections.List__Uno_Content_Models_ModelNode.h>
#include <app/Uno.Collections.List__Uno_Content_Models_ModelParameter_float4x4_.h>
#include <app/Uno.Collections.List__Uno_Content_Models_ModelSkin.h>
#include <app/Uno.Collections.List__Uno_Content_Models_SkinBone.h>
#include <app/Uno.Collections.List__Uno_Content_Models_SkinDrawable.h>
#include <app/Uno.Collections.List__Uno_Content_Models_VertexInfluence.h>
#include <app/Uno.Collections.List__Uno_Content_Splines_KeyframedSpline2_Key_-3f269586.h>
#include <app/Uno.Collections.List__Uno_Content_Splines_KeyframedSpline2_Key_-b3c190c7.h>
#include <app/Uno.Collections.List__Uno_Content_Splines_KeyframedSpline2_Key_-ca8b9945.h>
#include <app/Uno.Collections.List__Uno_Content_Splines_KeyframedSpline2_Key_-d4cf8748.h>
#include <app/Uno.Collections.List__Uno_Content_Splines_KeyframedSpline2_Key_-eede57a1.h>
#include <app/Uno.Collections.List__Uno_Data_Json_Value.h>
#include <app/Uno.Collections.List__Uno_Data_Xml_XmlAttribute.h>
#include <app/Uno.Collections.List__Uno_Data_Xml_XmlAttributeHandle.h>
#include <app/Uno.Collections.List__Uno_Data_Xml_XmlLinkedNode.h>
#include <app/Uno.Collections.List__Uno_Data_Xml_XmlNodeHandle.h>
#include <app/Uno.Collections.List__Uno_Diagnostics_ProfileEvent.h>
#include <app/Uno.Collections.List__Uno_EventHandler.h>
#include <app/Uno.Collections.List__Uno_Exception.h>
#include <app/Uno.Collections.List__Uno_Graphics_PolygonFace.h>
#include <app/Uno.Collections.List__Uno_Net_Http_HttpMessageHandlerRequest.h>
#include <app/Uno.Collections.List__Uno_Platform_Key.h>
#include <app/Uno.Collections.List__Uno_Reflection_CppField.h>
#include <app/Uno.Collections.List__Uno_Reflection_CppFunction.h>
#include <app/Uno.Collections.List__Uno_Runtime_Implementation_Internal_Forma-9a8ac0f6.h>
#include <app/Uno.Collections.List__Uno_UX_FileSource.h>
#include <app/Uno.Collections.List__Uno_UX_IFactory.h>
#include <app/Uno.Collections.List__Uno_UX_ITemplate.h>
#include <app/Uno.Collections.List__Uno_UX_Resource.h>
#include <app/Uno.Comparison__byte.h>
#include <app/Uno.Comparison__byte__.h>
#include <app/Uno.Comparison__char.h>
#include <app/Uno.Comparison__Experimental_Cache_DiskCacheEntry.h>
#include <app/Uno.Comparison__float2.h>
#include <app/Uno.Comparison__float3.h>
#include <app/Uno.Comparison__float4.h>
#include <app/Uno.Comparison__framebuffer.h>
#include <app/Uno.Comparison__Fuse_Animations_Animator.h>
#include <app/Uno.Comparison__Fuse_Animations_IMixerMaster.h>
#include <app/Uno.Comparison__Fuse_Animations_Keyframe.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_bool_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_char_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_double_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_float_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_float2_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_float3_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_float4_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Animations_Ani-36374744.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Animations_Key-4f3927ea.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_Element_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_Stret-1ab1feff.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Font_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Gestures_Scrol-4c068e9.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_Nav-2509ba94.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_Nav-365c78bb.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_Nav-741b8dd5.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_Swi-e2db51a.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Node_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Transform_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Triggers_Actio-8ba5a68d.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Triggers_State_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Triggers_State-c45805ab.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Fuse_Triggers_Trigg-9ac718fe.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_int_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_int2_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_int3_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_int4_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_long_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_object_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_short_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_string_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Uno_EventArgs_.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Uno_Platform_iOS_St-89edf6a5.h>
#include <app/Uno.Comparison__Fuse_Animations_MixerHandle_Uno_UX_FileSource_.h>
#include <app/Uno.Comparison__Fuse_Behavior.h>
#include <app/Uno.Comparison__Fuse_CacheFramebuffer.h>
#include <app/Uno.Comparison__Fuse_Controls_Control.h>
#include <app/Uno.Comparison__Fuse_Controls_Internal_WordWrapperWord.h>
#include <app/Uno.Comparison__Fuse_Controls_Internal_WrappedLine.h>
#include <app/Uno.Comparison__Fuse_Controls_TextEdit_LineCacheLine.h>
#include <app/Uno.Comparison__Fuse_Drawing_Batching_Batch.h>
#include <app/Uno.Comparison__Fuse_Drawing_Batching_Entry.h>
#include <app/Uno.Comparison__Fuse_Drawing_Brush.h>
#include <app/Uno.Comparison__Fuse_Drawing_Contour.h>
#include <app/Uno.Comparison__Fuse_Drawing_GradientStop.h>
#include <app/Uno.Comparison__Fuse_Drawing_Internal_MultiBuffer_Field.h>
#include <app/Uno.Comparison__Fuse_Drawing_PathGeometry.h>
#include <app/Uno.Comparison__Fuse_Drawing_Stroke.h>
#include <app/Uno.Comparison__Fuse_Effects_Effect.h>
#include <app/Uno.Comparison__Fuse_Elements_Element.h>
#include <app/Uno.Comparison__Fuse_Elements_ElementAtlas.h>
#include <app/Uno.Comparison__Fuse_Elements_ElementBatch.h>
#include <app/Uno.Comparison__Fuse_Elements_ElementBatchEntry.h>
#include <app/Uno.Comparison__Fuse_Elements_IElementBatchDrawable.h>
#include <app/Uno.Comparison__Fuse_Entities_Component.h>
#include <app/Uno.Comparison__Fuse_Entities_Entity.h>
#include <app/Uno.Comparison__Fuse_Entities_Entry.h>
#include <app/Uno.Comparison__Fuse_Input_Capturer.h>
#include <app/Uno.Comparison__Fuse_Input_FocusGainedHandler.h>
#include <app/Uno.Comparison__Fuse_Input_FocusLostHandler.h>
#include <app/Uno.Comparison__Fuse_Input_IsFocusableChangedHandler.h>
#include <app/Uno.Comparison__Fuse_Input_KeyPressedHandler.h>
#include <app/Uno.Comparison__Fuse_Input_KeyReleasedHandler.h>
#include <app/Uno.Comparison__Fuse_Input_Pointer_PELHolder.h>
#include <app/Uno.Comparison__Fuse_Input_PointerEnteredHandler.h>
#include <app/Uno.Comparison__Fuse_Input_PointerLeftHandler.h>
#include <app/Uno.Comparison__Fuse_Input_PointerMovedHandler.h>
#include <app/Uno.Comparison__Fuse_Input_PointerPressedHandler.h>
#include <app/Uno.Comparison__Fuse_Input_PointerReleasedHandler.h>
#include <app/Uno.Comparison__Fuse_Input_PointerWheelMovedHandler.h>
#include <app/Uno.Comparison__Fuse_Input_TextEnteredHandler.h>
#include <app/Uno.Comparison__Fuse_iOS_StatusBarConfig.h>
#include <app/Uno.Comparison__Fuse_IViewport.h>
#include <app/Uno.Comparison__Fuse_Layouts_Column.h>
#include <app/Uno.Comparison__Fuse_Layouts_DefinitionBase_ParseDataItem.h>
#include <app/Uno.Comparison__Fuse_Layouts_Row.h>
#include <app/Uno.Comparison__Fuse_Navigation_INavigationAnimator.h>
#include <app/Uno.Comparison__Fuse_Navigation_IPageResourceBinding.h>
#include <app/Uno.Comparison__Fuse_Node.h>
#include <app/Uno.Comparison__Fuse_Physics_Body.h>
#include <app/Uno.Comparison__Fuse_Physics_IRule.h>
#include <app/Uno.Comparison__Fuse_Reactive_Case.h>
#include <app/Uno.Comparison__Fuse_Reactive_FuseJS_Timer_Time.h>
#include <app/Uno.Comparison__Fuse_Reactive_JavaScript.h>
#include <app/Uno.Comparison__Fuse_RenderTargetEntry.h>
#include <app/Uno.Comparison__Fuse_Resources_ImageSource.h>
#include <app/Uno.Comparison__Fuse_Resources_IMemoryResource.h>
#include <app/Uno.Comparison__Fuse_Resources_ISoftDisposable.h>
#include <app/Uno.Comparison__Fuse_Scripting_INameListener.h>
#include <app/Uno.Comparison__Fuse_Scripting_NativeMember.h>
#include <app/Uno.Comparison__Fuse_Stage.h>
#include <app/Uno.Comparison__Fuse_Style.h>
#include <app/Uno.Comparison__Fuse_StyleProperty.h>
#include <app/Uno.Comparison__Fuse_Transform.h>
#include <app/Uno.Comparison__Fuse_Triggers_Actions_TriggerAction.h>
#include <app/Uno.Comparison__Fuse_Triggers_State.h>
#include <app/Uno.Comparison__Fuse_UpdateListener.h>
#include <app/Uno.Comparison__int.h>
#include <app/Uno.Comparison__int4.h>
#include <app/Uno.Comparison__object.h>
#include <app/Uno.Comparison__Outracks_Simulator_Bytecode_TypeName.h>
#include <app/Uno.Comparison__Outracks_Simulator_Task_Outracks_Simulator_ISim-5c8678bc.h>
#include <app/Uno.Comparison__Outracks_Simulator_Task_Uno_Net_IPEndPoint___.h>
#include <app/Uno.Comparison__string.h>
#include <app/Uno.Comparison__Uno_Action.h>
#include <app/Uno.Comparison__Uno_CharPunctuationChecker_PunctuationRange.h>
#include <app/Uno.Comparison__Uno_Collections_ConcurrentCollection1_ModItem_F-ca8335e0.h>
#include <app/Uno.Comparison__Uno_Collections_ConcurrentCollection1_ModItem_U-ce2bbf10.h>
#include <app/Uno.Comparison__Uno_Collections_Dictionary_Outracks_Simulator_B-27e7052a.h>
#include <app/Uno.Comparison__Uno_Content_Models_ModelDrawable.h>
#include <app/Uno.Comparison__Uno_Content_Models_ModelNode.h>
#include <app/Uno.Comparison__Uno_Content_Models_ModelParameter_float4x4_.h>
#include <app/Uno.Comparison__Uno_Content_Models_ModelSkin.h>
#include <app/Uno.Comparison__Uno_Content_Models_SkinBone.h>
#include <app/Uno.Comparison__Uno_Content_Models_SkinDrawable.h>
#include <app/Uno.Comparison__Uno_Content_Models_VertexInfluence.h>
#include <app/Uno.Comparison__Uno_Content_Splines_KeyframedSpline2_Key_float_float_.h>
#include <app/Uno.Comparison__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_.h>
#include <app/Uno.Comparison__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_.h>
#include <app/Uno.Comparison__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_.h>
#include <app/Uno.Comparison__Uno_Content_Splines_KeyframedSpline2_Key_float4-5d40e99c.h>
#include <app/Uno.Comparison__Uno_Data_Json_Value.h>
#include <app/Uno.Comparison__Uno_Data_Xml_XmlAttribute.h>
#include <app/Uno.Comparison__Uno_Data_Xml_XmlAttributeHandle.h>
#include <app/Uno.Comparison__Uno_Data_Xml_XmlLinkedNode.h>
#include <app/Uno.Comparison__Uno_Data_Xml_XmlNodeHandle.h>
#include <app/Uno.Comparison__Uno_Diagnostics_ProfileEvent.h>
#include <app/Uno.Comparison__Uno_EventHandler.h>
#include <app/Uno.Comparison__Uno_Exception.h>
#include <app/Uno.Comparison__Uno_Graphics_PolygonFace.h>
#include <app/Uno.Comparison__Uno_Net_Http_HttpMessageHandlerRequest.h>
#include <app/Uno.Comparison__Uno_Platform_Key.h>
#include <app/Uno.Comparison__Uno_Reflection_CppField.h>
#include <app/Uno.Comparison__Uno_Reflection_CppFunction.h>
#include <app/Uno.Comparison__Uno_Runtime_Implementation_Internal_FormatStringToken.h>
#include <app/Uno.Comparison__Uno_UX_FileSource.h>
#include <app/Uno.Comparison__Uno_UX_IFactory.h>
#include <app/Uno.Comparison__Uno_UX_ITemplate.h>
#include <app/Uno.Comparison__Uno_UX_Resource.h>
#include <app/Uno.Content.Models.ModelDrawable.h>
#include <app/Uno.Content.Models.ModelNode.h>
#include <app/Uno.Content.Models.ModelParameter__float4x4.h>
#include <app/Uno.Content.Models.ModelSkin.h>
#include <app/Uno.Content.Models.SkinBone.h>
#include <app/Uno.Content.Models.SkinDrawable.h>
#include <app/Uno.Content.Models.VertexInfluence.h>
#include <app/Uno.Data.Json.Value.h>
#include <app/Uno.Data.Xml.XmlAttribute.h>
#include <app/Uno.Data.Xml.XmlAttributeHandle.h>
#include <app/Uno.Data.Xml.XmlLinkedNode.h>
#include <app/Uno.Data.Xml.XmlNodeHandle.h>
#include <app/Uno.Diagnostics.ProfileEvent.h>
#include <app/Uno.EventHandler.h>
#include <app/Uno.Exception.h>
#include <app/Uno.Generic.h>
#include <app/Uno.Graphics.Framebuffer.h>
#include <app/Uno.Graphics.PolygonFace.h>
#include <app/Uno.IndexOutOfRangeException.h>
#include <app/Uno.Int.h>
#include <app/Uno.Net.Http.HttpMessageHandlerRequest.h>
#include <app/Uno.Platform.Key.h>
#include <app/Uno.Reflection.CppField.h>
#include <app/Uno.Reflection.CppFunction.h>
#include <app/Uno.Runtime.Implementation.Internal.FormatStringToken.h>
#include <app/Uno.String.h>
#include <app/Uno.UX.FileSource.h>
#include <app/Uno.UX.IFactory.h>
#include <app/Uno.UX.ITemplate.h>
#include <app/Uno.UX.Resource.h>

namespace app {
namespace Uno {
namespace Collections {

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__byte__uType* List__byte__typeof()
{
    static ::uStaticStrong<List__byte__uType*> type;
    if (type != NULL) return type;

    type = (List__byte__uType*)::uAllocClassType(sizeof(List__byte__uType), "Uno.Collections.List<byte>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__byte__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__byte__typeof(), offsetof(List__byte__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__byte, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__byte, _data), ::uGetArrayType(::app::Uno::Byte__typeof())),
        ::uNewField("_used", NULL, offsetof(List__byte, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__byte, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__byte__Add, 0, false, ::app::Uno::Byte__typeof()),
        ::uNewFunctionVoid("AddRange", List__byte__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__byte__typeof()),
        ::uNewFunctionVoid("Clear", List__byte__Clear, 0, false),
        ::uNewFunction("Contains", List__byte__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Byte__typeof()),
        ::uNewFunction("get_Count", List__byte__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__byte__get_Item, 0, false, ::app::Uno::Byte__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__byte__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__byte__typeof()),
        ::uNewFunction("IndexOf", List__byte__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Byte__typeof()),
        ::uNewFunctionVoid("Insert", List__byte__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Byte__typeof()),
        ::uNewFunction(".ctor", List__byte__New_1, 0, true, List__byte__typeof()),
        ::uNewFunction(".ctor", List__byte__New_2, 0, true, List__byte__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__byte__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Byte__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__byte__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__byte__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Byte__typeof()),
        ::uNewFunctionVoid("Sort", List__byte__Sort, 0, false, ::app::Uno::Comparison__byte__typeof()),
        ::uNewFunction("ToArray", List__byte__ToArray, 0, false, ::uGetArrayType(::app::Uno::Byte__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__byte__GetEnumerator_boxed(List__byte* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__byte__typeof(), __this->GetEnumerator());
}

void List__byte___ObjInit(List__byte* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__byte___ObjInit_1(List__byte* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Byte__typeof(), capacity);
    __this->_used = 0;
}

void List__byte__Add(List__byte* __this, ::uByte item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(__this->_used++) = item;
    __this->_version++;
}

void List__byte__AddRange(List__byte* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__byte::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uByte i = ::app::Uno::Collections::IEnumerator__byte::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__byte__BoundsCheck(List__byte* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__byte__Clear(List__byte* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__byte__Contains(List__byte* __this, ::uByte item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__byte(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__byte__EnsureCapacity(List__byte* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Byte__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Byte__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::uByte>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(i);
        }

        __this->_data = newData;
    }
}

int List__byte__get_Count(List__byte* __this)
{
    return __this->_used;
}

::uByte List__byte__get_Item(List__byte* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(index);
}

::app::Uno::Collections::List1_Enumerator__byte List__byte__GetEnumerator(List__byte* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__byte__New_1(NULL, __this);
}

int List__byte__IndexOf(List__byte* __this, ::uByte item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__byte(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__byte__Insert(List__byte* __this, int index, ::uByte item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__byte* List__byte__New_1(::uStatic* __this)
{
    List__byte* inst = (List__byte*)::uAllocObject(sizeof(List__byte), List__byte__typeof());
    inst->_ObjInit();
    return inst;
}

List__byte* List__byte__New_2(::uStatic* __this, int capacity)
{
    List__byte* inst = (List__byte*)::uAllocObject(sizeof(List__byte), List__byte__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__byte__Remove(List__byte* __this, ::uByte item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__byte(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__byte__RemoveAt(List__byte* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(__this->_used) = 0;
    __this->_version++;
}

void List__byte__set_Item(List__byte* __this, int index, ::uByte value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(index) = value;
    __this->_version++;
}

void List__byte__Sort(List__byte* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__byte(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__byte__ToArray(List__byte* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Byte__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::uByte>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uByte>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__byte____uType* List__byte____typeof()
{
    static ::uStaticStrong<List__byte____uType*> type;
    if (type != NULL) return type;

    type = (List__byte____uType*)::uAllocClassType(sizeof(List__byte____uType), "Uno.Collections.List<byte[]>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__byte____GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__byte____typeof(), offsetof(List__byte____uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__byte__, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__byte__, _data), ::uGetArrayType(::uGetArrayType(::app::Uno::Byte__typeof()))),
        ::uNewField("_used", NULL, offsetof(List__byte__, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__byte__, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__byte____Add, 0, false, ::uGetArrayType(::app::Uno::Byte__typeof())),
        ::uNewFunctionVoid("AddRange", List__byte____AddRange, 0, false, ::app::Uno::Collections::IEnumerable__byte____typeof()),
        ::uNewFunctionVoid("Clear", List__byte____Clear, 0, false),
        ::uNewFunction("Contains", List__byte____Contains, 0, false, ::app::Uno::Bool__typeof(), ::uGetArrayType(::app::Uno::Byte__typeof())),
        ::uNewFunction("get_Count", List__byte____get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__byte____get_Item, 0, false, ::uGetArrayType(::app::Uno::Byte__typeof()), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__byte____GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__byte____typeof()),
        ::uNewFunction("IndexOf", List__byte____IndexOf, 0, false, ::app::Uno::Int__typeof(), ::uGetArrayType(::app::Uno::Byte__typeof())),
        ::uNewFunctionVoid("Insert", List__byte____Insert, 0, false, ::app::Uno::Int__typeof(), ::uGetArrayType(::app::Uno::Byte__typeof())),
        ::uNewFunction(".ctor", List__byte____New_1, 0, true, List__byte____typeof()),
        ::uNewFunction(".ctor", List__byte____New_2, 0, true, List__byte____typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__byte____Remove, 0, false, ::app::Uno::Bool__typeof(), ::uGetArrayType(::app::Uno::Byte__typeof())),
        ::uNewFunctionVoid("RemoveAt", List__byte____RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__byte____set_Item, 0, false, ::app::Uno::Int__typeof(), ::uGetArrayType(::app::Uno::Byte__typeof())),
        ::uNewFunctionVoid("Sort", List__byte____Sort, 0, false, ::app::Uno::Comparison__byte____typeof()),
        ::uNewFunction("ToArray", List__byte____ToArray, 0, false, ::uGetArrayType(::uGetArrayType(::app::Uno::Byte__typeof()))));

    ::uRegisterType(type);
    return type;
}

::uObject* List__byte____GetEnumerator_boxed(List__byte__* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__byte____typeof(), __this->GetEnumerator());
}

void List__byte_____ObjInit(List__byte__* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__byte_____ObjInit_1(List__byte__* __this, int capacity)
{
    __this->_data = ::uNewArray(::uGetArrayType(::app::Uno::Byte__typeof()), capacity);
    __this->_used = 0;
}

void List__byte____Add(List__byte__* __this, ::uArray* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uArray*>(__this->_used++) = item;
    __this->_version++;
}

void List__byte____AddRange(List__byte__* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__byte__::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uArray* i = ::app::Uno::Collections::IEnumerator__byte__::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__byte____BoundsCheck(List__byte__* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__byte____Clear(List__byte__* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__byte____Contains(List__byte__* __this, ::uArray* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__byte__(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uArray*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__byte____EnsureCapacity(List__byte__* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::uGetArrayType(::app::Uno::Byte__typeof()), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::uGetArrayType(::app::Uno::Byte__typeof()), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uArray*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uArray*>(i);
        }

        __this->_data = newData;
    }
}

int List__byte____get_Count(List__byte__* __this)
{
    return __this->_used;
}

::uArray* List__byte____get_Item(List__byte__* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uArray*>(index);
}

::app::Uno::Collections::List1_Enumerator__byte__ List__byte____GetEnumerator(List__byte__* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__byte____New_1(NULL, __this);
}

int List__byte____IndexOf(List__byte__* __this, ::uArray* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__byte__(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uArray*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__byte____Insert(List__byte__* __this, int index, ::uArray* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uArray*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uArray*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uArray*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__byte__* List__byte____New_1(::uStatic* __this)
{
    List__byte__* inst = (List__byte__*)::uAllocObject(sizeof(List__byte__), List__byte____typeof());
    inst->_ObjInit();
    return inst;
}

List__byte__* List__byte____New_2(::uStatic* __this, int capacity)
{
    List__byte__* inst = (List__byte__*)::uAllocObject(sizeof(List__byte__), List__byte____typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__byte____Remove(List__byte__* __this, ::uArray* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__byte__(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uArray*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__byte____RemoveAt(List__byte__* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uArray*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uArray*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uArray*>(__this->_used) = NULL;
    __this->_version++;
}

void List__byte____set_Item(List__byte__* __this, int index, ::uArray* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uArray*>(index) = value;
    __this->_version++;
}

void List__byte____Sort(List__byte__* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__byte__(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__byte____ToArray(List__byte__* __this)
{
    ::uArray* t = ::uNewArray(::uGetArrayType(::app::Uno::Byte__typeof()), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uArray*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uArray*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__char__uType* List__char__typeof()
{
    static ::uStaticStrong<List__char__uType*> type;
    if (type != NULL) return type;

    type = (List__char__uType*)::uAllocClassType(sizeof(List__char__uType), "Uno.Collections.List<char>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__char__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__char__typeof(), offsetof(List__char__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__char, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__char, _data), ::uGetArrayType(::app::Uno::Char__typeof())),
        ::uNewField("_used", NULL, offsetof(List__char, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__char, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__char__Add, 0, false, ::app::Uno::Char__typeof()),
        ::uNewFunctionVoid("AddRange", List__char__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__char__typeof()),
        ::uNewFunctionVoid("Clear", List__char__Clear, 0, false),
        ::uNewFunction("Contains", List__char__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunction("get_Count", List__char__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__char__get_Item, 0, false, ::app::Uno::Char__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__char__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__char__typeof()),
        ::uNewFunction("IndexOf", List__char__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunctionVoid("Insert", List__char__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunction(".ctor", List__char__New_1, 0, true, List__char__typeof()),
        ::uNewFunction(".ctor", List__char__New_2, 0, true, List__char__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__char__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__char__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__char__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunctionVoid("Sort", List__char__Sort, 0, false, ::app::Uno::Comparison__char__typeof()),
        ::uNewFunction("ToArray", List__char__ToArray, 0, false, ::uGetArrayType(::app::Uno::Char__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__char__GetEnumerator_boxed(List__char* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__char__typeof(), __this->GetEnumerator());
}

void List__char___ObjInit(List__char* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__char___ObjInit_1(List__char* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Char__typeof(), capacity);
    __this->_used = 0;
}

void List__char__Add(List__char* __this, ::uChar item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(__this->_used++) = item;
    __this->_version++;
}

void List__char__AddRange(List__char* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__char::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uChar i = ::app::Uno::Collections::IEnumerator__char::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__char__BoundsCheck(List__char* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__char__Clear(List__char* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__char__Contains(List__char* __this, ::uChar item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__char__EnsureCapacity(List__char* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Char__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Char__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::uChar>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(i);
        }

        __this->_data = newData;
    }
}

int List__char__get_Count(List__char* __this)
{
    return __this->_used;
}

::uChar List__char__get_Item(List__char* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(index);
}

::app::Uno::Collections::List1_Enumerator__char List__char__GetEnumerator(List__char* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__char__New_1(NULL, __this);
}

int List__char__IndexOf(List__char* __this, ::uChar item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__char__Insert(List__char* __this, int index, ::uChar item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__char* List__char__New_1(::uStatic* __this)
{
    List__char* inst = (List__char*)::uAllocObject(sizeof(List__char), List__char__typeof());
    inst->_ObjInit();
    return inst;
}

List__char* List__char__New_2(::uStatic* __this, int capacity)
{
    List__char* inst = (List__char*)::uAllocObject(sizeof(List__char), List__char__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__char__Remove(List__char* __this, ::uChar item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__char__RemoveAt(List__char* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(__this->_used) = 0;
    __this->_version++;
}

void List__char__set_Item(List__char* __this, int index, ::uChar value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(index) = value;
    __this->_version++;
}

void List__char__Sort(List__char* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__char(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__char__ToArray(List__char* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Char__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::uChar>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uChar>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Experimental_Cache_DiskCacheEntry__uType* List__Experimental_Cache_DiskCacheEntry__typeof()
{
    static ::uStaticStrong<List__Experimental_Cache_DiskCacheEntry__uType*> type;
    if (type != NULL) return type;

    type = (List__Experimental_Cache_DiskCacheEntry__uType*)::uAllocClassType(sizeof(List__Experimental_Cache_DiskCacheEntry__uType), "Uno.Collections.List<Experimental.Cache.DiskCacheEntry>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))List__Experimental_Cache_DiskCacheEntry__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Experimental_Cache_DiskCacheEntry__typeof(), offsetof(List__Experimental_Cache_DiskCacheEntry__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Experimental_Cache_DiskCacheEntry__typeof(), offsetof(List__Experimental_Cache_DiskCacheEntry__uType, __interface_1));

    type->SetStrongRefs(
        "_data", offsetof(List__Experimental_Cache_DiskCacheEntry, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Experimental_Cache_DiskCacheEntry, _data), ::uGetArrayType(::app::Experimental::Cache::DiskCacheEntry__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Experimental_Cache_DiskCacheEntry, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Experimental_Cache_DiskCacheEntry, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Experimental_Cache_DiskCacheEntry__Add, 0, false, ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunctionVoid("AddRange", List__Experimental_Cache_DiskCacheEntry__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Experimental_Cache_DiskCacheEntry__typeof()),
        ::uNewFunctionVoid("Clear", List__Experimental_Cache_DiskCacheEntry__Clear, 0, false),
        ::uNewFunction("Contains", List__Experimental_Cache_DiskCacheEntry__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunction("get_Count", List__Experimental_Cache_DiskCacheEntry__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Experimental_Cache_DiskCacheEntry__get_Item, 0, false, ::app::Experimental::Cache::DiskCacheEntry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Experimental_Cache_DiskCacheEntry__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Experimental_Cache_DiskCacheEntry__typeof()),
        ::uNewFunction("IndexOf", List__Experimental_Cache_DiskCacheEntry__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunctionVoid("Insert", List__Experimental_Cache_DiskCacheEntry__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunction(".ctor", List__Experimental_Cache_DiskCacheEntry__New_1, 0, true, List__Experimental_Cache_DiskCacheEntry__typeof()),
        ::uNewFunction(".ctor", List__Experimental_Cache_DiskCacheEntry__New_2, 0, true, List__Experimental_Cache_DiskCacheEntry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Experimental_Cache_DiskCacheEntry__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Experimental_Cache_DiskCacheEntry__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Experimental_Cache_DiskCacheEntry__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunctionVoid("Sort", List__Experimental_Cache_DiskCacheEntry__Sort, 0, false, ::app::Uno::Comparison__Experimental_Cache_DiskCacheEntry__typeof()),
        ::uNewFunction("ToArray", List__Experimental_Cache_DiskCacheEntry__ToArray, 0, false, ::uGetArrayType(::app::Experimental::Cache::DiskCacheEntry__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Experimental_Cache_DiskCacheEntry__GetEnumerator_boxed(List__Experimental_Cache_DiskCacheEntry* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Experimental_Cache_DiskCacheEntry__typeof(), __this->GetEnumerator());
}

void List__Experimental_Cache_DiskCacheEntry___ObjInit(List__Experimental_Cache_DiskCacheEntry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Experimental_Cache_DiskCacheEntry___ObjInit_1(List__Experimental_Cache_DiskCacheEntry* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Experimental::Cache::DiskCacheEntry__typeof(), capacity);
    __this->_used = 0;
}

void List__Experimental_Cache_DiskCacheEntry__Add(List__Experimental_Cache_DiskCacheEntry* __this, ::app::Experimental::Cache::DiskCacheEntry* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Experimental::Cache::DiskCacheEntry*>(__this->_used++) = item;
    __this->_version++;
}

void List__Experimental_Cache_DiskCacheEntry__AddRange(List__Experimental_Cache_DiskCacheEntry* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Experimental_Cache_DiskCacheEntry::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Experimental::Cache::DiskCacheEntry* i = ::app::Uno::Collections::IEnumerator__Experimental_Cache_DiskCacheEntry::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Experimental_Cache_DiskCacheEntry__BoundsCheck(List__Experimental_Cache_DiskCacheEntry* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Experimental_Cache_DiskCacheEntry__Clear(List__Experimental_Cache_DiskCacheEntry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Experimental_Cache_DiskCacheEntry__Contains(List__Experimental_Cache_DiskCacheEntry* __this, ::app::Experimental::Cache::DiskCacheEntry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Experimental_Cache_DiskCacheEntry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Experimental::Cache::DiskCacheEntry*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Experimental_Cache_DiskCacheEntry__EnsureCapacity(List__Experimental_Cache_DiskCacheEntry* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Experimental::Cache::DiskCacheEntry__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Experimental::Cache::DiskCacheEntry__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Experimental::Cache::DiskCacheEntry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Experimental::Cache::DiskCacheEntry*>(i);
        }

        __this->_data = newData;
    }
}

int List__Experimental_Cache_DiskCacheEntry__get_Count(List__Experimental_Cache_DiskCacheEntry* __this)
{
    return __this->_used;
}

::app::Experimental::Cache::DiskCacheEntry* List__Experimental_Cache_DiskCacheEntry__get_Item(List__Experimental_Cache_DiskCacheEntry* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Experimental::Cache::DiskCacheEntry*>(index);
}

::app::Uno::Collections::List1_Enumerator__Experimental_Cache_DiskCacheEntry List__Experimental_Cache_DiskCacheEntry__GetEnumerator(List__Experimental_Cache_DiskCacheEntry* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Experimental_Cache_DiskCacheEntry__New_1(NULL, __this);
}

int List__Experimental_Cache_DiskCacheEntry__IndexOf(List__Experimental_Cache_DiskCacheEntry* __this, ::app::Experimental::Cache::DiskCacheEntry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Experimental_Cache_DiskCacheEntry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Experimental::Cache::DiskCacheEntry*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Experimental_Cache_DiskCacheEntry__Insert(List__Experimental_Cache_DiskCacheEntry* __this, int index, ::app::Experimental::Cache::DiskCacheEntry* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Experimental::Cache::DiskCacheEntry*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Experimental::Cache::DiskCacheEntry*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Experimental::Cache::DiskCacheEntry*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Experimental_Cache_DiskCacheEntry* List__Experimental_Cache_DiskCacheEntry__New_1(::uStatic* __this)
{
    List__Experimental_Cache_DiskCacheEntry* inst = (List__Experimental_Cache_DiskCacheEntry*)::uAllocObject(sizeof(List__Experimental_Cache_DiskCacheEntry), List__Experimental_Cache_DiskCacheEntry__typeof());
    inst->_ObjInit();
    return inst;
}

List__Experimental_Cache_DiskCacheEntry* List__Experimental_Cache_DiskCacheEntry__New_2(::uStatic* __this, int capacity)
{
    List__Experimental_Cache_DiskCacheEntry* inst = (List__Experimental_Cache_DiskCacheEntry*)::uAllocObject(sizeof(List__Experimental_Cache_DiskCacheEntry), List__Experimental_Cache_DiskCacheEntry__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Experimental_Cache_DiskCacheEntry__Remove(List__Experimental_Cache_DiskCacheEntry* __this, ::app::Experimental::Cache::DiskCacheEntry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Experimental_Cache_DiskCacheEntry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Experimental::Cache::DiskCacheEntry*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Experimental_Cache_DiskCacheEntry__RemoveAt(List__Experimental_Cache_DiskCacheEntry* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Experimental::Cache::DiskCacheEntry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Experimental::Cache::DiskCacheEntry*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Experimental::Cache::DiskCacheEntry*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Experimental_Cache_DiskCacheEntry__set_Item(List__Experimental_Cache_DiskCacheEntry* __this, int index, ::app::Experimental::Cache::DiskCacheEntry* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Experimental::Cache::DiskCacheEntry*>(index) = value;
    __this->_version++;
}

void List__Experimental_Cache_DiskCacheEntry__Sort(List__Experimental_Cache_DiskCacheEntry* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Experimental_Cache_DiskCacheEntry(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Experimental_Cache_DiskCacheEntry__ToArray(List__Experimental_Cache_DiskCacheEntry* __this)
{
    ::uArray* t = ::uNewArray(::app::Experimental::Cache::DiskCacheEntry__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Experimental::Cache::DiskCacheEntry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Experimental::Cache::DiskCacheEntry*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__float2__uType* List__float2__typeof()
{
    static ::uStaticStrong<List__float2__uType*> type;
    if (type != NULL) return type;

    type = (List__float2__uType*)::uAllocClassType(sizeof(List__float2__uType), "Uno.Collections.List<float2>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))List__float2__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__float2__typeof(), offsetof(List__float2__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__float2__typeof(), offsetof(List__float2__uType, __interface_1));

    type->SetStrongRefs(
        "_data", offsetof(List__float2, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__float2, _data), ::uGetArrayType(::app::Uno::Float2__typeof())),
        ::uNewField("_used", NULL, offsetof(List__float2, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__float2, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__float2__Add, 0, false, ::app::Uno::Float2__typeof()),
        ::uNewFunctionVoid("AddRange", List__float2__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__float2__typeof()),
        ::uNewFunctionVoid("Clear", List__float2__Clear, 0, false),
        ::uNewFunction("Contains", List__float2__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Float2__typeof()),
        ::uNewFunction("get_Count", List__float2__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__float2__get_Item, 0, false, ::app::Uno::Float2__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__float2__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__float2__typeof()),
        ::uNewFunction("IndexOf", List__float2__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Float2__typeof()),
        ::uNewFunctionVoid("Insert", List__float2__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Float2__typeof()),
        ::uNewFunction(".ctor", List__float2__New_1, 0, true, List__float2__typeof()),
        ::uNewFunction(".ctor", List__float2__New_2, 0, true, List__float2__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__float2__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Float2__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__float2__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__float2__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Float2__typeof()),
        ::uNewFunctionVoid("Sort", List__float2__Sort, 0, false, ::app::Uno::Comparison__float2__typeof()),
        ::uNewFunction("ToArray", List__float2__ToArray, 0, false, ::uGetArrayType(::app::Uno::Float2__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__float2__GetEnumerator_boxed(List__float2* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__float2__typeof(), __this->GetEnumerator());
}

void List__float2___ObjInit(List__float2* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__float2___ObjInit_1(List__float2* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Float2__typeof(), capacity);
    __this->_used = 0;
}

void List__float2__Add(List__float2* __this, ::app::Uno::Float2 item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(__this->_used++) = item;
    __this->_version++;
}

void List__float2__AddRange(List__float2* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__float2::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Float2 i = ::app::Uno::Collections::IEnumerator__float2::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__float2__BoundsCheck(List__float2* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__float2__Clear(List__float2* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__float2__Contains(List__float2* __this, ::app::Uno::Float2 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__float2(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__float2__EnsureCapacity(List__float2* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Float2__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Float2__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Float2>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(i);
        }

        __this->_data = newData;
    }
}

int List__float2__get_Count(List__float2* __this)
{
    return __this->_used;
}

::app::Uno::Float2 List__float2__get_Item(List__float2* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(index);
}

::app::Uno::Collections::List1_Enumerator__float2 List__float2__GetEnumerator(List__float2* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__float2__New_1(NULL, __this);
}

int List__float2__IndexOf(List__float2* __this, ::app::Uno::Float2 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__float2(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__float2__Insert(List__float2* __this, int index, ::app::Uno::Float2 item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__float2* List__float2__New_1(::uStatic* __this)
{
    List__float2* inst = (List__float2*)::uAllocObject(sizeof(List__float2), List__float2__typeof());
    inst->_ObjInit();
    return inst;
}

List__float2* List__float2__New_2(::uStatic* __this, int capacity)
{
    List__float2* inst = (List__float2*)::uAllocObject(sizeof(List__float2), List__float2__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__float2__Remove(List__float2* __this, ::app::Uno::Float2 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__float2(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__float2__RemoveAt(List__float2* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(__this->_used) = ::uDefault< ::app::Uno::Float2>();
    __this->_version++;
}

void List__float2__set_Item(List__float2* __this, int index, ::app::Uno::Float2 value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(index) = value;
    __this->_version++;
}

void List__float2__Sort(List__float2* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__float2(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__float2__ToArray(List__float2* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Float2__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Float2>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float2>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__float3__uType* List__float3__typeof()
{
    static ::uStaticStrong<List__float3__uType*> type;
    if (type != NULL) return type;

    type = (List__float3__uType*)::uAllocClassType(sizeof(List__float3__uType), "Uno.Collections.List<float3>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__float3__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__float3__typeof(), offsetof(List__float3__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__float3, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__float3, _data), ::uGetArrayType(::app::Uno::Float3__typeof())),
        ::uNewField("_used", NULL, offsetof(List__float3, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__float3, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__float3__Add, 0, false, ::app::Uno::Float3__typeof()),
        ::uNewFunctionVoid("AddRange", List__float3__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__float3__typeof()),
        ::uNewFunctionVoid("Clear", List__float3__Clear, 0, false),
        ::uNewFunction("Contains", List__float3__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Float3__typeof()),
        ::uNewFunction("get_Count", List__float3__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__float3__get_Item, 0, false, ::app::Uno::Float3__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__float3__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__float3__typeof()),
        ::uNewFunction("IndexOf", List__float3__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Float3__typeof()),
        ::uNewFunctionVoid("Insert", List__float3__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Float3__typeof()),
        ::uNewFunction(".ctor", List__float3__New_1, 0, true, List__float3__typeof()),
        ::uNewFunction(".ctor", List__float3__New_2, 0, true, List__float3__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__float3__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Float3__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__float3__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__float3__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Float3__typeof()),
        ::uNewFunctionVoid("Sort", List__float3__Sort, 0, false, ::app::Uno::Comparison__float3__typeof()),
        ::uNewFunction("ToArray", List__float3__ToArray, 0, false, ::uGetArrayType(::app::Uno::Float3__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__float3__GetEnumerator_boxed(List__float3* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__float3__typeof(), __this->GetEnumerator());
}

void List__float3___ObjInit(List__float3* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__float3___ObjInit_1(List__float3* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Float3__typeof(), capacity);
    __this->_used = 0;
}

void List__float3__Add(List__float3* __this, ::app::Uno::Float3 item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(__this->_used++) = item;
    __this->_version++;
}

void List__float3__AddRange(List__float3* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__float3::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Float3 i = ::app::Uno::Collections::IEnumerator__float3::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__float3__BoundsCheck(List__float3* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__float3__Clear(List__float3* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__float3__Contains(List__float3* __this, ::app::Uno::Float3 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__float3(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__float3__EnsureCapacity(List__float3* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Float3__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Float3__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Float3>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(i);
        }

        __this->_data = newData;
    }
}

int List__float3__get_Count(List__float3* __this)
{
    return __this->_used;
}

::app::Uno::Float3 List__float3__get_Item(List__float3* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(index);
}

::app::Uno::Collections::List1_Enumerator__float3 List__float3__GetEnumerator(List__float3* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__float3__New_1(NULL, __this);
}

int List__float3__IndexOf(List__float3* __this, ::app::Uno::Float3 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__float3(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__float3__Insert(List__float3* __this, int index, ::app::Uno::Float3 item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__float3* List__float3__New_1(::uStatic* __this)
{
    List__float3* inst = (List__float3*)::uAllocObject(sizeof(List__float3), List__float3__typeof());
    inst->_ObjInit();
    return inst;
}

List__float3* List__float3__New_2(::uStatic* __this, int capacity)
{
    List__float3* inst = (List__float3*)::uAllocObject(sizeof(List__float3), List__float3__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__float3__Remove(List__float3* __this, ::app::Uno::Float3 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__float3(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__float3__RemoveAt(List__float3* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(__this->_used) = ::uDefault< ::app::Uno::Float3>();
    __this->_version++;
}

void List__float3__set_Item(List__float3* __this, int index, ::app::Uno::Float3 value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(index) = value;
    __this->_version++;
}

void List__float3__Sort(List__float3* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__float3(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__float3__ToArray(List__float3* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Float3__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Float3>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float3>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__float4__uType* List__float4__typeof()
{
    static ::uStaticStrong<List__float4__uType*> type;
    if (type != NULL) return type;

    type = (List__float4__uType*)::uAllocClassType(sizeof(List__float4__uType), "Uno.Collections.List<float4>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__float4__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__float4__typeof(), offsetof(List__float4__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__float4, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__float4, _data), ::uGetArrayType(::app::Uno::Float4__typeof())),
        ::uNewField("_used", NULL, offsetof(List__float4, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__float4, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__float4__Add, 0, false, ::app::Uno::Float4__typeof()),
        ::uNewFunctionVoid("AddRange", List__float4__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__float4__typeof()),
        ::uNewFunctionVoid("Clear", List__float4__Clear, 0, false),
        ::uNewFunction("Contains", List__float4__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Float4__typeof()),
        ::uNewFunction("get_Count", List__float4__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__float4__get_Item, 0, false, ::app::Uno::Float4__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__float4__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__float4__typeof()),
        ::uNewFunction("IndexOf", List__float4__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Float4__typeof()),
        ::uNewFunctionVoid("Insert", List__float4__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Float4__typeof()),
        ::uNewFunction(".ctor", List__float4__New_1, 0, true, List__float4__typeof()),
        ::uNewFunction(".ctor", List__float4__New_2, 0, true, List__float4__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__float4__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Float4__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__float4__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__float4__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Float4__typeof()),
        ::uNewFunctionVoid("Sort", List__float4__Sort, 0, false, ::app::Uno::Comparison__float4__typeof()),
        ::uNewFunction("ToArray", List__float4__ToArray, 0, false, ::uGetArrayType(::app::Uno::Float4__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__float4__GetEnumerator_boxed(List__float4* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__float4__typeof(), __this->GetEnumerator());
}

void List__float4___ObjInit(List__float4* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__float4___ObjInit_1(List__float4* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Float4__typeof(), capacity);
    __this->_used = 0;
}

void List__float4__Add(List__float4* __this, ::app::Uno::Float4 item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(__this->_used++) = item;
    __this->_version++;
}

void List__float4__AddRange(List__float4* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__float4::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Float4 i = ::app::Uno::Collections::IEnumerator__float4::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__float4__BoundsCheck(List__float4* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__float4__Clear(List__float4* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__float4__Contains(List__float4* __this, ::app::Uno::Float4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__float4(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__float4__EnsureCapacity(List__float4* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Float4__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Float4__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Float4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(i);
        }

        __this->_data = newData;
    }
}

int List__float4__get_Count(List__float4* __this)
{
    return __this->_used;
}

::app::Uno::Float4 List__float4__get_Item(List__float4* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(index);
}

::app::Uno::Collections::List1_Enumerator__float4 List__float4__GetEnumerator(List__float4* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__float4__New_1(NULL, __this);
}

int List__float4__IndexOf(List__float4* __this, ::app::Uno::Float4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__float4(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__float4__Insert(List__float4* __this, int index, ::app::Uno::Float4 item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__float4* List__float4__New_1(::uStatic* __this)
{
    List__float4* inst = (List__float4*)::uAllocObject(sizeof(List__float4), List__float4__typeof());
    inst->_ObjInit();
    return inst;
}

List__float4* List__float4__New_2(::uStatic* __this, int capacity)
{
    List__float4* inst = (List__float4*)::uAllocObject(sizeof(List__float4), List__float4__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__float4__Remove(List__float4* __this, ::app::Uno::Float4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__float4(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__float4__RemoveAt(List__float4* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(__this->_used) = ::uDefault< ::app::Uno::Float4>();
    __this->_version++;
}

void List__float4__set_Item(List__float4* __this, int index, ::app::Uno::Float4 value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(index) = value;
    __this->_version++;
}

void List__float4__Sort(List__float4* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__float4(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__float4__ToArray(List__float4* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Float4__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Float4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Float4>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__framebuffer__uType* List__framebuffer__typeof()
{
    static ::uStaticStrong<List__framebuffer__uType*> type;
    if (type != NULL) return type;

    type = (List__framebuffer__uType*)::uAllocClassType(sizeof(List__framebuffer__uType), "Uno.Collections.List<framebuffer>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__framebuffer__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__framebuffer__typeof(), offsetof(List__framebuffer__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__framebuffer, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__framebuffer, _data), ::uGetArrayType(::app::Uno::Graphics::Framebuffer__typeof())),
        ::uNewField("_used", NULL, offsetof(List__framebuffer, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__framebuffer, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__framebuffer__Add, 0, false, ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunctionVoid("AddRange", List__framebuffer__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__framebuffer__typeof()),
        ::uNewFunctionVoid("Clear", List__framebuffer__Clear, 0, false),
        ::uNewFunction("Contains", List__framebuffer__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunction("get_Count", List__framebuffer__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__framebuffer__get_Item, 0, false, ::app::Uno::Graphics::Framebuffer__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__framebuffer__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__framebuffer__typeof()),
        ::uNewFunction("IndexOf", List__framebuffer__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunctionVoid("Insert", List__framebuffer__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunction(".ctor", List__framebuffer__New_1, 0, true, List__framebuffer__typeof()),
        ::uNewFunction(".ctor", List__framebuffer__New_2, 0, true, List__framebuffer__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__framebuffer__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__framebuffer__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__framebuffer__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunctionVoid("Sort", List__framebuffer__Sort, 0, false, ::app::Uno::Comparison__framebuffer__typeof()),
        ::uNewFunction("ToArray", List__framebuffer__ToArray, 0, false, ::uGetArrayType(::app::Uno::Graphics::Framebuffer__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__framebuffer__GetEnumerator_boxed(List__framebuffer* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__framebuffer__typeof(), __this->GetEnumerator());
}

void List__framebuffer___ObjInit(List__framebuffer* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__framebuffer___ObjInit_1(List__framebuffer* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Graphics::Framebuffer__typeof(), capacity);
    __this->_used = 0;
}

void List__framebuffer__Add(List__framebuffer* __this, ::app::Uno::Graphics::Framebuffer* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Graphics::Framebuffer*>(__this->_used++) = item;
    __this->_version++;
}

void List__framebuffer__AddRange(List__framebuffer* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__framebuffer::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Graphics::Framebuffer* i = ::app::Uno::Collections::IEnumerator__framebuffer::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__framebuffer__BoundsCheck(List__framebuffer* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__framebuffer__Clear(List__framebuffer* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__framebuffer__Contains(List__framebuffer* __this, ::app::Uno::Graphics::Framebuffer* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Graphics::Framebuffer*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__framebuffer__EnsureCapacity(List__framebuffer* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Graphics::Framebuffer__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Graphics::Framebuffer__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Graphics::Framebuffer*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Graphics::Framebuffer*>(i);
        }

        __this->_data = newData;
    }
}

int List__framebuffer__get_Count(List__framebuffer* __this)
{
    return __this->_used;
}

::app::Uno::Graphics::Framebuffer* List__framebuffer__get_Item(List__framebuffer* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Graphics::Framebuffer*>(index);
}

::app::Uno::Collections::List1_Enumerator__framebuffer List__framebuffer__GetEnumerator(List__framebuffer* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__framebuffer__New_1(NULL, __this);
}

int List__framebuffer__IndexOf(List__framebuffer* __this, ::app::Uno::Graphics::Framebuffer* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Graphics::Framebuffer*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__framebuffer__Insert(List__framebuffer* __this, int index, ::app::Uno::Graphics::Framebuffer* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Graphics::Framebuffer*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Graphics::Framebuffer*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Graphics::Framebuffer*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__framebuffer* List__framebuffer__New_1(::uStatic* __this)
{
    List__framebuffer* inst = (List__framebuffer*)::uAllocObject(sizeof(List__framebuffer), List__framebuffer__typeof());
    inst->_ObjInit();
    return inst;
}

List__framebuffer* List__framebuffer__New_2(::uStatic* __this, int capacity)
{
    List__framebuffer* inst = (List__framebuffer*)::uAllocObject(sizeof(List__framebuffer), List__framebuffer__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__framebuffer__Remove(List__framebuffer* __this, ::app::Uno::Graphics::Framebuffer* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Graphics::Framebuffer*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__framebuffer__RemoveAt(List__framebuffer* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Graphics::Framebuffer*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Graphics::Framebuffer*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Graphics::Framebuffer*>(__this->_used) = NULL;
    __this->_version++;
}

void List__framebuffer__set_Item(List__framebuffer* __this, int index, ::app::Uno::Graphics::Framebuffer* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Graphics::Framebuffer*>(index) = value;
    __this->_version++;
}

void List__framebuffer__Sort(List__framebuffer* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__framebuffer(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__framebuffer__ToArray(List__framebuffer* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Graphics::Framebuffer__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Graphics::Framebuffer*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Graphics::Framebuffer*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_Animator__uType* List__Fuse_Animations_Animator__typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_Animator__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_Animator__uType*)::uAllocClassType(sizeof(List__Fuse_Animations_Animator__uType), "Uno.Collections.List<Fuse.Animations.Animator>", false, 3, 1, 0);

    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Animations::Animator*))List__Fuse_Animations_Animator__Add;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_Animator__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Animations_Animator__typeof(), offsetof(List__Fuse_Animations_Animator__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Animations_Animator__typeof(), offsetof(List__Fuse_Animations_Animator__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_Animator__typeof(), offsetof(List__Fuse_Animations_Animator__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_Animator, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_Animator, _data), ::uGetArrayType(::app::Fuse::Animations::Animator__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_Animator, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_Animator, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_Animator__Add, 0, false, ::app::Fuse::Animations::Animator__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_Animator__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_Animator__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_Animator__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_Animator__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::Animator__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_Animator__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_Animator__get_Item, 0, false, ::app::Fuse::Animations::Animator__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_Animator__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_Animator__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_Animator__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::Animator__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_Animator__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::Animator__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_Animator__New_1, 0, true, List__Fuse_Animations_Animator__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_Animator__New_2, 0, true, List__Fuse_Animations_Animator__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_Animator__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::Animator__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_Animator__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_Animator__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::Animator__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_Animator__Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_Animator__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_Animator__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::Animator__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_Animator__GetEnumerator_boxed(List__Fuse_Animations_Animator* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_Animator__typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_Animator___ObjInit(List__Fuse_Animations_Animator* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_Animator___ObjInit_1(List__Fuse_Animations_Animator* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::Animator__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_Animator__Add(List__Fuse_Animations_Animator* __this, ::app::Fuse::Animations::Animator* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Animator*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_Animator__AddRange(List__Fuse_Animations_Animator* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_Animator::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::Animator* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_Animator::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_Animator__BoundsCheck(List__Fuse_Animations_Animator* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_Animator__Clear(List__Fuse_Animations_Animator* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_Animator__Contains(List__Fuse_Animations_Animator* __this, ::app::Fuse::Animations::Animator* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_Animator(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Animator*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_Animator__EnsureCapacity(List__Fuse_Animations_Animator* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::Animator__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::Animator__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::Animator*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Animator*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_Animator__get_Count(List__Fuse_Animations_Animator* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::Animator* List__Fuse_Animations_Animator__get_Item(List__Fuse_Animations_Animator* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Animator*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_Animator List__Fuse_Animations_Animator__GetEnumerator(List__Fuse_Animations_Animator* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_Animator__New_1(NULL, __this);
}

int List__Fuse_Animations_Animator__IndexOf(List__Fuse_Animations_Animator* __this, ::app::Fuse::Animations::Animator* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_Animator(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Animator*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_Animator__Insert(List__Fuse_Animations_Animator* __this, int index, ::app::Fuse::Animations::Animator* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Animator*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Animator*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Animator*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_Animator* List__Fuse_Animations_Animator__New_1(::uStatic* __this)
{
    List__Fuse_Animations_Animator* inst = (List__Fuse_Animations_Animator*)::uAllocObject(sizeof(List__Fuse_Animations_Animator), List__Fuse_Animations_Animator__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_Animator* List__Fuse_Animations_Animator__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_Animator* inst = (List__Fuse_Animations_Animator*)::uAllocObject(sizeof(List__Fuse_Animations_Animator), List__Fuse_Animations_Animator__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_Animator__Remove(List__Fuse_Animations_Animator* __this, ::app::Fuse::Animations::Animator* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_Animator(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Animator*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_Animator__RemoveAt(List__Fuse_Animations_Animator* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Animator*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Animator*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Animator*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_Animator__set_Item(List__Fuse_Animations_Animator* __this, int index, ::app::Fuse::Animations::Animator* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Animator*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_Animator__Sort(List__Fuse_Animations_Animator* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_Animator(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_Animator__ToArray(List__Fuse_Animations_Animator* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::Animator__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::Animator*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Animator*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_IMixerMaster__uType* List__Fuse_Animations_IMixerMaster__typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_IMixerMaster__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_IMixerMaster__uType*)::uAllocClassType(sizeof(List__Fuse_Animations_IMixerMaster__uType), "Uno.Collections.List<Fuse.Animations.IMixerMaster>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_IMixerMaster__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_IMixerMaster__typeof(), offsetof(List__Fuse_Animations_IMixerMaster__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_IMixerMaster, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_IMixerMaster, _data), ::uGetArrayType(::app::Fuse::Animations::IMixerMaster__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_IMixerMaster, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_IMixerMaster, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_IMixerMaster__Add, 0, false, ::app::Fuse::Animations::IMixerMaster__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_IMixerMaster__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_IMixerMaster__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_IMixerMaster__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_IMixerMaster__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::IMixerMaster__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_IMixerMaster__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_IMixerMaster__get_Item, 0, false, ::app::Fuse::Animations::IMixerMaster__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_IMixerMaster__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_IMixerMaster__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_IMixerMaster__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::IMixerMaster__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_IMixerMaster__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::IMixerMaster__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_IMixerMaster__New_1, 0, true, List__Fuse_Animations_IMixerMaster__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_IMixerMaster__New_2, 0, true, List__Fuse_Animations_IMixerMaster__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_IMixerMaster__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::IMixerMaster__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_IMixerMaster__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_IMixerMaster__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::IMixerMaster__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_IMixerMaster__Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_IMixerMaster__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_IMixerMaster__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::IMixerMaster__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_IMixerMaster__GetEnumerator_boxed(List__Fuse_Animations_IMixerMaster* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_IMixerMaster__typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_IMixerMaster___ObjInit(List__Fuse_Animations_IMixerMaster* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_IMixerMaster___ObjInit_1(List__Fuse_Animations_IMixerMaster* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::IMixerMaster__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_IMixerMaster__Add(List__Fuse_Animations_IMixerMaster* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_IMixerMaster__AddRange(List__Fuse_Animations_IMixerMaster* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_IMixerMaster::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_IMixerMaster::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_IMixerMaster__BoundsCheck(List__Fuse_Animations_IMixerMaster* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_IMixerMaster__Clear(List__Fuse_Animations_IMixerMaster* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_IMixerMaster__Contains(List__Fuse_Animations_IMixerMaster* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_IMixerMaster(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_IMixerMaster__EnsureCapacity(List__Fuse_Animations_IMixerMaster* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::IMixerMaster__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::IMixerMaster__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_IMixerMaster__get_Count(List__Fuse_Animations_IMixerMaster* __this)
{
    return __this->_used;
}

::uObject* List__Fuse_Animations_IMixerMaster__get_Item(List__Fuse_Animations_IMixerMaster* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_IMixerMaster List__Fuse_Animations_IMixerMaster__GetEnumerator(List__Fuse_Animations_IMixerMaster* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_IMixerMaster__New_1(NULL, __this);
}

int List__Fuse_Animations_IMixerMaster__IndexOf(List__Fuse_Animations_IMixerMaster* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_IMixerMaster(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_IMixerMaster__Insert(List__Fuse_Animations_IMixerMaster* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_IMixerMaster* List__Fuse_Animations_IMixerMaster__New_1(::uStatic* __this)
{
    List__Fuse_Animations_IMixerMaster* inst = (List__Fuse_Animations_IMixerMaster*)::uAllocObject(sizeof(List__Fuse_Animations_IMixerMaster), List__Fuse_Animations_IMixerMaster__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_IMixerMaster* List__Fuse_Animations_IMixerMaster__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_IMixerMaster* inst = (List__Fuse_Animations_IMixerMaster*)::uAllocObject(sizeof(List__Fuse_Animations_IMixerMaster), List__Fuse_Animations_IMixerMaster__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_IMixerMaster__Remove(List__Fuse_Animations_IMixerMaster* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_IMixerMaster(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_IMixerMaster__RemoveAt(List__Fuse_Animations_IMixerMaster* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_IMixerMaster__set_Item(List__Fuse_Animations_IMixerMaster* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_IMixerMaster__Sort(List__Fuse_Animations_IMixerMaster* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_IMixerMaster(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_IMixerMaster__ToArray(List__Fuse_Animations_IMixerMaster* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::IMixerMaster__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_Keyframe__uType* List__Fuse_Animations_Keyframe__typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_Keyframe__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_Keyframe__uType*)::uAllocClassType(sizeof(List__Fuse_Animations_Keyframe__uType), "Uno.Collections.List<Fuse.Animations.Keyframe>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::app::Fuse::Animations::Keyframe*(*)(void*, int))List__Fuse_Animations_Keyframe__get_Item;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Animations_Keyframe__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_Keyframe__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Animations_Keyframe__typeof(), offsetof(List__Fuse_Animations_Keyframe__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Animations_Keyframe__typeof(), offsetof(List__Fuse_Animations_Keyframe__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_Keyframe__typeof(), offsetof(List__Fuse_Animations_Keyframe__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_Keyframe, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_Keyframe, _data), ::uGetArrayType(::app::Fuse::Animations::Keyframe__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_Keyframe, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_Keyframe, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_Keyframe__Add, 0, false, ::app::Fuse::Animations::Keyframe__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_Keyframe__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_Keyframe__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_Keyframe__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_Keyframe__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::Keyframe__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_Keyframe__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_Keyframe__get_Item, 0, false, ::app::Fuse::Animations::Keyframe__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_Keyframe__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_Keyframe__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_Keyframe__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::Keyframe__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_Keyframe__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::Keyframe__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_Keyframe__New_1, 0, true, List__Fuse_Animations_Keyframe__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_Keyframe__New_2, 0, true, List__Fuse_Animations_Keyframe__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_Keyframe__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::Keyframe__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_Keyframe__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_Keyframe__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::Keyframe__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_Keyframe__Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_Keyframe__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_Keyframe__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::Keyframe__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_Keyframe__GetEnumerator_boxed(List__Fuse_Animations_Keyframe* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_Keyframe__typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_Keyframe___ObjInit(List__Fuse_Animations_Keyframe* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_Keyframe___ObjInit_1(List__Fuse_Animations_Keyframe* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::Keyframe__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_Keyframe__Add(List__Fuse_Animations_Keyframe* __this, ::app::Fuse::Animations::Keyframe* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Keyframe*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_Keyframe__AddRange(List__Fuse_Animations_Keyframe* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_Keyframe::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::Keyframe* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_Keyframe::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_Keyframe__BoundsCheck(List__Fuse_Animations_Keyframe* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_Keyframe__Clear(List__Fuse_Animations_Keyframe* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_Keyframe__Contains(List__Fuse_Animations_Keyframe* __this, ::app::Fuse::Animations::Keyframe* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_Keyframe(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Keyframe*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_Keyframe__EnsureCapacity(List__Fuse_Animations_Keyframe* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::Keyframe__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::Keyframe__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::Keyframe*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Keyframe*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_Keyframe__get_Count(List__Fuse_Animations_Keyframe* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::Keyframe* List__Fuse_Animations_Keyframe__get_Item(List__Fuse_Animations_Keyframe* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Keyframe*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_Keyframe List__Fuse_Animations_Keyframe__GetEnumerator(List__Fuse_Animations_Keyframe* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_Keyframe__New_1(NULL, __this);
}

int List__Fuse_Animations_Keyframe__IndexOf(List__Fuse_Animations_Keyframe* __this, ::app::Fuse::Animations::Keyframe* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_Keyframe(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Keyframe*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_Keyframe__Insert(List__Fuse_Animations_Keyframe* __this, int index, ::app::Fuse::Animations::Keyframe* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Keyframe*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Keyframe*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Keyframe*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_Keyframe* List__Fuse_Animations_Keyframe__New_1(::uStatic* __this)
{
    List__Fuse_Animations_Keyframe* inst = (List__Fuse_Animations_Keyframe*)::uAllocObject(sizeof(List__Fuse_Animations_Keyframe), List__Fuse_Animations_Keyframe__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_Keyframe* List__Fuse_Animations_Keyframe__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_Keyframe* inst = (List__Fuse_Animations_Keyframe*)::uAllocObject(sizeof(List__Fuse_Animations_Keyframe), List__Fuse_Animations_Keyframe__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_Keyframe__Remove(List__Fuse_Animations_Keyframe* __this, ::app::Fuse::Animations::Keyframe* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_Keyframe(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Keyframe*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_Keyframe__RemoveAt(List__Fuse_Animations_Keyframe* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Keyframe*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Keyframe*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Keyframe*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_Keyframe__set_Item(List__Fuse_Animations_Keyframe* __this, int index, ::app::Fuse::Animations::Keyframe* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::Keyframe*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_Keyframe__Sort(List__Fuse_Animations_Keyframe* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_Keyframe(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_Keyframe__ToArray(List__Fuse_Animations_Keyframe* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::Keyframe__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::Keyframe*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::Keyframe*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_bool___uType* List__Fuse_Animations_MixerHandle_bool___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_bool___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_bool___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_bool___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<bool>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_bool___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_bool___typeof(), offsetof(List__Fuse_Animations_MixerHandle_bool___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_bool_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_bool_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__bool__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_bool_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_bool_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_bool___Add, 0, false, ::app::Fuse::Animations::MixerHandle__bool__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_bool___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_bool___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_bool___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_bool___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__bool__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_bool___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_bool___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_bool___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_bool___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_bool___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__bool__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_bool___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__bool__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_bool___New_1, 0, true, List__Fuse_Animations_MixerHandle_bool___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_bool___New_2, 0, true, List__Fuse_Animations_MixerHandle_bool___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_bool___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__bool__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_bool___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_bool___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__bool__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_bool___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_bool___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_bool___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__bool__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_bool___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_bool_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_bool___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_bool____ObjInit(List__Fuse_Animations_MixerHandle_bool_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_bool____ObjInit_1(List__Fuse_Animations_MixerHandle_bool_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__bool__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_bool___Add(List__Fuse_Animations_MixerHandle_bool_* __this, ::app::Fuse::Animations::MixerHandle__bool* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__bool*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_bool___AddRange(List__Fuse_Animations_MixerHandle_bool_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_bool_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__bool* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_bool_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_bool___BoundsCheck(List__Fuse_Animations_MixerHandle_bool_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_bool___Clear(List__Fuse_Animations_MixerHandle_bool_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_bool___Contains(List__Fuse_Animations_MixerHandle_bool_* __this, ::app::Fuse::Animations::MixerHandle__bool* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_bool_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__bool*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_bool___EnsureCapacity(List__Fuse_Animations_MixerHandle_bool_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__bool__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__bool__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__bool*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__bool*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_bool___get_Count(List__Fuse_Animations_MixerHandle_bool_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__bool* List__Fuse_Animations_MixerHandle_bool___get_Item(List__Fuse_Animations_MixerHandle_bool_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__bool*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_bool_ List__Fuse_Animations_MixerHandle_bool___GetEnumerator(List__Fuse_Animations_MixerHandle_bool_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_bool___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_bool___IndexOf(List__Fuse_Animations_MixerHandle_bool_* __this, ::app::Fuse::Animations::MixerHandle__bool* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_bool_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__bool*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_bool___Insert(List__Fuse_Animations_MixerHandle_bool_* __this, int index, ::app::Fuse::Animations::MixerHandle__bool* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__bool*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__bool*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__bool*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_bool_* List__Fuse_Animations_MixerHandle_bool___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_bool_* inst = (List__Fuse_Animations_MixerHandle_bool_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_bool_), List__Fuse_Animations_MixerHandle_bool___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_bool_* List__Fuse_Animations_MixerHandle_bool___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_bool_* inst = (List__Fuse_Animations_MixerHandle_bool_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_bool_), List__Fuse_Animations_MixerHandle_bool___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_bool___Remove(List__Fuse_Animations_MixerHandle_bool_* __this, ::app::Fuse::Animations::MixerHandle__bool* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_bool_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__bool*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_bool___RemoveAt(List__Fuse_Animations_MixerHandle_bool_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__bool*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__bool*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__bool*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_bool___set_Item(List__Fuse_Animations_MixerHandle_bool_* __this, int index, ::app::Fuse::Animations::MixerHandle__bool* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__bool*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_bool___Sort(List__Fuse_Animations_MixerHandle_bool_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_bool_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_bool___ToArray(List__Fuse_Animations_MixerHandle_bool_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__bool__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__bool*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__bool*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_char___uType* List__Fuse_Animations_MixerHandle_char___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_char___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_char___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_char___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<char>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_char___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_char___typeof(), offsetof(List__Fuse_Animations_MixerHandle_char___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_char_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_char_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__char__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_char_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_char_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_char___Add, 0, false, ::app::Fuse::Animations::MixerHandle__char__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_char___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_char___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_char___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_char___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__char__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_char___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_char___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__char__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_char___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_char___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_char___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__char__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_char___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__char__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_char___New_1, 0, true, List__Fuse_Animations_MixerHandle_char___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_char___New_2, 0, true, List__Fuse_Animations_MixerHandle_char___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_char___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__char__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_char___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_char___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__char__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_char___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_char___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_char___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__char__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_char___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_char_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_char___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_char____ObjInit(List__Fuse_Animations_MixerHandle_char_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_char____ObjInit_1(List__Fuse_Animations_MixerHandle_char_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__char__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_char___Add(List__Fuse_Animations_MixerHandle_char_* __this, ::app::Fuse::Animations::MixerHandle__char* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__char*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_char___AddRange(List__Fuse_Animations_MixerHandle_char_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_char_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__char* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_char_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_char___BoundsCheck(List__Fuse_Animations_MixerHandle_char_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_char___Clear(List__Fuse_Animations_MixerHandle_char_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_char___Contains(List__Fuse_Animations_MixerHandle_char_* __this, ::app::Fuse::Animations::MixerHandle__char* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_char_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__char*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_char___EnsureCapacity(List__Fuse_Animations_MixerHandle_char_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__char__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__char__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__char*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__char*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_char___get_Count(List__Fuse_Animations_MixerHandle_char_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__char* List__Fuse_Animations_MixerHandle_char___get_Item(List__Fuse_Animations_MixerHandle_char_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__char*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_char_ List__Fuse_Animations_MixerHandle_char___GetEnumerator(List__Fuse_Animations_MixerHandle_char_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_char___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_char___IndexOf(List__Fuse_Animations_MixerHandle_char_* __this, ::app::Fuse::Animations::MixerHandle__char* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_char_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__char*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_char___Insert(List__Fuse_Animations_MixerHandle_char_* __this, int index, ::app::Fuse::Animations::MixerHandle__char* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__char*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__char*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__char*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_char_* List__Fuse_Animations_MixerHandle_char___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_char_* inst = (List__Fuse_Animations_MixerHandle_char_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_char_), List__Fuse_Animations_MixerHandle_char___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_char_* List__Fuse_Animations_MixerHandle_char___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_char_* inst = (List__Fuse_Animations_MixerHandle_char_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_char_), List__Fuse_Animations_MixerHandle_char___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_char___Remove(List__Fuse_Animations_MixerHandle_char_* __this, ::app::Fuse::Animations::MixerHandle__char* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_char_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__char*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_char___RemoveAt(List__Fuse_Animations_MixerHandle_char_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__char*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__char*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__char*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_char___set_Item(List__Fuse_Animations_MixerHandle_char_* __this, int index, ::app::Fuse::Animations::MixerHandle__char* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__char*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_char___Sort(List__Fuse_Animations_MixerHandle_char_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_char_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_char___ToArray(List__Fuse_Animations_MixerHandle_char_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__char__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__char*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__char*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_double___uType* List__Fuse_Animations_MixerHandle_double___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_double___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_double___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_double___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<double>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_double___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_double___typeof(), offsetof(List__Fuse_Animations_MixerHandle_double___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_double_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_double_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__double__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_double_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_double_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_double___Add, 0, false, ::app::Fuse::Animations::MixerHandle__double__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_double___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_double___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_double___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_double___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__double__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_double___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_double___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__double__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_double___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_double___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_double___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__double__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_double___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__double__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_double___New_1, 0, true, List__Fuse_Animations_MixerHandle_double___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_double___New_2, 0, true, List__Fuse_Animations_MixerHandle_double___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_double___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__double__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_double___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_double___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__double__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_double___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_double___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_double___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__double__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_double___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_double_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_double___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_double____ObjInit(List__Fuse_Animations_MixerHandle_double_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_double____ObjInit_1(List__Fuse_Animations_MixerHandle_double_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__double__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_double___Add(List__Fuse_Animations_MixerHandle_double_* __this, ::app::Fuse::Animations::MixerHandle__double* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__double*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_double___AddRange(List__Fuse_Animations_MixerHandle_double_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_double_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__double* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_double_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_double___BoundsCheck(List__Fuse_Animations_MixerHandle_double_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_double___Clear(List__Fuse_Animations_MixerHandle_double_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_double___Contains(List__Fuse_Animations_MixerHandle_double_* __this, ::app::Fuse::Animations::MixerHandle__double* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_double_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__double*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_double___EnsureCapacity(List__Fuse_Animations_MixerHandle_double_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__double__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__double__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__double*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__double*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_double___get_Count(List__Fuse_Animations_MixerHandle_double_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__double* List__Fuse_Animations_MixerHandle_double___get_Item(List__Fuse_Animations_MixerHandle_double_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__double*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_double_ List__Fuse_Animations_MixerHandle_double___GetEnumerator(List__Fuse_Animations_MixerHandle_double_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_double___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_double___IndexOf(List__Fuse_Animations_MixerHandle_double_* __this, ::app::Fuse::Animations::MixerHandle__double* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_double_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__double*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_double___Insert(List__Fuse_Animations_MixerHandle_double_* __this, int index, ::app::Fuse::Animations::MixerHandle__double* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__double*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__double*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__double*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_double_* List__Fuse_Animations_MixerHandle_double___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_double_* inst = (List__Fuse_Animations_MixerHandle_double_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_double_), List__Fuse_Animations_MixerHandle_double___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_double_* List__Fuse_Animations_MixerHandle_double___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_double_* inst = (List__Fuse_Animations_MixerHandle_double_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_double_), List__Fuse_Animations_MixerHandle_double___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_double___Remove(List__Fuse_Animations_MixerHandle_double_* __this, ::app::Fuse::Animations::MixerHandle__double* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_double_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__double*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_double___RemoveAt(List__Fuse_Animations_MixerHandle_double_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__double*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__double*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__double*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_double___set_Item(List__Fuse_Animations_MixerHandle_double_* __this, int index, ::app::Fuse::Animations::MixerHandle__double* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__double*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_double___Sort(List__Fuse_Animations_MixerHandle_double_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_double_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_double___ToArray(List__Fuse_Animations_MixerHandle_double_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__double__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__double*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__double*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_float___uType* List__Fuse_Animations_MixerHandle_float___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_float___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_float___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_float___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<float>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_float___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float___typeof(), offsetof(List__Fuse_Animations_MixerHandle_float___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_float_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_float_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__float__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_float_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_float_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_float___Add, 0, false, ::app::Fuse::Animations::MixerHandle__float__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_float___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_float___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_float___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__float__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_float___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_float___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__float__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_float___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_float___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_float___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_float___New_1, 0, true, List__Fuse_Animations_MixerHandle_float___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_float___New_2, 0, true, List__Fuse_Animations_MixerHandle_float___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_float___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__float__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_float___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_float___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_float___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_float___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_float___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__float__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_float___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_float_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_float____ObjInit(List__Fuse_Animations_MixerHandle_float_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_float____ObjInit_1(List__Fuse_Animations_MixerHandle_float_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__float__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_float___Add(List__Fuse_Animations_MixerHandle_float_* __this, ::app::Fuse::Animations::MixerHandle__float* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float___AddRange(List__Fuse_Animations_MixerHandle_float_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__float* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_float_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_float___BoundsCheck(List__Fuse_Animations_MixerHandle_float_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_float___Clear(List__Fuse_Animations_MixerHandle_float_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_float___Contains(List__Fuse_Animations_MixerHandle_float_* __this, ::app::Fuse::Animations::MixerHandle__float* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_float___EnsureCapacity(List__Fuse_Animations_MixerHandle_float_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__float__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__float__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__float*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_float___get_Count(List__Fuse_Animations_MixerHandle_float_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__float* List__Fuse_Animations_MixerHandle_float___get_Item(List__Fuse_Animations_MixerHandle_float_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float_ List__Fuse_Animations_MixerHandle_float___GetEnumerator(List__Fuse_Animations_MixerHandle_float_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_float___IndexOf(List__Fuse_Animations_MixerHandle_float_* __this, ::app::Fuse::Animations::MixerHandle__float* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_float___Insert(List__Fuse_Animations_MixerHandle_float_* __this, int index, ::app::Fuse::Animations::MixerHandle__float* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_float_* List__Fuse_Animations_MixerHandle_float___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_float_* inst = (List__Fuse_Animations_MixerHandle_float_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_float_), List__Fuse_Animations_MixerHandle_float___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_float_* List__Fuse_Animations_MixerHandle_float___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_float_* inst = (List__Fuse_Animations_MixerHandle_float_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_float_), List__Fuse_Animations_MixerHandle_float___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_float___Remove(List__Fuse_Animations_MixerHandle_float_* __this, ::app::Fuse::Animations::MixerHandle__float* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_float___RemoveAt(List__Fuse_Animations_MixerHandle_float_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float___set_Item(List__Fuse_Animations_MixerHandle_float_* __this, int index, ::app::Fuse::Animations::MixerHandle__float* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float___Sort(List__Fuse_Animations_MixerHandle_float_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_float_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_float___ToArray(List__Fuse_Animations_MixerHandle_float_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__float__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__float*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_float2___uType* List__Fuse_Animations_MixerHandle_float2___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_float2___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_float2___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_float2___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<float2>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_float2___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float2___typeof(), offsetof(List__Fuse_Animations_MixerHandle_float2___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_float2_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_float2_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__float2__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_float2_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_float2_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_float2___Add, 0, false, ::app::Fuse::Animations::MixerHandle__float2__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_float2___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float2___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_float2___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_float2___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__float2__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_float2___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_float2___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__float2__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_float2___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float2___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_float2___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float2__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_float2___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float2__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_float2___New_1, 0, true, List__Fuse_Animations_MixerHandle_float2___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_float2___New_2, 0, true, List__Fuse_Animations_MixerHandle_float2___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_float2___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__float2__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_float2___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_float2___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float2__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_float2___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_float2___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_float2___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__float2__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_float2___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_float2_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float2___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_float2____ObjInit(List__Fuse_Animations_MixerHandle_float2_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_float2____ObjInit_1(List__Fuse_Animations_MixerHandle_float2_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__float2__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_float2___Add(List__Fuse_Animations_MixerHandle_float2_* __this, ::app::Fuse::Animations::MixerHandle__float2* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float2*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float2___AddRange(List__Fuse_Animations_MixerHandle_float2_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float2_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__float2* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_float2_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_float2___BoundsCheck(List__Fuse_Animations_MixerHandle_float2_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_float2___Clear(List__Fuse_Animations_MixerHandle_float2_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_float2___Contains(List__Fuse_Animations_MixerHandle_float2_* __this, ::app::Fuse::Animations::MixerHandle__float2* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float2_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float2*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_float2___EnsureCapacity(List__Fuse_Animations_MixerHandle_float2_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__float2__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__float2__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__float2*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float2*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_float2___get_Count(List__Fuse_Animations_MixerHandle_float2_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__float2* List__Fuse_Animations_MixerHandle_float2___get_Item(List__Fuse_Animations_MixerHandle_float2_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float2*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float2_ List__Fuse_Animations_MixerHandle_float2___GetEnumerator(List__Fuse_Animations_MixerHandle_float2_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float2___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_float2___IndexOf(List__Fuse_Animations_MixerHandle_float2_* __this, ::app::Fuse::Animations::MixerHandle__float2* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float2_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float2*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_float2___Insert(List__Fuse_Animations_MixerHandle_float2_* __this, int index, ::app::Fuse::Animations::MixerHandle__float2* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float2*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float2*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float2*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_float2_* List__Fuse_Animations_MixerHandle_float2___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_float2_* inst = (List__Fuse_Animations_MixerHandle_float2_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_float2_), List__Fuse_Animations_MixerHandle_float2___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_float2_* List__Fuse_Animations_MixerHandle_float2___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_float2_* inst = (List__Fuse_Animations_MixerHandle_float2_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_float2_), List__Fuse_Animations_MixerHandle_float2___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_float2___Remove(List__Fuse_Animations_MixerHandle_float2_* __this, ::app::Fuse::Animations::MixerHandle__float2* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float2_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float2*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_float2___RemoveAt(List__Fuse_Animations_MixerHandle_float2_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float2*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float2*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float2*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float2___set_Item(List__Fuse_Animations_MixerHandle_float2_* __this, int index, ::app::Fuse::Animations::MixerHandle__float2* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float2*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float2___Sort(List__Fuse_Animations_MixerHandle_float2_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_float2_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_float2___ToArray(List__Fuse_Animations_MixerHandle_float2_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__float2__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__float2*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float2*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_float3___uType* List__Fuse_Animations_MixerHandle_float3___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_float3___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_float3___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_float3___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<float3>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_float3___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float3___typeof(), offsetof(List__Fuse_Animations_MixerHandle_float3___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_float3_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_float3_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__float3__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_float3_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_float3_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_float3___Add, 0, false, ::app::Fuse::Animations::MixerHandle__float3__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_float3___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float3___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_float3___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_float3___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__float3__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_float3___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_float3___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__float3__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_float3___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float3___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_float3___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float3__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_float3___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float3__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_float3___New_1, 0, true, List__Fuse_Animations_MixerHandle_float3___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_float3___New_2, 0, true, List__Fuse_Animations_MixerHandle_float3___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_float3___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__float3__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_float3___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_float3___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float3__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_float3___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_float3___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_float3___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__float3__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_float3___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_float3_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float3___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_float3____ObjInit(List__Fuse_Animations_MixerHandle_float3_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_float3____ObjInit_1(List__Fuse_Animations_MixerHandle_float3_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__float3__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_float3___Add(List__Fuse_Animations_MixerHandle_float3_* __this, ::app::Fuse::Animations::MixerHandle__float3* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float3*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float3___AddRange(List__Fuse_Animations_MixerHandle_float3_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float3_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__float3* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_float3_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_float3___BoundsCheck(List__Fuse_Animations_MixerHandle_float3_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_float3___Clear(List__Fuse_Animations_MixerHandle_float3_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_float3___Contains(List__Fuse_Animations_MixerHandle_float3_* __this, ::app::Fuse::Animations::MixerHandle__float3* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float3_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float3*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_float3___EnsureCapacity(List__Fuse_Animations_MixerHandle_float3_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__float3__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__float3__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__float3*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float3*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_float3___get_Count(List__Fuse_Animations_MixerHandle_float3_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__float3* List__Fuse_Animations_MixerHandle_float3___get_Item(List__Fuse_Animations_MixerHandle_float3_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float3*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float3_ List__Fuse_Animations_MixerHandle_float3___GetEnumerator(List__Fuse_Animations_MixerHandle_float3_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float3___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_float3___IndexOf(List__Fuse_Animations_MixerHandle_float3_* __this, ::app::Fuse::Animations::MixerHandle__float3* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float3_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float3*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_float3___Insert(List__Fuse_Animations_MixerHandle_float3_* __this, int index, ::app::Fuse::Animations::MixerHandle__float3* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float3*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float3*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float3*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_float3_* List__Fuse_Animations_MixerHandle_float3___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_float3_* inst = (List__Fuse_Animations_MixerHandle_float3_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_float3_), List__Fuse_Animations_MixerHandle_float3___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_float3_* List__Fuse_Animations_MixerHandle_float3___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_float3_* inst = (List__Fuse_Animations_MixerHandle_float3_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_float3_), List__Fuse_Animations_MixerHandle_float3___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_float3___Remove(List__Fuse_Animations_MixerHandle_float3_* __this, ::app::Fuse::Animations::MixerHandle__float3* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float3_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float3*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_float3___RemoveAt(List__Fuse_Animations_MixerHandle_float3_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float3*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float3*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float3*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float3___set_Item(List__Fuse_Animations_MixerHandle_float3_* __this, int index, ::app::Fuse::Animations::MixerHandle__float3* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float3*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float3___Sort(List__Fuse_Animations_MixerHandle_float3_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_float3_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_float3___ToArray(List__Fuse_Animations_MixerHandle_float3_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__float3__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__float3*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float3*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_float4___uType* List__Fuse_Animations_MixerHandle_float4___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_float4___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_float4___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_float4___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<float4>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_float4___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float4___typeof(), offsetof(List__Fuse_Animations_MixerHandle_float4___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_float4_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_float4_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__float4__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_float4_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_float4_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_float4___Add, 0, false, ::app::Fuse::Animations::MixerHandle__float4__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_float4___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float4___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_float4___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_float4___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__float4__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_float4___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_float4___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__float4__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_float4___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float4___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_float4___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float4__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_float4___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float4__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_float4___New_1, 0, true, List__Fuse_Animations_MixerHandle_float4___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_float4___New_2, 0, true, List__Fuse_Animations_MixerHandle_float4___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_float4___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__float4__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_float4___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_float4___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__float4__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_float4___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_float4___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_float4___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__float4__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_float4___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_float4_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float4___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_float4____ObjInit(List__Fuse_Animations_MixerHandle_float4_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_float4____ObjInit_1(List__Fuse_Animations_MixerHandle_float4_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__float4__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_float4___Add(List__Fuse_Animations_MixerHandle_float4_* __this, ::app::Fuse::Animations::MixerHandle__float4* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float4*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float4___AddRange(List__Fuse_Animations_MixerHandle_float4_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_float4_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__float4* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_float4_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_float4___BoundsCheck(List__Fuse_Animations_MixerHandle_float4_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_float4___Clear(List__Fuse_Animations_MixerHandle_float4_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_float4___Contains(List__Fuse_Animations_MixerHandle_float4_* __this, ::app::Fuse::Animations::MixerHandle__float4* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float4*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_float4___EnsureCapacity(List__Fuse_Animations_MixerHandle_float4_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__float4__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__float4__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__float4*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float4*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_float4___get_Count(List__Fuse_Animations_MixerHandle_float4_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__float4* List__Fuse_Animations_MixerHandle_float4___get_Item(List__Fuse_Animations_MixerHandle_float4_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float4*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float4_ List__Fuse_Animations_MixerHandle_float4___GetEnumerator(List__Fuse_Animations_MixerHandle_float4_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_float4___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_float4___IndexOf(List__Fuse_Animations_MixerHandle_float4_* __this, ::app::Fuse::Animations::MixerHandle__float4* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float4*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_float4___Insert(List__Fuse_Animations_MixerHandle_float4_* __this, int index, ::app::Fuse::Animations::MixerHandle__float4* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float4*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float4*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float4*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_float4_* List__Fuse_Animations_MixerHandle_float4___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_float4_* inst = (List__Fuse_Animations_MixerHandle_float4_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_float4_), List__Fuse_Animations_MixerHandle_float4___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_float4_* List__Fuse_Animations_MixerHandle_float4___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_float4_* inst = (List__Fuse_Animations_MixerHandle_float4_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_float4_), List__Fuse_Animations_MixerHandle_float4___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_float4___Remove(List__Fuse_Animations_MixerHandle_float4_* __this, ::app::Fuse::Animations::MixerHandle__float4* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_float4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float4*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_float4___RemoveAt(List__Fuse_Animations_MixerHandle_float4_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float4*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float4*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float4*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float4___set_Item(List__Fuse_Animations_MixerHandle_float4_* __this, int index, ::app::Fuse::Animations::MixerHandle__float4* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__float4*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_float4___Sort(List__Fuse_Animations_MixerHandle_float4_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_float4_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_float4___ToArray(List__Fuse_Animations_MixerHandle_float4_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__float4__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__float4*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__float4*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___uType* List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Animations.AnimationVariant>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Add(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Clear(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Contains(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant* List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_ List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Insert(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_), List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_), List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Remove(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___Sort(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Animations_AnimationVariant_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_AnimationVariant*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___uType* List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Animations.Easing>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Add(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Clear(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Contains(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing* List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_ List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Insert(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_), List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_), List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Remove(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___Sort(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Animations_Easing_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_Easing*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___uType* List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Animations.KeyframeInterpolation>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Add(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Clear(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Contains(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation* List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_ List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Insert(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_), List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_), List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Remove(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___Sort(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Animations_KeyframeInterpolation_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_KeyframeInterpolation*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___uType* List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Animations.MixOp>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Add(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Clear(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Contains(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp* List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_ List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Insert(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_), List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_), List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Remove(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___Sort(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Animations_MixOp_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Animations_MixOp*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___uType* List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Drawing.BlendMode>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Add(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Clear(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Contains(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode* List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_ List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Insert(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Remove(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___Sort(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Drawing_BlendMode_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_BlendMode*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___uType* List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Drawing.Brush>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Add(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Clear(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Contains(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush* List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_ List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Insert(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Remove(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___Sort(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Drawing_Brush_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_Brush*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___uType* List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Drawing.DynamicBrush>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Add(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Clear(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Contains(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush* List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_ List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Insert(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Remove(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___Sort(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Drawing_DynamicBrush_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_DynamicBrush*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___uType* List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Drawing.GradientStop>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Add(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Clear(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Contains(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop* List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_ List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Insert(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Remove(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___Sort(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Drawing_GradientStop_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_GradientStop*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___uType* List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Drawing.LinearGradient>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Add(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Clear(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Contains(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient* List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_ List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Insert(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Remove(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___Sort(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Drawing_LinearGradient_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_LinearGradient*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___uType* List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Drawing.SolidColor>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Add(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Clear(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Contains(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor* List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_ List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Insert(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Remove(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___Sort(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Drawing_SolidColor_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_SolidColor*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___uType* List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Drawing.StaticBrush>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Add(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Clear(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Contains(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush* List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_ List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Insert(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_), List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Remove(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___Sort(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Drawing_StaticBrush_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Drawing_StaticBrush*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.Alignment>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment* List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_ List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_), List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_), List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_Alignment_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Alignment*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.CachingMode>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode* List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_ List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_), List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_), List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_CachingMode_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_CachingMode*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.Element>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_Element___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_Element___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Element___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_Element___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Element___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_Element_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Element_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_Element_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element* List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Element_ List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Element___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_Element_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_), List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_), List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_Element_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_Element_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_Element___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_Element_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Element*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.HitTestMode>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode* List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_ List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_), List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_), List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_HitTestMode_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_HitTestMode*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.SizeUnit>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit* List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_ List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_), List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_), List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_SizeUnit_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_SizeUnit*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.StretchDirection>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_ List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_), List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_), List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchDirection_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchDirection*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.StretchMode>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_ List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_), List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_), List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchMode_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchMode*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.StretchSizing>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_ List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_), List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_), List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_StretchSizing_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_StretchSizing*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.TextAlignment>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_ List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_), List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_), List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextAlignment_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextAlignment*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.TextWrapping>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_ List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_), List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_), List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_TextWrapping_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_TextWrapping*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___uType* List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Elements.Visibility>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Add(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Clear(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Contains(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility* List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_ List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Insert(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_), List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_), List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Remove(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___Sort(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Elements_Visibility_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Elements_Visibility*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Font___uType* List__Fuse_Animations_MixerHandle_Fuse_Font___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Font___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Font___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Font___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Font>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Font___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Font___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Font___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Font_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Font_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Font_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Font_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Font___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Font___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Font___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Font___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Font___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Font___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Font___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Font___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Font___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Font___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Font___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Font___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Font___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Font___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Font___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Font___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Font___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Font___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Font___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Font___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Font___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Font___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Font___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Font____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Font____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Font___Add(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Font* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Font___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Font_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Font* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Font_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Font___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Font___Clear(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Font___Contains(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Font* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Font_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Font___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Font___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Font* List__Fuse_Animations_MixerHandle_Fuse_Font___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Font_ List__Fuse_Animations_MixerHandle_Fuse_Font___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Font___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Font___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Font* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Font_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Font___Insert(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Font* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Font_* List__Fuse_Animations_MixerHandle_Fuse_Font___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Font_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Font_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Font_), List__Fuse_Animations_MixerHandle_Fuse_Font___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Font_* List__Fuse_Animations_MixerHandle_Fuse_Font___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Font_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Font_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Font_), List__Fuse_Animations_MixerHandle_Fuse_Font___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Font___Remove(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Font* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Font_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Font___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Font___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Font* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Font___Sort(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Font_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Font___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Font_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Font__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Font*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___uType* List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Gestures.Edge>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Add(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Clear(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Contains(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge* List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_ List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Insert(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_), List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_), List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Remove(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___Sort(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Gestures_Edge_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_Edge*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___uType* List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Gestures.ScrollDirections>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Add(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Clear(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Contains(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections* List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_ List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Insert(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_), List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_), List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Remove(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___Sort(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Gestures_ScrollDirections_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Gestures_ScrollDirections*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___uType* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Layouts.Dock>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Add(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Clear(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Contains(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_ List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Insert(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_), List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_), List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Remove(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___Sort(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Dock_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Dock*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___uType* List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Layouts.FlowDirection>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Add(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Clear(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Contains(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection* List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_ List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Insert(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_), List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_), List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Remove(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___Sort(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Layouts_FlowDirection_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_FlowDirection*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___uType* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Layouts.Metric>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Add(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Clear(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Contains(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_ List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Insert(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_), List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_), List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Remove(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___Sort(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Metric_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Metric*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___uType* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Layouts.Orientation>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Add(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Clear(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Contains(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_ List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Insert(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_), List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_), List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Remove(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___Sort(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Layouts_Orientation_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Layouts_Orientation*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___uType* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Navigation.NavigationDirection>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Add(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Clear(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Contains(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_ List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Insert(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Remove(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___Sort(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationDirection_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationDirection*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___uType* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Navigation.NavigationEdge>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Add(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Clear(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Contains(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_ List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Insert(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Remove(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___Sort(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationEdge_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationEdge*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___uType* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Navigation.NavigationGotoMode>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Add(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Clear(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Contains(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_ List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Insert(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Remove(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___Sort(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Navigation_NavigationGotoMode_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_NavigationGotoMode*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___uType* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Navigation.SnapTo>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Add(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Clear(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Contains(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_ List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Insert(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Remove(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___Sort(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SnapTo_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SnapTo*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___uType* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Navigation.SwipeDirection>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Add(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Clear(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Contains(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_ List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Insert(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Remove(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___Sort(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeDirection_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeDirection*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___uType* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Navigation.SwipeEnds>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Add(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Clear(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Contains(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_ List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Insert(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_), List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Remove(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___Sort(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Navigation_SwipeEnds_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Navigation_SwipeEnds*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Node___uType* List__Fuse_Animations_MixerHandle_Fuse_Node___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Node___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Node___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Node___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Node>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Node___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Node___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Node___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Node_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Node_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Node_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Node_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Node___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Node___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Node___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Node___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Node___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Node___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Node___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Node___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Node___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Node___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Node___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Node___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Node___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Node___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Node___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Node___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Node___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Node___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Node___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Node___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Node___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Node___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Node___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Node____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Node____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Node___Add(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Node* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Node___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Node_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Node* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Node_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Node___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Node___Clear(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Node___Contains(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Node* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Node_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Node___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Node___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Node* List__Fuse_Animations_MixerHandle_Fuse_Node___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Node_ List__Fuse_Animations_MixerHandle_Fuse_Node___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Node___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Node___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Node* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Node_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Node___Insert(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Node* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Node_* List__Fuse_Animations_MixerHandle_Fuse_Node___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Node_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Node_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Node_), List__Fuse_Animations_MixerHandle_Fuse_Node___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Node_* List__Fuse_Animations_MixerHandle_Fuse_Node___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Node_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Node_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Node_), List__Fuse_Animations_MixerHandle_Fuse_Node___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Node___Remove(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Node* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Node_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Node___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Node___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Node* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Node___Sort(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Node_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Node___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Node_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Node__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Node*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___uType* List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Resources.ImageSource>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Add(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Clear(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Contains(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource* List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_ List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Insert(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_), List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_), List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Remove(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___Sort(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Resources_ImageSource_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Resources_ImageSource*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Transform___uType* List__Fuse_Animations_MixerHandle_Fuse_Transform___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Transform___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Transform___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Transform___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Transform>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Transform___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Transform___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Transform___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Transform_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Transform_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Transform_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Transform_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Transform___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Transform___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Transform___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Transform___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Transform___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Transform___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Transform___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Transform___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Transform___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Transform___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Transform___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Transform___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Transform___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Transform___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Transform___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Transform___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Transform___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Transform___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Transform___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Transform___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Transform___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Transform___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Transform___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform___Add(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Transform* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Transform_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Transform* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Transform_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform___Clear(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Transform___Contains(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Transform* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Transform_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Transform___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Transform* List__Fuse_Animations_MixerHandle_Fuse_Transform___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Transform_ List__Fuse_Animations_MixerHandle_Fuse_Transform___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Transform___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Transform___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Transform* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Transform_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform___Insert(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Transform* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Transform_* List__Fuse_Animations_MixerHandle_Fuse_Transform___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Transform_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Transform_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Transform_), List__Fuse_Animations_MixerHandle_Fuse_Transform___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Transform_* List__Fuse_Animations_MixerHandle_Fuse_Transform___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Transform_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Transform_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Transform_), List__Fuse_Animations_MixerHandle_Fuse_Transform___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Transform___Remove(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Transform* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Transform_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Transform* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Transform___Sort(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Transform_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Transform___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Transform_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Transform__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Transform*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___uType* List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Triggers.Actions.TriggerDirection>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Add(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Clear(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Contains(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection* List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_ List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Insert(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_), List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_), List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Remove(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___Sort(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Triggers_Actions_TriggerDirection_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_Actions_TriggerDirection*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___uType* List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Triggers.State>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_State___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_State___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_State___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Triggers_State___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_State___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Add(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_State_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_State_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Clear(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Contains(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_State_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State* List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_State_ List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_State___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_State_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Insert(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_), List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_), List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Remove(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_State_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___Sort(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Triggers_State_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Triggers_State___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Triggers_State_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_State*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___uType* List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Triggers.StateTransition>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Add(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Clear(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Contains(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition* List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_ List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Insert(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_), List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_), List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Remove(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___Sort(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Triggers_StateTransition_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_StateTransition*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___uType* List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Fuse.Triggers.TriggerBypassMode>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___New_1, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___New_2, 0, true, List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode____ObjInit(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode____ObjInit_1(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Add(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___AddRange(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___BoundsCheck(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Clear(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Contains(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___EnsureCapacity(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___get_Count(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode* List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___get_Item(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_ List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___GetEnumerator(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___IndexOf(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Insert(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_), List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* inst = (List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_), List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Remove(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___RemoveAt(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___set_Item(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, int index, ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___Sort(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode___ToArray(List__Fuse_Animations_MixerHandle_Fuse_Triggers_TriggerBypassMode_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Fuse_Triggers_TriggerBypassMode*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_int___uType* List__Fuse_Animations_MixerHandle_int___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_int___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_int___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_int___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<int>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_int___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int___typeof(), offsetof(List__Fuse_Animations_MixerHandle_int___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_int_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_int_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__int__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_int_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_int_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_int___Add, 0, false, ::app::Fuse::Animations::MixerHandle__int__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_int___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_int___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_int___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__int__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_int___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_int___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__int__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_int___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_int___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_int___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_int___New_1, 0, true, List__Fuse_Animations_MixerHandle_int___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_int___New_2, 0, true, List__Fuse_Animations_MixerHandle_int___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_int___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__int__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_int___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_int___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_int___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_int___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_int___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__int__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_int___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_int_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_int____ObjInit(List__Fuse_Animations_MixerHandle_int_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_int____ObjInit_1(List__Fuse_Animations_MixerHandle_int_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__int__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_int___Add(List__Fuse_Animations_MixerHandle_int_* __this, ::app::Fuse::Animations::MixerHandle__int* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int___AddRange(List__Fuse_Animations_MixerHandle_int_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__int* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_int_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_int___BoundsCheck(List__Fuse_Animations_MixerHandle_int_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_int___Clear(List__Fuse_Animations_MixerHandle_int_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_int___Contains(List__Fuse_Animations_MixerHandle_int_* __this, ::app::Fuse::Animations::MixerHandle__int* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_int___EnsureCapacity(List__Fuse_Animations_MixerHandle_int_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__int__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__int__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__int*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_int___get_Count(List__Fuse_Animations_MixerHandle_int_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__int* List__Fuse_Animations_MixerHandle_int___get_Item(List__Fuse_Animations_MixerHandle_int_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int_ List__Fuse_Animations_MixerHandle_int___GetEnumerator(List__Fuse_Animations_MixerHandle_int_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_int___IndexOf(List__Fuse_Animations_MixerHandle_int_* __this, ::app::Fuse::Animations::MixerHandle__int* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_int___Insert(List__Fuse_Animations_MixerHandle_int_* __this, int index, ::app::Fuse::Animations::MixerHandle__int* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_int_* List__Fuse_Animations_MixerHandle_int___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_int_* inst = (List__Fuse_Animations_MixerHandle_int_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_int_), List__Fuse_Animations_MixerHandle_int___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_int_* List__Fuse_Animations_MixerHandle_int___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_int_* inst = (List__Fuse_Animations_MixerHandle_int_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_int_), List__Fuse_Animations_MixerHandle_int___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_int___Remove(List__Fuse_Animations_MixerHandle_int_* __this, ::app::Fuse::Animations::MixerHandle__int* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_int___RemoveAt(List__Fuse_Animations_MixerHandle_int_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int___set_Item(List__Fuse_Animations_MixerHandle_int_* __this, int index, ::app::Fuse::Animations::MixerHandle__int* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int___Sort(List__Fuse_Animations_MixerHandle_int_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_int_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_int___ToArray(List__Fuse_Animations_MixerHandle_int_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__int__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__int*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_int2___uType* List__Fuse_Animations_MixerHandle_int2___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_int2___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_int2___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_int2___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<int2>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_int2___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int2___typeof(), offsetof(List__Fuse_Animations_MixerHandle_int2___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_int2_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_int2_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__int2__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_int2_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_int2_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_int2___Add, 0, false, ::app::Fuse::Animations::MixerHandle__int2__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_int2___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int2___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_int2___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_int2___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__int2__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_int2___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_int2___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__int2__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_int2___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int2___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_int2___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int2__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_int2___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int2__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_int2___New_1, 0, true, List__Fuse_Animations_MixerHandle_int2___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_int2___New_2, 0, true, List__Fuse_Animations_MixerHandle_int2___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_int2___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__int2__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_int2___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_int2___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int2__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_int2___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_int2___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_int2___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__int2__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_int2___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_int2_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int2___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_int2____ObjInit(List__Fuse_Animations_MixerHandle_int2_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_int2____ObjInit_1(List__Fuse_Animations_MixerHandle_int2_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__int2__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_int2___Add(List__Fuse_Animations_MixerHandle_int2_* __this, ::app::Fuse::Animations::MixerHandle__int2* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int2*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int2___AddRange(List__Fuse_Animations_MixerHandle_int2_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int2_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__int2* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_int2_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_int2___BoundsCheck(List__Fuse_Animations_MixerHandle_int2_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_int2___Clear(List__Fuse_Animations_MixerHandle_int2_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_int2___Contains(List__Fuse_Animations_MixerHandle_int2_* __this, ::app::Fuse::Animations::MixerHandle__int2* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int2_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int2*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_int2___EnsureCapacity(List__Fuse_Animations_MixerHandle_int2_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__int2__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__int2__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__int2*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int2*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_int2___get_Count(List__Fuse_Animations_MixerHandle_int2_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__int2* List__Fuse_Animations_MixerHandle_int2___get_Item(List__Fuse_Animations_MixerHandle_int2_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int2*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int2_ List__Fuse_Animations_MixerHandle_int2___GetEnumerator(List__Fuse_Animations_MixerHandle_int2_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int2___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_int2___IndexOf(List__Fuse_Animations_MixerHandle_int2_* __this, ::app::Fuse::Animations::MixerHandle__int2* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int2_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int2*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_int2___Insert(List__Fuse_Animations_MixerHandle_int2_* __this, int index, ::app::Fuse::Animations::MixerHandle__int2* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int2*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int2*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int2*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_int2_* List__Fuse_Animations_MixerHandle_int2___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_int2_* inst = (List__Fuse_Animations_MixerHandle_int2_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_int2_), List__Fuse_Animations_MixerHandle_int2___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_int2_* List__Fuse_Animations_MixerHandle_int2___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_int2_* inst = (List__Fuse_Animations_MixerHandle_int2_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_int2_), List__Fuse_Animations_MixerHandle_int2___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_int2___Remove(List__Fuse_Animations_MixerHandle_int2_* __this, ::app::Fuse::Animations::MixerHandle__int2* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int2_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int2*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_int2___RemoveAt(List__Fuse_Animations_MixerHandle_int2_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int2*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int2*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int2*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int2___set_Item(List__Fuse_Animations_MixerHandle_int2_* __this, int index, ::app::Fuse::Animations::MixerHandle__int2* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int2*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int2___Sort(List__Fuse_Animations_MixerHandle_int2_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_int2_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_int2___ToArray(List__Fuse_Animations_MixerHandle_int2_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__int2__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__int2*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int2*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_int3___uType* List__Fuse_Animations_MixerHandle_int3___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_int3___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_int3___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_int3___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<int3>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_int3___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int3___typeof(), offsetof(List__Fuse_Animations_MixerHandle_int3___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_int3_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_int3_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__int3__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_int3_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_int3_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_int3___Add, 0, false, ::app::Fuse::Animations::MixerHandle__int3__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_int3___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int3___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_int3___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_int3___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__int3__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_int3___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_int3___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__int3__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_int3___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int3___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_int3___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int3__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_int3___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int3__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_int3___New_1, 0, true, List__Fuse_Animations_MixerHandle_int3___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_int3___New_2, 0, true, List__Fuse_Animations_MixerHandle_int3___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_int3___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__int3__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_int3___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_int3___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int3__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_int3___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_int3___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_int3___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__int3__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_int3___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_int3_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int3___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_int3____ObjInit(List__Fuse_Animations_MixerHandle_int3_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_int3____ObjInit_1(List__Fuse_Animations_MixerHandle_int3_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__int3__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_int3___Add(List__Fuse_Animations_MixerHandle_int3_* __this, ::app::Fuse::Animations::MixerHandle__int3* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int3*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int3___AddRange(List__Fuse_Animations_MixerHandle_int3_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int3_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__int3* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_int3_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_int3___BoundsCheck(List__Fuse_Animations_MixerHandle_int3_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_int3___Clear(List__Fuse_Animations_MixerHandle_int3_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_int3___Contains(List__Fuse_Animations_MixerHandle_int3_* __this, ::app::Fuse::Animations::MixerHandle__int3* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int3_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int3*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_int3___EnsureCapacity(List__Fuse_Animations_MixerHandle_int3_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__int3__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__int3__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__int3*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int3*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_int3___get_Count(List__Fuse_Animations_MixerHandle_int3_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__int3* List__Fuse_Animations_MixerHandle_int3___get_Item(List__Fuse_Animations_MixerHandle_int3_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int3*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int3_ List__Fuse_Animations_MixerHandle_int3___GetEnumerator(List__Fuse_Animations_MixerHandle_int3_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int3___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_int3___IndexOf(List__Fuse_Animations_MixerHandle_int3_* __this, ::app::Fuse::Animations::MixerHandle__int3* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int3_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int3*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_int3___Insert(List__Fuse_Animations_MixerHandle_int3_* __this, int index, ::app::Fuse::Animations::MixerHandle__int3* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int3*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int3*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int3*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_int3_* List__Fuse_Animations_MixerHandle_int3___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_int3_* inst = (List__Fuse_Animations_MixerHandle_int3_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_int3_), List__Fuse_Animations_MixerHandle_int3___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_int3_* List__Fuse_Animations_MixerHandle_int3___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_int3_* inst = (List__Fuse_Animations_MixerHandle_int3_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_int3_), List__Fuse_Animations_MixerHandle_int3___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_int3___Remove(List__Fuse_Animations_MixerHandle_int3_* __this, ::app::Fuse::Animations::MixerHandle__int3* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int3_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int3*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_int3___RemoveAt(List__Fuse_Animations_MixerHandle_int3_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int3*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int3*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int3*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int3___set_Item(List__Fuse_Animations_MixerHandle_int3_* __this, int index, ::app::Fuse::Animations::MixerHandle__int3* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int3*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int3___Sort(List__Fuse_Animations_MixerHandle_int3_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_int3_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_int3___ToArray(List__Fuse_Animations_MixerHandle_int3_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__int3__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__int3*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int3*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_int4___uType* List__Fuse_Animations_MixerHandle_int4___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_int4___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_int4___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_int4___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<int4>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_int4___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int4___typeof(), offsetof(List__Fuse_Animations_MixerHandle_int4___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_int4_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_int4_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__int4__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_int4_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_int4_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_int4___Add, 0, false, ::app::Fuse::Animations::MixerHandle__int4__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_int4___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int4___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_int4___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_int4___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__int4__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_int4___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_int4___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__int4__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_int4___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int4___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_int4___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int4__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_int4___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int4__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_int4___New_1, 0, true, List__Fuse_Animations_MixerHandle_int4___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_int4___New_2, 0, true, List__Fuse_Animations_MixerHandle_int4___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_int4___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__int4__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_int4___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_int4___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__int4__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_int4___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_int4___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_int4___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__int4__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_int4___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_int4_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int4___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_int4____ObjInit(List__Fuse_Animations_MixerHandle_int4_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_int4____ObjInit_1(List__Fuse_Animations_MixerHandle_int4_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__int4__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_int4___Add(List__Fuse_Animations_MixerHandle_int4_* __this, ::app::Fuse::Animations::MixerHandle__int4* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int4*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int4___AddRange(List__Fuse_Animations_MixerHandle_int4_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_int4_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__int4* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_int4_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_int4___BoundsCheck(List__Fuse_Animations_MixerHandle_int4_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_int4___Clear(List__Fuse_Animations_MixerHandle_int4_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_int4___Contains(List__Fuse_Animations_MixerHandle_int4_* __this, ::app::Fuse::Animations::MixerHandle__int4* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int4*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_int4___EnsureCapacity(List__Fuse_Animations_MixerHandle_int4_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__int4__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__int4__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__int4*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int4*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_int4___get_Count(List__Fuse_Animations_MixerHandle_int4_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__int4* List__Fuse_Animations_MixerHandle_int4___get_Item(List__Fuse_Animations_MixerHandle_int4_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int4*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int4_ List__Fuse_Animations_MixerHandle_int4___GetEnumerator(List__Fuse_Animations_MixerHandle_int4_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_int4___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_int4___IndexOf(List__Fuse_Animations_MixerHandle_int4_* __this, ::app::Fuse::Animations::MixerHandle__int4* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int4*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_int4___Insert(List__Fuse_Animations_MixerHandle_int4_* __this, int index, ::app::Fuse::Animations::MixerHandle__int4* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int4*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int4*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int4*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_int4_* List__Fuse_Animations_MixerHandle_int4___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_int4_* inst = (List__Fuse_Animations_MixerHandle_int4_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_int4_), List__Fuse_Animations_MixerHandle_int4___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_int4_* List__Fuse_Animations_MixerHandle_int4___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_int4_* inst = (List__Fuse_Animations_MixerHandle_int4_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_int4_), List__Fuse_Animations_MixerHandle_int4___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_int4___Remove(List__Fuse_Animations_MixerHandle_int4_* __this, ::app::Fuse::Animations::MixerHandle__int4* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_int4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int4*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_int4___RemoveAt(List__Fuse_Animations_MixerHandle_int4_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int4*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int4*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int4*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int4___set_Item(List__Fuse_Animations_MixerHandle_int4_* __this, int index, ::app::Fuse::Animations::MixerHandle__int4* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__int4*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_int4___Sort(List__Fuse_Animations_MixerHandle_int4_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_int4_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_int4___ToArray(List__Fuse_Animations_MixerHandle_int4_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__int4__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__int4*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__int4*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_long___uType* List__Fuse_Animations_MixerHandle_long___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_long___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_long___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_long___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<long>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_long___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_long___typeof(), offsetof(List__Fuse_Animations_MixerHandle_long___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_long_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_long_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__long__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_long_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_long_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_long___Add, 0, false, ::app::Fuse::Animations::MixerHandle__long__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_long___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_long___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_long___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_long___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__long__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_long___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_long___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__long__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_long___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_long___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_long___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__long__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_long___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__long__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_long___New_1, 0, true, List__Fuse_Animations_MixerHandle_long___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_long___New_2, 0, true, List__Fuse_Animations_MixerHandle_long___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_long___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__long__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_long___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_long___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__long__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_long___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_long___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_long___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__long__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_long___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_long_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_long___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_long____ObjInit(List__Fuse_Animations_MixerHandle_long_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_long____ObjInit_1(List__Fuse_Animations_MixerHandle_long_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__long__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_long___Add(List__Fuse_Animations_MixerHandle_long_* __this, ::app::Fuse::Animations::MixerHandle__long* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__long*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_long___AddRange(List__Fuse_Animations_MixerHandle_long_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_long_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__long* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_long_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_long___BoundsCheck(List__Fuse_Animations_MixerHandle_long_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_long___Clear(List__Fuse_Animations_MixerHandle_long_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_long___Contains(List__Fuse_Animations_MixerHandle_long_* __this, ::app::Fuse::Animations::MixerHandle__long* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_long_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__long*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_long___EnsureCapacity(List__Fuse_Animations_MixerHandle_long_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__long__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__long__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__long*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__long*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_long___get_Count(List__Fuse_Animations_MixerHandle_long_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__long* List__Fuse_Animations_MixerHandle_long___get_Item(List__Fuse_Animations_MixerHandle_long_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__long*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_long_ List__Fuse_Animations_MixerHandle_long___GetEnumerator(List__Fuse_Animations_MixerHandle_long_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_long___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_long___IndexOf(List__Fuse_Animations_MixerHandle_long_* __this, ::app::Fuse::Animations::MixerHandle__long* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_long_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__long*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_long___Insert(List__Fuse_Animations_MixerHandle_long_* __this, int index, ::app::Fuse::Animations::MixerHandle__long* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__long*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__long*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__long*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_long_* List__Fuse_Animations_MixerHandle_long___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_long_* inst = (List__Fuse_Animations_MixerHandle_long_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_long_), List__Fuse_Animations_MixerHandle_long___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_long_* List__Fuse_Animations_MixerHandle_long___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_long_* inst = (List__Fuse_Animations_MixerHandle_long_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_long_), List__Fuse_Animations_MixerHandle_long___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_long___Remove(List__Fuse_Animations_MixerHandle_long_* __this, ::app::Fuse::Animations::MixerHandle__long* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_long_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__long*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_long___RemoveAt(List__Fuse_Animations_MixerHandle_long_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__long*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__long*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__long*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_long___set_Item(List__Fuse_Animations_MixerHandle_long_* __this, int index, ::app::Fuse::Animations::MixerHandle__long* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__long*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_long___Sort(List__Fuse_Animations_MixerHandle_long_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_long_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_long___ToArray(List__Fuse_Animations_MixerHandle_long_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__long__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__long*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__long*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_object___uType* List__Fuse_Animations_MixerHandle_object___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_object___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_object___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_object___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<object>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_object___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_object___typeof(), offsetof(List__Fuse_Animations_MixerHandle_object___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_object_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_object_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__object__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_object_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_object_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_object___Add, 0, false, ::app::Fuse::Animations::MixerHandle__object__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_object___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_object___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_object___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_object___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__object__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_object___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_object___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__object__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_object___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_object___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_object___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__object__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_object___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__object__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_object___New_1, 0, true, List__Fuse_Animations_MixerHandle_object___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_object___New_2, 0, true, List__Fuse_Animations_MixerHandle_object___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_object___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__object__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_object___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_object___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__object__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_object___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_object___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_object___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__object__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_object___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_object_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_object___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_object____ObjInit(List__Fuse_Animations_MixerHandle_object_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_object____ObjInit_1(List__Fuse_Animations_MixerHandle_object_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__object__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_object___Add(List__Fuse_Animations_MixerHandle_object_* __this, ::app::Fuse::Animations::MixerHandle__object* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__object*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_object___AddRange(List__Fuse_Animations_MixerHandle_object_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_object_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__object* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_object_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_object___BoundsCheck(List__Fuse_Animations_MixerHandle_object_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_object___Clear(List__Fuse_Animations_MixerHandle_object_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_object___Contains(List__Fuse_Animations_MixerHandle_object_* __this, ::app::Fuse::Animations::MixerHandle__object* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_object_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__object*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_object___EnsureCapacity(List__Fuse_Animations_MixerHandle_object_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__object__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__object__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__object*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__object*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_object___get_Count(List__Fuse_Animations_MixerHandle_object_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__object* List__Fuse_Animations_MixerHandle_object___get_Item(List__Fuse_Animations_MixerHandle_object_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__object*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_object_ List__Fuse_Animations_MixerHandle_object___GetEnumerator(List__Fuse_Animations_MixerHandle_object_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_object___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_object___IndexOf(List__Fuse_Animations_MixerHandle_object_* __this, ::app::Fuse::Animations::MixerHandle__object* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_object_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__object*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_object___Insert(List__Fuse_Animations_MixerHandle_object_* __this, int index, ::app::Fuse::Animations::MixerHandle__object* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__object*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__object*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__object*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_object_* List__Fuse_Animations_MixerHandle_object___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_object_* inst = (List__Fuse_Animations_MixerHandle_object_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_object_), List__Fuse_Animations_MixerHandle_object___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_object_* List__Fuse_Animations_MixerHandle_object___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_object_* inst = (List__Fuse_Animations_MixerHandle_object_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_object_), List__Fuse_Animations_MixerHandle_object___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_object___Remove(List__Fuse_Animations_MixerHandle_object_* __this, ::app::Fuse::Animations::MixerHandle__object* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_object_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__object*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_object___RemoveAt(List__Fuse_Animations_MixerHandle_object_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__object*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__object*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__object*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_object___set_Item(List__Fuse_Animations_MixerHandle_object_* __this, int index, ::app::Fuse::Animations::MixerHandle__object* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__object*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_object___Sort(List__Fuse_Animations_MixerHandle_object_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_object_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_object___ToArray(List__Fuse_Animations_MixerHandle_object_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__object__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__object*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__object*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_short___uType* List__Fuse_Animations_MixerHandle_short___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_short___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_short___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_short___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<short>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_short___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_short___typeof(), offsetof(List__Fuse_Animations_MixerHandle_short___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_short_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_short_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__short__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_short_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_short_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_short___Add, 0, false, ::app::Fuse::Animations::MixerHandle__short__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_short___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_short___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_short___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_short___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__short__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_short___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_short___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__short__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_short___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_short___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_short___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__short__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_short___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__short__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_short___New_1, 0, true, List__Fuse_Animations_MixerHandle_short___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_short___New_2, 0, true, List__Fuse_Animations_MixerHandle_short___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_short___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__short__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_short___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_short___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__short__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_short___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_short___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_short___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__short__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_short___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_short_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_short___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_short____ObjInit(List__Fuse_Animations_MixerHandle_short_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_short____ObjInit_1(List__Fuse_Animations_MixerHandle_short_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__short__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_short___Add(List__Fuse_Animations_MixerHandle_short_* __this, ::app::Fuse::Animations::MixerHandle__short* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__short*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_short___AddRange(List__Fuse_Animations_MixerHandle_short_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_short_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__short* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_short_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_short___BoundsCheck(List__Fuse_Animations_MixerHandle_short_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_short___Clear(List__Fuse_Animations_MixerHandle_short_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_short___Contains(List__Fuse_Animations_MixerHandle_short_* __this, ::app::Fuse::Animations::MixerHandle__short* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_short_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__short*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_short___EnsureCapacity(List__Fuse_Animations_MixerHandle_short_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__short__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__short__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__short*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__short*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_short___get_Count(List__Fuse_Animations_MixerHandle_short_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__short* List__Fuse_Animations_MixerHandle_short___get_Item(List__Fuse_Animations_MixerHandle_short_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__short*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_short_ List__Fuse_Animations_MixerHandle_short___GetEnumerator(List__Fuse_Animations_MixerHandle_short_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_short___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_short___IndexOf(List__Fuse_Animations_MixerHandle_short_* __this, ::app::Fuse::Animations::MixerHandle__short* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_short_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__short*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_short___Insert(List__Fuse_Animations_MixerHandle_short_* __this, int index, ::app::Fuse::Animations::MixerHandle__short* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__short*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__short*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__short*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_short_* List__Fuse_Animations_MixerHandle_short___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_short_* inst = (List__Fuse_Animations_MixerHandle_short_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_short_), List__Fuse_Animations_MixerHandle_short___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_short_* List__Fuse_Animations_MixerHandle_short___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_short_* inst = (List__Fuse_Animations_MixerHandle_short_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_short_), List__Fuse_Animations_MixerHandle_short___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_short___Remove(List__Fuse_Animations_MixerHandle_short_* __this, ::app::Fuse::Animations::MixerHandle__short* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_short_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__short*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_short___RemoveAt(List__Fuse_Animations_MixerHandle_short_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__short*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__short*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__short*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_short___set_Item(List__Fuse_Animations_MixerHandle_short_* __this, int index, ::app::Fuse::Animations::MixerHandle__short* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__short*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_short___Sort(List__Fuse_Animations_MixerHandle_short_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_short_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_short___ToArray(List__Fuse_Animations_MixerHandle_short_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__short__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__short*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__short*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_string___uType* List__Fuse_Animations_MixerHandle_string___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_string___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_string___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_string___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<string>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_string___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_string___typeof(), offsetof(List__Fuse_Animations_MixerHandle_string___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_string_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_string_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__string__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_string_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_string_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_string___Add, 0, false, ::app::Fuse::Animations::MixerHandle__string__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_string___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_string___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_string___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_string___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__string__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_string___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_string___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__string__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_string___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_string___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_string___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__string__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_string___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__string__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_string___New_1, 0, true, List__Fuse_Animations_MixerHandle_string___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_string___New_2, 0, true, List__Fuse_Animations_MixerHandle_string___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_string___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__string__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_string___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_string___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__string__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_string___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_string___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_string___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__string__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_string___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_string_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_string___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_string____ObjInit(List__Fuse_Animations_MixerHandle_string_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_string____ObjInit_1(List__Fuse_Animations_MixerHandle_string_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__string__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_string___Add(List__Fuse_Animations_MixerHandle_string_* __this, ::app::Fuse::Animations::MixerHandle__string* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__string*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_string___AddRange(List__Fuse_Animations_MixerHandle_string_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_string_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__string* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_string_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_string___BoundsCheck(List__Fuse_Animations_MixerHandle_string_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_string___Clear(List__Fuse_Animations_MixerHandle_string_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_string___Contains(List__Fuse_Animations_MixerHandle_string_* __this, ::app::Fuse::Animations::MixerHandle__string* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_string_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__string*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_string___EnsureCapacity(List__Fuse_Animations_MixerHandle_string_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__string__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__string__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__string*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__string*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_string___get_Count(List__Fuse_Animations_MixerHandle_string_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__string* List__Fuse_Animations_MixerHandle_string___get_Item(List__Fuse_Animations_MixerHandle_string_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__string*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_string_ List__Fuse_Animations_MixerHandle_string___GetEnumerator(List__Fuse_Animations_MixerHandle_string_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_string___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_string___IndexOf(List__Fuse_Animations_MixerHandle_string_* __this, ::app::Fuse::Animations::MixerHandle__string* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_string_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__string*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_string___Insert(List__Fuse_Animations_MixerHandle_string_* __this, int index, ::app::Fuse::Animations::MixerHandle__string* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__string*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__string*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__string*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_string_* List__Fuse_Animations_MixerHandle_string___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_string_* inst = (List__Fuse_Animations_MixerHandle_string_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_string_), List__Fuse_Animations_MixerHandle_string___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_string_* List__Fuse_Animations_MixerHandle_string___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_string_* inst = (List__Fuse_Animations_MixerHandle_string_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_string_), List__Fuse_Animations_MixerHandle_string___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_string___Remove(List__Fuse_Animations_MixerHandle_string_* __this, ::app::Fuse::Animations::MixerHandle__string* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_string_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__string*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_string___RemoveAt(List__Fuse_Animations_MixerHandle_string_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__string*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__string*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__string*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_string___set_Item(List__Fuse_Animations_MixerHandle_string_* __this, int index, ::app::Fuse::Animations::MixerHandle__string* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__string*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_string___Sort(List__Fuse_Animations_MixerHandle_string_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_string_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_string___ToArray(List__Fuse_Animations_MixerHandle_string_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__string__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__string*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__string*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Uno_EventArgs___uType* List__Fuse_Animations_MixerHandle_Uno_EventArgs___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Uno_EventArgs___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Uno_EventArgs___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Uno_EventArgs___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Uno.EventArgs>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Uno_EventArgs___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Uno_EventArgs___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Uno_EventArgs___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Uno_EventArgs_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Uno_EventArgs_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Uno_EventArgs_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Uno_EventArgs_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Uno_EventArgs___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Uno_EventArgs___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Uno_EventArgs___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Uno_EventArgs___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Uno_EventArgs___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Uno_EventArgs___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Uno_EventArgs___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Uno_EventArgs___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_EventArgs___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Uno_EventArgs___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Uno_EventArgs___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Uno_EventArgs___New_1, 0, true, List__Fuse_Animations_MixerHandle_Uno_EventArgs___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Uno_EventArgs___New_2, 0, true, List__Fuse_Animations_MixerHandle_Uno_EventArgs___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Uno_EventArgs___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Uno_EventArgs___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Uno_EventArgs___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Uno_EventArgs___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Uno_EventArgs___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Uno_EventArgs___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Uno_EventArgs___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_EventArgs___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs____ObjInit(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs____ObjInit_1(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs___Add(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, ::app::Fuse::Animations::MixerHandle__Uno_EventArgs* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs___AddRange(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Uno_EventArgs_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Uno_EventArgs* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Uno_EventArgs_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs___BoundsCheck(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs___Clear(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Uno_EventArgs___Contains(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, ::app::Fuse::Animations::MixerHandle__Uno_EventArgs* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Uno_EventArgs_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs___EnsureCapacity(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Uno_EventArgs___get_Count(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Uno_EventArgs* List__Fuse_Animations_MixerHandle_Uno_EventArgs___get_Item(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_EventArgs_ List__Fuse_Animations_MixerHandle_Uno_EventArgs___GetEnumerator(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_EventArgs___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Uno_EventArgs___IndexOf(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, ::app::Fuse::Animations::MixerHandle__Uno_EventArgs* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Uno_EventArgs_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs___Insert(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, int index, ::app::Fuse::Animations::MixerHandle__Uno_EventArgs* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Uno_EventArgs_* List__Fuse_Animations_MixerHandle_Uno_EventArgs___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Uno_EventArgs_* inst = (List__Fuse_Animations_MixerHandle_Uno_EventArgs_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Uno_EventArgs_), List__Fuse_Animations_MixerHandle_Uno_EventArgs___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Uno_EventArgs_* List__Fuse_Animations_MixerHandle_Uno_EventArgs___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Uno_EventArgs_* inst = (List__Fuse_Animations_MixerHandle_Uno_EventArgs_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Uno_EventArgs_), List__Fuse_Animations_MixerHandle_Uno_EventArgs___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Uno_EventArgs___Remove(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, ::app::Fuse::Animations::MixerHandle__Uno_EventArgs* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Uno_EventArgs_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs___RemoveAt(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs___set_Item(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, int index, ::app::Fuse::Animations::MixerHandle__Uno_EventArgs* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Uno_EventArgs___Sort(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Uno_EventArgs_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Uno_EventArgs___ToArray(List__Fuse_Animations_MixerHandle_Uno_EventArgs_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_EventArgs__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_EventArgs*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___uType* List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Uno.Platform.iOS.StatusBarStyle>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___New_1, 0, true, List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___New_2, 0, true, List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle____ObjInit(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle____ObjInit_1(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Add(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___AddRange(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___BoundsCheck(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Clear(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Contains(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___EnsureCapacity(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___get_Count(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle* List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___get_Item(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_ List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___GetEnumerator(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___IndexOf(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Insert(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, int index, ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* inst = (List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_), List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* inst = (List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_), List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Remove(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___RemoveAt(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___set_Item(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, int index, ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___Sort(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle___ToArray(List__Fuse_Animations_MixerHandle_Uno_Platform_iOS_StatusBarStyle_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_Platform_iOS_StatusBarStyle*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___uType* List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___typeof()
{
    static ::uStaticStrong<List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___uType*)::uAllocClassType(sizeof(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___uType), "Uno.Collections.List<Fuse.Animations.MixerHandle<Uno.UX.FileSource>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Uno_UX_FileSource___typeof(), offsetof(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_, _data), ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Add, 0, false, ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Uno_UX_FileSource___typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___get_Item, 0, false, ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_UX_FileSource___typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___New_1, 0, true, List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___typeof()),
        ::uNewFunction(".ctor", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___New_2, 0, true, List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Sort, 0, false, ::app::Uno::Comparison__Fuse_Animations_MixerHandle_Uno_UX_FileSource___typeof()),
        ::uNewFunction("ToArray", List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___ToArray, 0, false, ::uGetArrayType(::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___GetEnumerator_boxed(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_UX_FileSource___typeof(), __this->GetEnumerator());
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource____ObjInit(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource____ObjInit_1(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Add(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___AddRange(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Animations_MixerHandle_Uno_UX_FileSource_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource* i = ::app::Uno::Collections::IEnumerator__Fuse_Animations_MixerHandle_Uno_UX_FileSource_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___BoundsCheck(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Clear(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Contains(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Uno_UX_FileSource_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___EnsureCapacity(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___get_Count(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this)
{
    return __this->_used;
}

::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource* List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___get_Item(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_UX_FileSource_ List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___GetEnumerator(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Animations_MixerHandle_Uno_UX_FileSource___New_1(NULL, __this);
}

int List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___IndexOf(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Uno_UX_FileSource_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Insert(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, int index, ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___New_1(::uStatic* __this)
{
    List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* inst = (List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_), List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* inst = (List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_*)::uAllocObject(sizeof(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_), List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Remove(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Animations_MixerHandle_Uno_UX_FileSource_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___RemoveAt(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___set_Item(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, int index, ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(index) = value;
    __this->_version++;
}

void List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___Sort(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Animations_MixerHandle_Uno_UX_FileSource_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Animations_MixerHandle_Uno_UX_FileSource___ToArray(List__Fuse_Animations_MixerHandle_Uno_UX_FileSource_* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Animations::MixerHandle__Uno_UX_FileSource*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Behavior__uType* List__Fuse_Behavior__typeof()
{
    static ::uStaticStrong<List__Fuse_Behavior__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Behavior__uType*)::uAllocClassType(sizeof(List__Fuse_Behavior__uType), "Uno.Collections.List<Fuse.Behavior>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::app::Fuse::Behavior*(*)(void*, int))List__Fuse_Behavior__get_Item;
    type->__interface_1.__fp_Clear = (void(*)(void*))List__Fuse_Behavior__Clear;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Behavior*))List__Fuse_Behavior__Add;
    type->__interface_1.__fp_Remove = (bool(*)(void*, ::app::Fuse::Behavior*))List__Fuse_Behavior__Remove;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Behavior__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Behavior__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Behavior__typeof(), offsetof(List__Fuse_Behavior__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Behavior__typeof(), offsetof(List__Fuse_Behavior__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Behavior__typeof(), offsetof(List__Fuse_Behavior__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Behavior, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Behavior, _data), ::uGetArrayType(::app::Fuse::Behavior__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Behavior, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Behavior, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Behavior__Add, 0, false, ::app::Fuse::Behavior__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Behavior__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Behavior__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Behavior__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Behavior__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Behavior__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Behavior__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Behavior__get_Item, 0, false, ::app::Fuse::Behavior__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Behavior__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Behavior__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Behavior__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Behavior__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Behavior__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Behavior__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Behavior__New_1, 0, true, List__Fuse_Behavior__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Behavior__New_2, 0, true, List__Fuse_Behavior__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Behavior__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Behavior__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Behavior__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Behavior__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Behavior__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Behavior__Sort, 0, false, ::app::Uno::Comparison__Fuse_Behavior__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Behavior__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Behavior__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Behavior__GetEnumerator_boxed(List__Fuse_Behavior* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Behavior__typeof(), __this->GetEnumerator());
}

void List__Fuse_Behavior___ObjInit(List__Fuse_Behavior* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Behavior___ObjInit_1(List__Fuse_Behavior* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Behavior__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Behavior__Add(List__Fuse_Behavior* __this, ::app::Fuse::Behavior* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Behavior*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Behavior__AddRange(List__Fuse_Behavior* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Behavior::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Behavior* i = ::app::Uno::Collections::IEnumerator__Fuse_Behavior::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Behavior__BoundsCheck(List__Fuse_Behavior* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Behavior__Clear(List__Fuse_Behavior* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Behavior__Contains(List__Fuse_Behavior* __this, ::app::Fuse::Behavior* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Behavior(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Behavior*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Behavior__EnsureCapacity(List__Fuse_Behavior* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Behavior__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Behavior__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Behavior*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Behavior*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Behavior__get_Count(List__Fuse_Behavior* __this)
{
    return __this->_used;
}

::app::Fuse::Behavior* List__Fuse_Behavior__get_Item(List__Fuse_Behavior* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Behavior*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Behavior List__Fuse_Behavior__GetEnumerator(List__Fuse_Behavior* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Behavior__New_1(NULL, __this);
}

int List__Fuse_Behavior__IndexOf(List__Fuse_Behavior* __this, ::app::Fuse::Behavior* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Behavior(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Behavior*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Behavior__Insert(List__Fuse_Behavior* __this, int index, ::app::Fuse::Behavior* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Behavior*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Behavior*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Behavior*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Behavior* List__Fuse_Behavior__New_1(::uStatic* __this)
{
    List__Fuse_Behavior* inst = (List__Fuse_Behavior*)::uAllocObject(sizeof(List__Fuse_Behavior), List__Fuse_Behavior__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Behavior* List__Fuse_Behavior__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Behavior* inst = (List__Fuse_Behavior*)::uAllocObject(sizeof(List__Fuse_Behavior), List__Fuse_Behavior__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Behavior__Remove(List__Fuse_Behavior* __this, ::app::Fuse::Behavior* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Behavior(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Behavior*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Behavior__RemoveAt(List__Fuse_Behavior* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Behavior*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Behavior*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Behavior*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Behavior__set_Item(List__Fuse_Behavior* __this, int index, ::app::Fuse::Behavior* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Behavior*>(index) = value;
    __this->_version++;
}

void List__Fuse_Behavior__Sort(List__Fuse_Behavior* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Behavior(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Behavior__ToArray(List__Fuse_Behavior* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Behavior__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Behavior*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Behavior*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_CacheFramebuffer__uType* List__Fuse_CacheFramebuffer__typeof()
{
    static ::uStaticStrong<List__Fuse_CacheFramebuffer__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_CacheFramebuffer__uType*)::uAllocClassType(sizeof(List__Fuse_CacheFramebuffer__uType), "Uno.Collections.List<Fuse.CacheFramebuffer>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_CacheFramebuffer__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_CacheFramebuffer__typeof(), offsetof(List__Fuse_CacheFramebuffer__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_CacheFramebuffer, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_CacheFramebuffer, _data), ::uGetArrayType(::app::Fuse::CacheFramebuffer__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_CacheFramebuffer, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_CacheFramebuffer, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_CacheFramebuffer__Add, 0, false, ::app::Fuse::CacheFramebuffer__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_CacheFramebuffer__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_CacheFramebuffer__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_CacheFramebuffer__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_CacheFramebuffer__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::CacheFramebuffer__typeof()),
        ::uNewFunction("get_Count", List__Fuse_CacheFramebuffer__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_CacheFramebuffer__get_Item, 0, false, ::app::Fuse::CacheFramebuffer__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_CacheFramebuffer__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_CacheFramebuffer__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_CacheFramebuffer__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::CacheFramebuffer__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_CacheFramebuffer__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::CacheFramebuffer__typeof()),
        ::uNewFunction(".ctor", List__Fuse_CacheFramebuffer__New_1, 0, true, List__Fuse_CacheFramebuffer__typeof()),
        ::uNewFunction(".ctor", List__Fuse_CacheFramebuffer__New_2, 0, true, List__Fuse_CacheFramebuffer__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_CacheFramebuffer__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::CacheFramebuffer__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_CacheFramebuffer__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_CacheFramebuffer__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::CacheFramebuffer__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_CacheFramebuffer__Sort, 0, false, ::app::Uno::Comparison__Fuse_CacheFramebuffer__typeof()),
        ::uNewFunction("ToArray", List__Fuse_CacheFramebuffer__ToArray, 0, false, ::uGetArrayType(::app::Fuse::CacheFramebuffer__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_CacheFramebuffer__GetEnumerator_boxed(List__Fuse_CacheFramebuffer* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_CacheFramebuffer__typeof(), __this->GetEnumerator());
}

void List__Fuse_CacheFramebuffer___ObjInit(List__Fuse_CacheFramebuffer* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_CacheFramebuffer___ObjInit_1(List__Fuse_CacheFramebuffer* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::CacheFramebuffer__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_CacheFramebuffer__Add(List__Fuse_CacheFramebuffer* __this, ::app::Fuse::CacheFramebuffer* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::CacheFramebuffer*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_CacheFramebuffer__AddRange(List__Fuse_CacheFramebuffer* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_CacheFramebuffer::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::CacheFramebuffer* i = ::app::Uno::Collections::IEnumerator__Fuse_CacheFramebuffer::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_CacheFramebuffer__BoundsCheck(List__Fuse_CacheFramebuffer* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_CacheFramebuffer__Clear(List__Fuse_CacheFramebuffer* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_CacheFramebuffer__Contains(List__Fuse_CacheFramebuffer* __this, ::app::Fuse::CacheFramebuffer* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_CacheFramebuffer(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::CacheFramebuffer*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_CacheFramebuffer__EnsureCapacity(List__Fuse_CacheFramebuffer* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::CacheFramebuffer__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::CacheFramebuffer__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::CacheFramebuffer*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::CacheFramebuffer*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_CacheFramebuffer__get_Count(List__Fuse_CacheFramebuffer* __this)
{
    return __this->_used;
}

::app::Fuse::CacheFramebuffer* List__Fuse_CacheFramebuffer__get_Item(List__Fuse_CacheFramebuffer* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::CacheFramebuffer*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_CacheFramebuffer List__Fuse_CacheFramebuffer__GetEnumerator(List__Fuse_CacheFramebuffer* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_CacheFramebuffer__New_1(NULL, __this);
}

int List__Fuse_CacheFramebuffer__IndexOf(List__Fuse_CacheFramebuffer* __this, ::app::Fuse::CacheFramebuffer* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_CacheFramebuffer(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::CacheFramebuffer*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_CacheFramebuffer__Insert(List__Fuse_CacheFramebuffer* __this, int index, ::app::Fuse::CacheFramebuffer* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::CacheFramebuffer*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::CacheFramebuffer*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::CacheFramebuffer*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_CacheFramebuffer* List__Fuse_CacheFramebuffer__New_1(::uStatic* __this)
{
    List__Fuse_CacheFramebuffer* inst = (List__Fuse_CacheFramebuffer*)::uAllocObject(sizeof(List__Fuse_CacheFramebuffer), List__Fuse_CacheFramebuffer__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_CacheFramebuffer* List__Fuse_CacheFramebuffer__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_CacheFramebuffer* inst = (List__Fuse_CacheFramebuffer*)::uAllocObject(sizeof(List__Fuse_CacheFramebuffer), List__Fuse_CacheFramebuffer__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_CacheFramebuffer__Remove(List__Fuse_CacheFramebuffer* __this, ::app::Fuse::CacheFramebuffer* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_CacheFramebuffer(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::CacheFramebuffer*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_CacheFramebuffer__RemoveAt(List__Fuse_CacheFramebuffer* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::CacheFramebuffer*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::CacheFramebuffer*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::CacheFramebuffer*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_CacheFramebuffer__set_Item(List__Fuse_CacheFramebuffer* __this, int index, ::app::Fuse::CacheFramebuffer* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::CacheFramebuffer*>(index) = value;
    __this->_version++;
}

void List__Fuse_CacheFramebuffer__Sort(List__Fuse_CacheFramebuffer* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_CacheFramebuffer(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_CacheFramebuffer__ToArray(List__Fuse_CacheFramebuffer* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::CacheFramebuffer__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::CacheFramebuffer*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::CacheFramebuffer*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Controls_Control__uType* List__Fuse_Controls_Control__typeof()
{
    static ::uStaticStrong<List__Fuse_Controls_Control__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Controls_Control__uType*)::uAllocClassType(sizeof(List__Fuse_Controls_Control__uType), "Uno.Collections.List<Fuse.Controls.Control>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Controls_Control__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Controls_Control__typeof(), offsetof(List__Fuse_Controls_Control__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Controls_Control, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Controls_Control, _data), ::uGetArrayType(::app::Fuse::Controls::Control__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Controls_Control, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Controls_Control, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Controls_Control__Add, 0, false, ::app::Fuse::Controls::Control__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Controls_Control__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Controls_Control__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Controls_Control__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Controls_Control__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::Control__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Controls_Control__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Controls_Control__get_Item, 0, false, ::app::Fuse::Controls::Control__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Controls_Control__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Control__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Controls_Control__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::Control__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Controls_Control__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::Control__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Controls_Control__New_1, 0, true, List__Fuse_Controls_Control__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Controls_Control__New_2, 0, true, List__Fuse_Controls_Control__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Controls_Control__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::Control__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Controls_Control__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Controls_Control__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::Control__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Controls_Control__Sort, 0, false, ::app::Uno::Comparison__Fuse_Controls_Control__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Controls_Control__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Controls::Control__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Controls_Control__GetEnumerator_boxed(List__Fuse_Controls_Control* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Control__typeof(), __this->GetEnumerator());
}

void List__Fuse_Controls_Control___ObjInit(List__Fuse_Controls_Control* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Controls_Control___ObjInit_1(List__Fuse_Controls_Control* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Controls::Control__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Controls_Control__Add(List__Fuse_Controls_Control* __this, ::app::Fuse::Controls::Control* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Control*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Controls_Control__AddRange(List__Fuse_Controls_Control* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Controls_Control::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Controls::Control* i = ::app::Uno::Collections::IEnumerator__Fuse_Controls_Control::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Controls_Control__BoundsCheck(List__Fuse_Controls_Control* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Controls_Control__Clear(List__Fuse_Controls_Control* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Controls_Control__Contains(List__Fuse_Controls_Control* __this, ::app::Fuse::Controls::Control* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_Control(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Control*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Controls_Control__EnsureCapacity(List__Fuse_Controls_Control* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Controls::Control__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Controls::Control__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Controls::Control*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Control*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Controls_Control__get_Count(List__Fuse_Controls_Control* __this)
{
    return __this->_used;
}

::app::Fuse::Controls::Control* List__Fuse_Controls_Control__get_Item(List__Fuse_Controls_Control* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Control*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Control List__Fuse_Controls_Control__GetEnumerator(List__Fuse_Controls_Control* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Control__New_1(NULL, __this);
}

int List__Fuse_Controls_Control__IndexOf(List__Fuse_Controls_Control* __this, ::app::Fuse::Controls::Control* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_Control(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Control*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Controls_Control__Insert(List__Fuse_Controls_Control* __this, int index, ::app::Fuse::Controls::Control* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Control*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Control*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Control*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Controls_Control* List__Fuse_Controls_Control__New_1(::uStatic* __this)
{
    List__Fuse_Controls_Control* inst = (List__Fuse_Controls_Control*)::uAllocObject(sizeof(List__Fuse_Controls_Control), List__Fuse_Controls_Control__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Controls_Control* List__Fuse_Controls_Control__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Controls_Control* inst = (List__Fuse_Controls_Control*)::uAllocObject(sizeof(List__Fuse_Controls_Control), List__Fuse_Controls_Control__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Controls_Control__Remove(List__Fuse_Controls_Control* __this, ::app::Fuse::Controls::Control* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_Control(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Control*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Controls_Control__RemoveAt(List__Fuse_Controls_Control* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Control*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Control*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Control*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Controls_Control__set_Item(List__Fuse_Controls_Control* __this, int index, ::app::Fuse::Controls::Control* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Control*>(index) = value;
    __this->_version++;
}

void List__Fuse_Controls_Control__Sort(List__Fuse_Controls_Control* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Controls_Control(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Controls_Control__ToArray(List__Fuse_Controls_Control* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Controls::Control__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Controls::Control*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Control*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Controls_Internal_WordWrapperWord__uType* List__Fuse_Controls_Internal_WordWrapperWord__typeof()
{
    static ::uStaticStrong<List__Fuse_Controls_Internal_WordWrapperWord__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Controls_Internal_WordWrapperWord__uType*)::uAllocClassType(sizeof(List__Fuse_Controls_Internal_WordWrapperWord__uType), "Uno.Collections.List<Fuse.Controls.Internal.WordWrapperWord>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Controls_Internal_WordWrapperWord__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Controls_Internal_WordWrapperWord__typeof(), offsetof(List__Fuse_Controls_Internal_WordWrapperWord__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Controls_Internal_WordWrapperWord, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Controls_Internal_WordWrapperWord, _data), ::uGetArrayType(::app::Fuse::Controls::Internal::WordWrapperWord__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Controls_Internal_WordWrapperWord, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Controls_Internal_WordWrapperWord, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Controls_Internal_WordWrapperWord__Add, 0, false, ::app::Fuse::Controls::Internal::WordWrapperWord__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Controls_Internal_WordWrapperWord__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Controls_Internal_WordWrapperWord__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Controls_Internal_WordWrapperWord__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Controls_Internal_WordWrapperWord__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::Internal::WordWrapperWord__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Controls_Internal_WordWrapperWord__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Controls_Internal_WordWrapperWord__get_Item, 0, false, ::app::Fuse::Controls::Internal::WordWrapperWord__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Controls_Internal_WordWrapperWord__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Internal_WordWrapperWord__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Controls_Internal_WordWrapperWord__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::Internal::WordWrapperWord__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Controls_Internal_WordWrapperWord__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::Internal::WordWrapperWord__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Controls_Internal_WordWrapperWord__New_1, 0, true, List__Fuse_Controls_Internal_WordWrapperWord__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Controls_Internal_WordWrapperWord__New_2, 0, true, List__Fuse_Controls_Internal_WordWrapperWord__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Controls_Internal_WordWrapperWord__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::Internal::WordWrapperWord__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Controls_Internal_WordWrapperWord__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Controls_Internal_WordWrapperWord__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::Internal::WordWrapperWord__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Controls_Internal_WordWrapperWord__Sort, 0, false, ::app::Uno::Comparison__Fuse_Controls_Internal_WordWrapperWord__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Controls_Internal_WordWrapperWord__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Controls::Internal::WordWrapperWord__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Controls_Internal_WordWrapperWord__GetEnumerator_boxed(List__Fuse_Controls_Internal_WordWrapperWord* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Internal_WordWrapperWord__typeof(), __this->GetEnumerator());
}

void List__Fuse_Controls_Internal_WordWrapperWord___ObjInit(List__Fuse_Controls_Internal_WordWrapperWord* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Controls_Internal_WordWrapperWord___ObjInit_1(List__Fuse_Controls_Internal_WordWrapperWord* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Controls::Internal::WordWrapperWord__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Controls_Internal_WordWrapperWord__Add(List__Fuse_Controls_Internal_WordWrapperWord* __this, ::app::Fuse::Controls::Internal::WordWrapperWord* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WordWrapperWord*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Controls_Internal_WordWrapperWord__AddRange(List__Fuse_Controls_Internal_WordWrapperWord* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Controls_Internal_WordWrapperWord::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Controls::Internal::WordWrapperWord* i = ::app::Uno::Collections::IEnumerator__Fuse_Controls_Internal_WordWrapperWord::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Controls_Internal_WordWrapperWord__BoundsCheck(List__Fuse_Controls_Internal_WordWrapperWord* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Controls_Internal_WordWrapperWord__Clear(List__Fuse_Controls_Internal_WordWrapperWord* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Controls_Internal_WordWrapperWord__Contains(List__Fuse_Controls_Internal_WordWrapperWord* __this, ::app::Fuse::Controls::Internal::WordWrapperWord* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_WordWrapperWord(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Controls_Internal_WordWrapperWord__EnsureCapacity(List__Fuse_Controls_Internal_WordWrapperWord* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Controls::Internal::WordWrapperWord__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Controls::Internal::WordWrapperWord__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Controls_Internal_WordWrapperWord__get_Count(List__Fuse_Controls_Internal_WordWrapperWord* __this)
{
    return __this->_used;
}

::app::Fuse::Controls::Internal::WordWrapperWord* List__Fuse_Controls_Internal_WordWrapperWord__get_Item(List__Fuse_Controls_Internal_WordWrapperWord* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WordWrapperWord*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Internal_WordWrapperWord List__Fuse_Controls_Internal_WordWrapperWord__GetEnumerator(List__Fuse_Controls_Internal_WordWrapperWord* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Internal_WordWrapperWord__New_1(NULL, __this);
}

int List__Fuse_Controls_Internal_WordWrapperWord__IndexOf(List__Fuse_Controls_Internal_WordWrapperWord* __this, ::app::Fuse::Controls::Internal::WordWrapperWord* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_WordWrapperWord(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Controls_Internal_WordWrapperWord__Insert(List__Fuse_Controls_Internal_WordWrapperWord* __this, int index, ::app::Fuse::Controls::Internal::WordWrapperWord* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WordWrapperWord*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Controls_Internal_WordWrapperWord* List__Fuse_Controls_Internal_WordWrapperWord__New_1(::uStatic* __this)
{
    List__Fuse_Controls_Internal_WordWrapperWord* inst = (List__Fuse_Controls_Internal_WordWrapperWord*)::uAllocObject(sizeof(List__Fuse_Controls_Internal_WordWrapperWord), List__Fuse_Controls_Internal_WordWrapperWord__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Controls_Internal_WordWrapperWord* List__Fuse_Controls_Internal_WordWrapperWord__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Controls_Internal_WordWrapperWord* inst = (List__Fuse_Controls_Internal_WordWrapperWord*)::uAllocObject(sizeof(List__Fuse_Controls_Internal_WordWrapperWord), List__Fuse_Controls_Internal_WordWrapperWord__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Controls_Internal_WordWrapperWord__Remove(List__Fuse_Controls_Internal_WordWrapperWord* __this, ::app::Fuse::Controls::Internal::WordWrapperWord* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_WordWrapperWord(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Controls_Internal_WordWrapperWord__RemoveAt(List__Fuse_Controls_Internal_WordWrapperWord* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WordWrapperWord*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Controls_Internal_WordWrapperWord__set_Item(List__Fuse_Controls_Internal_WordWrapperWord* __this, int index, ::app::Fuse::Controls::Internal::WordWrapperWord* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WordWrapperWord*>(index) = value;
    __this->_version++;
}

void List__Fuse_Controls_Internal_WordWrapperWord__Sort(List__Fuse_Controls_Internal_WordWrapperWord* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Controls_Internal_WordWrapperWord(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Controls_Internal_WordWrapperWord__ToArray(List__Fuse_Controls_Internal_WordWrapperWord* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Controls::Internal::WordWrapperWord__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WordWrapperWord*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Controls_Internal_WrappedLine__uType* List__Fuse_Controls_Internal_WrappedLine__typeof()
{
    static ::uStaticStrong<List__Fuse_Controls_Internal_WrappedLine__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Controls_Internal_WrappedLine__uType*)::uAllocClassType(sizeof(List__Fuse_Controls_Internal_WrappedLine__uType), "Uno.Collections.List<Fuse.Controls.Internal.WrappedLine>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Controls_Internal_WrappedLine__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Controls_Internal_WrappedLine__typeof(), offsetof(List__Fuse_Controls_Internal_WrappedLine__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Controls_Internal_WrappedLine, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Controls_Internal_WrappedLine, _data), ::uGetArrayType(::app::Fuse::Controls::Internal::WrappedLine__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Controls_Internal_WrappedLine, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Controls_Internal_WrappedLine, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Controls_Internal_WrappedLine__Add, 0, false, ::app::Fuse::Controls::Internal::WrappedLine__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Controls_Internal_WrappedLine__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Controls_Internal_WrappedLine__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Controls_Internal_WrappedLine__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Controls_Internal_WrappedLine__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::Internal::WrappedLine__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Controls_Internal_WrappedLine__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Controls_Internal_WrappedLine__get_Item, 0, false, ::app::Fuse::Controls::Internal::WrappedLine__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Controls_Internal_WrappedLine__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Internal_WrappedLine__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Controls_Internal_WrappedLine__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::Internal::WrappedLine__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Controls_Internal_WrappedLine__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::Internal::WrappedLine__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Controls_Internal_WrappedLine__New_1, 0, true, List__Fuse_Controls_Internal_WrappedLine__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Controls_Internal_WrappedLine__New_2, 0, true, List__Fuse_Controls_Internal_WrappedLine__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Controls_Internal_WrappedLine__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::Internal::WrappedLine__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Controls_Internal_WrappedLine__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Controls_Internal_WrappedLine__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::Internal::WrappedLine__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Controls_Internal_WrappedLine__Sort, 0, false, ::app::Uno::Comparison__Fuse_Controls_Internal_WrappedLine__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Controls_Internal_WrappedLine__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Controls::Internal::WrappedLine__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Controls_Internal_WrappedLine__GetEnumerator_boxed(List__Fuse_Controls_Internal_WrappedLine* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Internal_WrappedLine__typeof(), __this->GetEnumerator());
}

void List__Fuse_Controls_Internal_WrappedLine___ObjInit(List__Fuse_Controls_Internal_WrappedLine* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Controls_Internal_WrappedLine___ObjInit_1(List__Fuse_Controls_Internal_WrappedLine* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Controls::Internal::WrappedLine__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Controls_Internal_WrappedLine__Add(List__Fuse_Controls_Internal_WrappedLine* __this, ::app::Fuse::Controls::Internal::WrappedLine* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WrappedLine*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Controls_Internal_WrappedLine__AddRange(List__Fuse_Controls_Internal_WrappedLine* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Controls_Internal_WrappedLine::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Controls::Internal::WrappedLine* i = ::app::Uno::Collections::IEnumerator__Fuse_Controls_Internal_WrappedLine::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Controls_Internal_WrappedLine__BoundsCheck(List__Fuse_Controls_Internal_WrappedLine* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Controls_Internal_WrappedLine__Clear(List__Fuse_Controls_Internal_WrappedLine* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Controls_Internal_WrappedLine__Contains(List__Fuse_Controls_Internal_WrappedLine* __this, ::app::Fuse::Controls::Internal::WrappedLine* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_WrappedLine(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WrappedLine*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Controls_Internal_WrappedLine__EnsureCapacity(List__Fuse_Controls_Internal_WrappedLine* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Controls::Internal::WrappedLine__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Controls::Internal::WrappedLine__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Controls::Internal::WrappedLine*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WrappedLine*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Controls_Internal_WrappedLine__get_Count(List__Fuse_Controls_Internal_WrappedLine* __this)
{
    return __this->_used;
}

::app::Fuse::Controls::Internal::WrappedLine* List__Fuse_Controls_Internal_WrappedLine__get_Item(List__Fuse_Controls_Internal_WrappedLine* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WrappedLine*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Internal_WrappedLine List__Fuse_Controls_Internal_WrappedLine__GetEnumerator(List__Fuse_Controls_Internal_WrappedLine* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Controls_Internal_WrappedLine__New_1(NULL, __this);
}

int List__Fuse_Controls_Internal_WrappedLine__IndexOf(List__Fuse_Controls_Internal_WrappedLine* __this, ::app::Fuse::Controls::Internal::WrappedLine* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_WrappedLine(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WrappedLine*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Controls_Internal_WrappedLine__Insert(List__Fuse_Controls_Internal_WrappedLine* __this, int index, ::app::Fuse::Controls::Internal::WrappedLine* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WrappedLine*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WrappedLine*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WrappedLine*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Controls_Internal_WrappedLine* List__Fuse_Controls_Internal_WrappedLine__New_1(::uStatic* __this)
{
    List__Fuse_Controls_Internal_WrappedLine* inst = (List__Fuse_Controls_Internal_WrappedLine*)::uAllocObject(sizeof(List__Fuse_Controls_Internal_WrappedLine), List__Fuse_Controls_Internal_WrappedLine__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Controls_Internal_WrappedLine* List__Fuse_Controls_Internal_WrappedLine__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Controls_Internal_WrappedLine* inst = (List__Fuse_Controls_Internal_WrappedLine*)::uAllocObject(sizeof(List__Fuse_Controls_Internal_WrappedLine), List__Fuse_Controls_Internal_WrappedLine__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Controls_Internal_WrappedLine__Remove(List__Fuse_Controls_Internal_WrappedLine* __this, ::app::Fuse::Controls::Internal::WrappedLine* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_WrappedLine(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WrappedLine*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Controls_Internal_WrappedLine__RemoveAt(List__Fuse_Controls_Internal_WrappedLine* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WrappedLine*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WrappedLine*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WrappedLine*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Controls_Internal_WrappedLine__set_Item(List__Fuse_Controls_Internal_WrappedLine* __this, int index, ::app::Fuse::Controls::Internal::WrappedLine* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::Internal::WrappedLine*>(index) = value;
    __this->_version++;
}

void List__Fuse_Controls_Internal_WrappedLine__Sort(List__Fuse_Controls_Internal_WrappedLine* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Controls_Internal_WrappedLine(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Controls_Internal_WrappedLine__ToArray(List__Fuse_Controls_Internal_WrappedLine* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Controls::Internal::WrappedLine__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Controls::Internal::WrappedLine*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::Internal::WrappedLine*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Controls_TextEdit_LineCacheLine__uType* List__Fuse_Controls_TextEdit_LineCacheLine__typeof()
{
    static ::uStaticStrong<List__Fuse_Controls_TextEdit_LineCacheLine__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Controls_TextEdit_LineCacheLine__uType*)::uAllocClassType(sizeof(List__Fuse_Controls_TextEdit_LineCacheLine__uType), "Uno.Collections.List<Fuse.Controls.TextEdit.LineCacheLine>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Controls_TextEdit_LineCacheLine__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Controls_TextEdit_LineCacheLine__typeof(), offsetof(List__Fuse_Controls_TextEdit_LineCacheLine__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Controls_TextEdit_LineCacheLine, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Controls_TextEdit_LineCacheLine, _data), ::uGetArrayType(::app::Fuse::Controls::TextEdit::LineCacheLine__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Controls_TextEdit_LineCacheLine, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Controls_TextEdit_LineCacheLine, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Controls_TextEdit_LineCacheLine__Add, 0, false, ::app::Fuse::Controls::TextEdit::LineCacheLine__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Controls_TextEdit_LineCacheLine__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Controls_TextEdit_LineCacheLine__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Controls_TextEdit_LineCacheLine__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Controls_TextEdit_LineCacheLine__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::TextEdit::LineCacheLine__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Controls_TextEdit_LineCacheLine__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Controls_TextEdit_LineCacheLine__get_Item, 0, false, ::app::Fuse::Controls::TextEdit::LineCacheLine__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Controls_TextEdit_LineCacheLine__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Controls_TextEdit_LineCacheLine__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Controls_TextEdit_LineCacheLine__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::TextEdit::LineCacheLine__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Controls_TextEdit_LineCacheLine__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::TextEdit::LineCacheLine__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Controls_TextEdit_LineCacheLine__New_1, 0, true, List__Fuse_Controls_TextEdit_LineCacheLine__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Controls_TextEdit_LineCacheLine__New_2, 0, true, List__Fuse_Controls_TextEdit_LineCacheLine__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Controls_TextEdit_LineCacheLine__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::TextEdit::LineCacheLine__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Controls_TextEdit_LineCacheLine__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Controls_TextEdit_LineCacheLine__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Controls::TextEdit::LineCacheLine__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Controls_TextEdit_LineCacheLine__Sort, 0, false, ::app::Uno::Comparison__Fuse_Controls_TextEdit_LineCacheLine__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Controls_TextEdit_LineCacheLine__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Controls::TextEdit::LineCacheLine__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Controls_TextEdit_LineCacheLine__GetEnumerator_boxed(List__Fuse_Controls_TextEdit_LineCacheLine* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Controls_TextEdit_LineCacheLine__typeof(), __this->GetEnumerator());
}

void List__Fuse_Controls_TextEdit_LineCacheLine___ObjInit(List__Fuse_Controls_TextEdit_LineCacheLine* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Controls_TextEdit_LineCacheLine___ObjInit_1(List__Fuse_Controls_TextEdit_LineCacheLine* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Controls::TextEdit::LineCacheLine__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Controls_TextEdit_LineCacheLine__Add(List__Fuse_Controls_TextEdit_LineCacheLine* __this, ::app::Fuse::Controls::TextEdit::LineCacheLine* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Controls_TextEdit_LineCacheLine__AddRange(List__Fuse_Controls_TextEdit_LineCacheLine* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Controls_TextEdit_LineCacheLine::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Controls::TextEdit::LineCacheLine* i = ::app::Uno::Collections::IEnumerator__Fuse_Controls_TextEdit_LineCacheLine::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Controls_TextEdit_LineCacheLine__BoundsCheck(List__Fuse_Controls_TextEdit_LineCacheLine* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Controls_TextEdit_LineCacheLine__Clear(List__Fuse_Controls_TextEdit_LineCacheLine* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Controls_TextEdit_LineCacheLine__Contains(List__Fuse_Controls_TextEdit_LineCacheLine* __this, ::app::Fuse::Controls::TextEdit::LineCacheLine* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_TextEdit_LineCacheLine(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Controls_TextEdit_LineCacheLine__EnsureCapacity(List__Fuse_Controls_TextEdit_LineCacheLine* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Controls::TextEdit::LineCacheLine__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Controls::TextEdit::LineCacheLine__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Controls_TextEdit_LineCacheLine__get_Count(List__Fuse_Controls_TextEdit_LineCacheLine* __this)
{
    return __this->_used;
}

::app::Fuse::Controls::TextEdit::LineCacheLine* List__Fuse_Controls_TextEdit_LineCacheLine__get_Item(List__Fuse_Controls_TextEdit_LineCacheLine* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Controls_TextEdit_LineCacheLine List__Fuse_Controls_TextEdit_LineCacheLine__GetEnumerator(List__Fuse_Controls_TextEdit_LineCacheLine* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Controls_TextEdit_LineCacheLine__New_1(NULL, __this);
}

int List__Fuse_Controls_TextEdit_LineCacheLine__IndexOf(List__Fuse_Controls_TextEdit_LineCacheLine* __this, ::app::Fuse::Controls::TextEdit::LineCacheLine* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_TextEdit_LineCacheLine(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Controls_TextEdit_LineCacheLine__Insert(List__Fuse_Controls_TextEdit_LineCacheLine* __this, int index, ::app::Fuse::Controls::TextEdit::LineCacheLine* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Controls_TextEdit_LineCacheLine* List__Fuse_Controls_TextEdit_LineCacheLine__New_1(::uStatic* __this)
{
    List__Fuse_Controls_TextEdit_LineCacheLine* inst = (List__Fuse_Controls_TextEdit_LineCacheLine*)::uAllocObject(sizeof(List__Fuse_Controls_TextEdit_LineCacheLine), List__Fuse_Controls_TextEdit_LineCacheLine__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Controls_TextEdit_LineCacheLine* List__Fuse_Controls_TextEdit_LineCacheLine__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Controls_TextEdit_LineCacheLine* inst = (List__Fuse_Controls_TextEdit_LineCacheLine*)::uAllocObject(sizeof(List__Fuse_Controls_TextEdit_LineCacheLine), List__Fuse_Controls_TextEdit_LineCacheLine__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Controls_TextEdit_LineCacheLine__Remove(List__Fuse_Controls_TextEdit_LineCacheLine* __this, ::app::Fuse::Controls::TextEdit::LineCacheLine* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Controls_TextEdit_LineCacheLine(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Controls_TextEdit_LineCacheLine__RemoveAt(List__Fuse_Controls_TextEdit_LineCacheLine* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Controls_TextEdit_LineCacheLine__set_Item(List__Fuse_Controls_TextEdit_LineCacheLine* __this, int index, ::app::Fuse::Controls::TextEdit::LineCacheLine* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(index) = value;
    __this->_version++;
}

void List__Fuse_Controls_TextEdit_LineCacheLine__Sort(List__Fuse_Controls_TextEdit_LineCacheLine* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Controls_TextEdit_LineCacheLine(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Controls_TextEdit_LineCacheLine__ToArray(List__Fuse_Controls_TextEdit_LineCacheLine* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Controls::TextEdit::LineCacheLine__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Controls::TextEdit::LineCacheLine*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Drawing_Batching_Batch__uType* List__Fuse_Drawing_Batching_Batch__typeof()
{
    static ::uStaticStrong<List__Fuse_Drawing_Batching_Batch__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Drawing_Batching_Batch__uType*)::uAllocClassType(sizeof(List__Fuse_Drawing_Batching_Batch__uType), "Uno.Collections.List<Fuse.Drawing.Batching.Batch>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Drawing_Batching_Batch__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Batching_Batch__typeof(), offsetof(List__Fuse_Drawing_Batching_Batch__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Drawing_Batching_Batch, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Drawing_Batching_Batch, _data), ::uGetArrayType(::app::Fuse::Drawing::Batching::Batch__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Drawing_Batching_Batch, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Drawing_Batching_Batch, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Drawing_Batching_Batch__Add, 0, false, ::app::Fuse::Drawing::Batching::Batch__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Drawing_Batching_Batch__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Batching_Batch__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Drawing_Batching_Batch__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Drawing_Batching_Batch__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Batching::Batch__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Drawing_Batching_Batch__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Drawing_Batching_Batch__get_Item, 0, false, ::app::Fuse::Drawing::Batching::Batch__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Drawing_Batching_Batch__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Batching_Batch__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Drawing_Batching_Batch__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Batching::Batch__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Drawing_Batching_Batch__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Batching::Batch__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Batching_Batch__New_1, 0, true, List__Fuse_Drawing_Batching_Batch__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Batching_Batch__New_2, 0, true, List__Fuse_Drawing_Batching_Batch__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Drawing_Batching_Batch__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Batching::Batch__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Drawing_Batching_Batch__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Drawing_Batching_Batch__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Batching::Batch__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Drawing_Batching_Batch__Sort, 0, false, ::app::Uno::Comparison__Fuse_Drawing_Batching_Batch__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Drawing_Batching_Batch__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Drawing::Batching::Batch__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Drawing_Batching_Batch__GetEnumerator_boxed(List__Fuse_Drawing_Batching_Batch* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Batching_Batch__typeof(), __this->GetEnumerator());
}

void List__Fuse_Drawing_Batching_Batch___ObjInit(List__Fuse_Drawing_Batching_Batch* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Drawing_Batching_Batch___ObjInit_1(List__Fuse_Drawing_Batching_Batch* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Drawing::Batching::Batch__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Drawing_Batching_Batch__Add(List__Fuse_Drawing_Batching_Batch* __this, ::app::Fuse::Drawing::Batching::Batch* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Batch*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Drawing_Batching_Batch__AddRange(List__Fuse_Drawing_Batching_Batch* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Batching_Batch::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Drawing::Batching::Batch* i = ::app::Uno::Collections::IEnumerator__Fuse_Drawing_Batching_Batch::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Drawing_Batching_Batch__BoundsCheck(List__Fuse_Drawing_Batching_Batch* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Drawing_Batching_Batch__Clear(List__Fuse_Drawing_Batching_Batch* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Drawing_Batching_Batch__Contains(List__Fuse_Drawing_Batching_Batch* __this, ::app::Fuse::Drawing::Batching::Batch* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Batching_Batch(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Batch*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Batching_Batch__EnsureCapacity(List__Fuse_Drawing_Batching_Batch* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Drawing::Batching::Batch__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Drawing::Batching::Batch__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Drawing::Batching::Batch*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Batch*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Drawing_Batching_Batch__get_Count(List__Fuse_Drawing_Batching_Batch* __this)
{
    return __this->_used;
}

::app::Fuse::Drawing::Batching::Batch* List__Fuse_Drawing_Batching_Batch__get_Item(List__Fuse_Drawing_Batching_Batch* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Batch*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Batching_Batch List__Fuse_Drawing_Batching_Batch__GetEnumerator(List__Fuse_Drawing_Batching_Batch* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Batching_Batch__New_1(NULL, __this);
}

int List__Fuse_Drawing_Batching_Batch__IndexOf(List__Fuse_Drawing_Batching_Batch* __this, ::app::Fuse::Drawing::Batching::Batch* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Batching_Batch(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Batch*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Drawing_Batching_Batch__Insert(List__Fuse_Drawing_Batching_Batch* __this, int index, ::app::Fuse::Drawing::Batching::Batch* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Batch*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Batch*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Batch*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Drawing_Batching_Batch* List__Fuse_Drawing_Batching_Batch__New_1(::uStatic* __this)
{
    List__Fuse_Drawing_Batching_Batch* inst = (List__Fuse_Drawing_Batching_Batch*)::uAllocObject(sizeof(List__Fuse_Drawing_Batching_Batch), List__Fuse_Drawing_Batching_Batch__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Drawing_Batching_Batch* List__Fuse_Drawing_Batching_Batch__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Drawing_Batching_Batch* inst = (List__Fuse_Drawing_Batching_Batch*)::uAllocObject(sizeof(List__Fuse_Drawing_Batching_Batch), List__Fuse_Drawing_Batching_Batch__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Drawing_Batching_Batch__Remove(List__Fuse_Drawing_Batching_Batch* __this, ::app::Fuse::Drawing::Batching::Batch* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Batching_Batch(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Batch*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Batching_Batch__RemoveAt(List__Fuse_Drawing_Batching_Batch* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Batch*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Batch*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Batch*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Drawing_Batching_Batch__set_Item(List__Fuse_Drawing_Batching_Batch* __this, int index, ::app::Fuse::Drawing::Batching::Batch* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Batch*>(index) = value;
    __this->_version++;
}

void List__Fuse_Drawing_Batching_Batch__Sort(List__Fuse_Drawing_Batching_Batch* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Drawing_Batching_Batch(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Drawing_Batching_Batch__ToArray(List__Fuse_Drawing_Batching_Batch* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Drawing::Batching::Batch__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Drawing::Batching::Batch*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Batch*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Drawing_Batching_Entry__uType* List__Fuse_Drawing_Batching_Entry__typeof()
{
    static ::uStaticStrong<List__Fuse_Drawing_Batching_Entry__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Drawing_Batching_Entry__uType*)::uAllocClassType(sizeof(List__Fuse_Drawing_Batching_Entry__uType), "Uno.Collections.List<Fuse.Drawing.Batching.Entry>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Drawing_Batching_Entry__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Batching_Entry__typeof(), offsetof(List__Fuse_Drawing_Batching_Entry__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Drawing_Batching_Entry, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Drawing_Batching_Entry, _data), ::uGetArrayType(::app::Fuse::Drawing::Batching::Entry__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Drawing_Batching_Entry, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Drawing_Batching_Entry, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Drawing_Batching_Entry__Add, 0, false, ::app::Fuse::Drawing::Batching::Entry__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Drawing_Batching_Entry__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Batching_Entry__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Drawing_Batching_Entry__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Drawing_Batching_Entry__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Batching::Entry__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Drawing_Batching_Entry__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Drawing_Batching_Entry__get_Item, 0, false, ::app::Fuse::Drawing::Batching::Entry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Drawing_Batching_Entry__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Batching_Entry__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Drawing_Batching_Entry__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Batching::Entry__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Drawing_Batching_Entry__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Batching::Entry__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Batching_Entry__New_1, 0, true, List__Fuse_Drawing_Batching_Entry__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Batching_Entry__New_2, 0, true, List__Fuse_Drawing_Batching_Entry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Drawing_Batching_Entry__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Batching::Entry__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Drawing_Batching_Entry__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Drawing_Batching_Entry__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Batching::Entry__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Drawing_Batching_Entry__Sort, 0, false, ::app::Uno::Comparison__Fuse_Drawing_Batching_Entry__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Drawing_Batching_Entry__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Drawing::Batching::Entry__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Drawing_Batching_Entry__GetEnumerator_boxed(List__Fuse_Drawing_Batching_Entry* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Batching_Entry__typeof(), __this->GetEnumerator());
}

void List__Fuse_Drawing_Batching_Entry___ObjInit(List__Fuse_Drawing_Batching_Entry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Drawing_Batching_Entry___ObjInit_1(List__Fuse_Drawing_Batching_Entry* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Drawing::Batching::Entry__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Drawing_Batching_Entry__Add(List__Fuse_Drawing_Batching_Entry* __this, ::app::Fuse::Drawing::Batching::Entry* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Entry*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Drawing_Batching_Entry__AddRange(List__Fuse_Drawing_Batching_Entry* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Batching_Entry::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Drawing::Batching::Entry* i = ::app::Uno::Collections::IEnumerator__Fuse_Drawing_Batching_Entry::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Drawing_Batching_Entry__BoundsCheck(List__Fuse_Drawing_Batching_Entry* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Drawing_Batching_Entry__Clear(List__Fuse_Drawing_Batching_Entry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Drawing_Batching_Entry__Contains(List__Fuse_Drawing_Batching_Entry* __this, ::app::Fuse::Drawing::Batching::Entry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Batching_Entry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Entry*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Batching_Entry__EnsureCapacity(List__Fuse_Drawing_Batching_Entry* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Drawing::Batching::Entry__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Drawing::Batching::Entry__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Drawing::Batching::Entry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Entry*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Drawing_Batching_Entry__get_Count(List__Fuse_Drawing_Batching_Entry* __this)
{
    return __this->_used;
}

::app::Fuse::Drawing::Batching::Entry* List__Fuse_Drawing_Batching_Entry__get_Item(List__Fuse_Drawing_Batching_Entry* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Entry*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Batching_Entry List__Fuse_Drawing_Batching_Entry__GetEnumerator(List__Fuse_Drawing_Batching_Entry* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Batching_Entry__New_1(NULL, __this);
}

int List__Fuse_Drawing_Batching_Entry__IndexOf(List__Fuse_Drawing_Batching_Entry* __this, ::app::Fuse::Drawing::Batching::Entry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Batching_Entry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Entry*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Drawing_Batching_Entry__Insert(List__Fuse_Drawing_Batching_Entry* __this, int index, ::app::Fuse::Drawing::Batching::Entry* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Entry*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Entry*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Entry*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Drawing_Batching_Entry* List__Fuse_Drawing_Batching_Entry__New_1(::uStatic* __this)
{
    List__Fuse_Drawing_Batching_Entry* inst = (List__Fuse_Drawing_Batching_Entry*)::uAllocObject(sizeof(List__Fuse_Drawing_Batching_Entry), List__Fuse_Drawing_Batching_Entry__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Drawing_Batching_Entry* List__Fuse_Drawing_Batching_Entry__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Drawing_Batching_Entry* inst = (List__Fuse_Drawing_Batching_Entry*)::uAllocObject(sizeof(List__Fuse_Drawing_Batching_Entry), List__Fuse_Drawing_Batching_Entry__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Drawing_Batching_Entry__Remove(List__Fuse_Drawing_Batching_Entry* __this, ::app::Fuse::Drawing::Batching::Entry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Batching_Entry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Entry*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Batching_Entry__RemoveAt(List__Fuse_Drawing_Batching_Entry* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Entry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Entry*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Entry*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Drawing_Batching_Entry__set_Item(List__Fuse_Drawing_Batching_Entry* __this, int index, ::app::Fuse::Drawing::Batching::Entry* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Batching::Entry*>(index) = value;
    __this->_version++;
}

void List__Fuse_Drawing_Batching_Entry__Sort(List__Fuse_Drawing_Batching_Entry* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Drawing_Batching_Entry(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Drawing_Batching_Entry__ToArray(List__Fuse_Drawing_Batching_Entry* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Drawing::Batching::Entry__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Drawing::Batching::Entry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Batching::Entry*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Drawing_Brush__uType* List__Fuse_Drawing_Brush__typeof()
{
    static ::uStaticStrong<List__Fuse_Drawing_Brush__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Drawing_Brush__uType*)::uAllocClassType(sizeof(List__Fuse_Drawing_Brush__uType), "Uno.Collections.List<Fuse.Drawing.Brush>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::app::Fuse::Drawing::Brush*(*)(void*, int))List__Fuse_Drawing_Brush__get_Item;
    type->__interface_1.__fp_Clear = (void(*)(void*))List__Fuse_Drawing_Brush__Clear;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Drawing::Brush*))List__Fuse_Drawing_Brush__Add;
    type->__interface_1.__fp_Remove = (bool(*)(void*, ::app::Fuse::Drawing::Brush*))List__Fuse_Drawing_Brush__Remove;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Drawing_Brush__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Drawing_Brush__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Drawing_Brush__typeof(), offsetof(List__Fuse_Drawing_Brush__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Drawing_Brush__typeof(), offsetof(List__Fuse_Drawing_Brush__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Brush__typeof(), offsetof(List__Fuse_Drawing_Brush__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Drawing_Brush, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Drawing_Brush, _data), ::uGetArrayType(::app::Fuse::Drawing::Brush__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Drawing_Brush, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Drawing_Brush, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Drawing_Brush__Add, 0, false, ::app::Fuse::Drawing::Brush__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Drawing_Brush__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Brush__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Drawing_Brush__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Drawing_Brush__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Brush__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Drawing_Brush__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Drawing_Brush__get_Item, 0, false, ::app::Fuse::Drawing::Brush__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Drawing_Brush__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Brush__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Drawing_Brush__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Brush__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Drawing_Brush__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Brush__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Brush__New_1, 0, true, List__Fuse_Drawing_Brush__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Brush__New_2, 0, true, List__Fuse_Drawing_Brush__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Drawing_Brush__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Brush__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Drawing_Brush__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Drawing_Brush__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Brush__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Drawing_Brush__Sort, 0, false, ::app::Uno::Comparison__Fuse_Drawing_Brush__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Drawing_Brush__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Drawing::Brush__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Drawing_Brush__GetEnumerator_boxed(List__Fuse_Drawing_Brush* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Brush__typeof(), __this->GetEnumerator());
}

void List__Fuse_Drawing_Brush___ObjInit(List__Fuse_Drawing_Brush* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Drawing_Brush___ObjInit_1(List__Fuse_Drawing_Brush* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Drawing::Brush__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Drawing_Brush__Add(List__Fuse_Drawing_Brush* __this, ::app::Fuse::Drawing::Brush* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Brush*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Drawing_Brush__AddRange(List__Fuse_Drawing_Brush* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Brush::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Drawing::Brush* i = ::app::Uno::Collections::IEnumerator__Fuse_Drawing_Brush::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Drawing_Brush__BoundsCheck(List__Fuse_Drawing_Brush* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Drawing_Brush__Clear(List__Fuse_Drawing_Brush* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Drawing_Brush__Contains(List__Fuse_Drawing_Brush* __this, ::app::Fuse::Drawing::Brush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Brush(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Brush*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Brush__EnsureCapacity(List__Fuse_Drawing_Brush* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Drawing::Brush__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Drawing::Brush__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Drawing::Brush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Brush*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Drawing_Brush__get_Count(List__Fuse_Drawing_Brush* __this)
{
    return __this->_used;
}

::app::Fuse::Drawing::Brush* List__Fuse_Drawing_Brush__get_Item(List__Fuse_Drawing_Brush* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Brush*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Brush List__Fuse_Drawing_Brush__GetEnumerator(List__Fuse_Drawing_Brush* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Brush__New_1(NULL, __this);
}

int List__Fuse_Drawing_Brush__IndexOf(List__Fuse_Drawing_Brush* __this, ::app::Fuse::Drawing::Brush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Brush(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Brush*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Drawing_Brush__Insert(List__Fuse_Drawing_Brush* __this, int index, ::app::Fuse::Drawing::Brush* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Brush*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Brush*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Brush*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Drawing_Brush* List__Fuse_Drawing_Brush__New_1(::uStatic* __this)
{
    List__Fuse_Drawing_Brush* inst = (List__Fuse_Drawing_Brush*)::uAllocObject(sizeof(List__Fuse_Drawing_Brush), List__Fuse_Drawing_Brush__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Drawing_Brush* List__Fuse_Drawing_Brush__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Drawing_Brush* inst = (List__Fuse_Drawing_Brush*)::uAllocObject(sizeof(List__Fuse_Drawing_Brush), List__Fuse_Drawing_Brush__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Drawing_Brush__Remove(List__Fuse_Drawing_Brush* __this, ::app::Fuse::Drawing::Brush* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Brush(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Brush*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Brush__RemoveAt(List__Fuse_Drawing_Brush* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Brush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Brush*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Brush*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Drawing_Brush__set_Item(List__Fuse_Drawing_Brush* __this, int index, ::app::Fuse::Drawing::Brush* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Brush*>(index) = value;
    __this->_version++;
}

void List__Fuse_Drawing_Brush__Sort(List__Fuse_Drawing_Brush* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Drawing_Brush(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Drawing_Brush__ToArray(List__Fuse_Drawing_Brush* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Drawing::Brush__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Drawing::Brush*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Brush*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Drawing_Contour__uType* List__Fuse_Drawing_Contour__typeof()
{
    static ::uStaticStrong<List__Fuse_Drawing_Contour__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Drawing_Contour__uType*)::uAllocClassType(sizeof(List__Fuse_Drawing_Contour__uType), "Uno.Collections.List<Fuse.Drawing.Contour>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Drawing_Contour__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Contour__typeof(), offsetof(List__Fuse_Drawing_Contour__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Drawing_Contour, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Drawing_Contour, _data), ::uGetArrayType(::app::Fuse::Drawing::Contour__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Drawing_Contour, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Drawing_Contour, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Drawing_Contour__Add, 0, false, ::app::Fuse::Drawing::Contour__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Drawing_Contour__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Contour__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Drawing_Contour__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Drawing_Contour__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Contour__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Drawing_Contour__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Drawing_Contour__get_Item, 0, false, ::app::Fuse::Drawing::Contour__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Drawing_Contour__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Contour__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Drawing_Contour__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Contour__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Drawing_Contour__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Contour__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Contour__New_1, 0, true, List__Fuse_Drawing_Contour__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Contour__New_2, 0, true, List__Fuse_Drawing_Contour__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Drawing_Contour__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Contour__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Drawing_Contour__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Drawing_Contour__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Contour__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Drawing_Contour__Sort, 0, false, ::app::Uno::Comparison__Fuse_Drawing_Contour__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Drawing_Contour__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Drawing::Contour__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Drawing_Contour__GetEnumerator_boxed(List__Fuse_Drawing_Contour* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Contour__typeof(), __this->GetEnumerator());
}

void List__Fuse_Drawing_Contour___ObjInit(List__Fuse_Drawing_Contour* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Drawing_Contour___ObjInit_1(List__Fuse_Drawing_Contour* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Drawing::Contour__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Drawing_Contour__Add(List__Fuse_Drawing_Contour* __this, ::app::Fuse::Drawing::Contour* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Contour*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Drawing_Contour__AddRange(List__Fuse_Drawing_Contour* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Contour::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Drawing::Contour* i = ::app::Uno::Collections::IEnumerator__Fuse_Drawing_Contour::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Drawing_Contour__BoundsCheck(List__Fuse_Drawing_Contour* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Drawing_Contour__Clear(List__Fuse_Drawing_Contour* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Drawing_Contour__Contains(List__Fuse_Drawing_Contour* __this, ::app::Fuse::Drawing::Contour* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Contour(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Contour*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Contour__EnsureCapacity(List__Fuse_Drawing_Contour* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Drawing::Contour__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Drawing::Contour__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Drawing::Contour*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Contour*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Drawing_Contour__get_Count(List__Fuse_Drawing_Contour* __this)
{
    return __this->_used;
}

::app::Fuse::Drawing::Contour* List__Fuse_Drawing_Contour__get_Item(List__Fuse_Drawing_Contour* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Contour*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Contour List__Fuse_Drawing_Contour__GetEnumerator(List__Fuse_Drawing_Contour* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Contour__New_1(NULL, __this);
}

int List__Fuse_Drawing_Contour__IndexOf(List__Fuse_Drawing_Contour* __this, ::app::Fuse::Drawing::Contour* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Contour(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Contour*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Drawing_Contour__Insert(List__Fuse_Drawing_Contour* __this, int index, ::app::Fuse::Drawing::Contour* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Contour*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Contour*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Contour*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Drawing_Contour* List__Fuse_Drawing_Contour__New_1(::uStatic* __this)
{
    List__Fuse_Drawing_Contour* inst = (List__Fuse_Drawing_Contour*)::uAllocObject(sizeof(List__Fuse_Drawing_Contour), List__Fuse_Drawing_Contour__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Drawing_Contour* List__Fuse_Drawing_Contour__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Drawing_Contour* inst = (List__Fuse_Drawing_Contour*)::uAllocObject(sizeof(List__Fuse_Drawing_Contour), List__Fuse_Drawing_Contour__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Drawing_Contour__Remove(List__Fuse_Drawing_Contour* __this, ::app::Fuse::Drawing::Contour* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Contour(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Contour*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Contour__RemoveAt(List__Fuse_Drawing_Contour* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Contour*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Contour*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Contour*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Drawing_Contour__set_Item(List__Fuse_Drawing_Contour* __this, int index, ::app::Fuse::Drawing::Contour* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Contour*>(index) = value;
    __this->_version++;
}

void List__Fuse_Drawing_Contour__Sort(List__Fuse_Drawing_Contour* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Drawing_Contour(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Drawing_Contour__ToArray(List__Fuse_Drawing_Contour* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Drawing::Contour__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Drawing::Contour*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Contour*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Drawing_GradientStop__uType* List__Fuse_Drawing_GradientStop__typeof()
{
    static ::uStaticStrong<List__Fuse_Drawing_GradientStop__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Drawing_GradientStop__uType*)::uAllocClassType(sizeof(List__Fuse_Drawing_GradientStop__uType), "Uno.Collections.List<Fuse.Drawing.GradientStop>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Drawing_GradientStop__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Drawing_GradientStop__typeof(), offsetof(List__Fuse_Drawing_GradientStop__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Fuse_Drawing_GradientStop__typeof(), offsetof(List__Fuse_Drawing_GradientStop__uType, __interface_1));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Drawing_GradientStop, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Drawing_GradientStop, _data), ::uGetArrayType(::app::Fuse::Drawing::GradientStop__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Drawing_GradientStop, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Drawing_GradientStop, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Drawing_GradientStop__Add, 0, false, ::app::Fuse::Drawing::GradientStop__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Drawing_GradientStop__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Drawing_GradientStop__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Drawing_GradientStop__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Drawing_GradientStop__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::GradientStop__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Drawing_GradientStop__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Drawing_GradientStop__get_Item, 0, false, ::app::Fuse::Drawing::GradientStop__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Drawing_GradientStop__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_GradientStop__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Drawing_GradientStop__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::GradientStop__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Drawing_GradientStop__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::GradientStop__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_GradientStop__New_1, 0, true, List__Fuse_Drawing_GradientStop__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_GradientStop__New_2, 0, true, List__Fuse_Drawing_GradientStop__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Drawing_GradientStop__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::GradientStop__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Drawing_GradientStop__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Drawing_GradientStop__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::GradientStop__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Drawing_GradientStop__Sort, 0, false, ::app::Uno::Comparison__Fuse_Drawing_GradientStop__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Drawing_GradientStop__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Drawing::GradientStop__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Drawing_GradientStop__GetEnumerator_boxed(List__Fuse_Drawing_GradientStop* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_GradientStop__typeof(), __this->GetEnumerator());
}

void List__Fuse_Drawing_GradientStop___ObjInit(List__Fuse_Drawing_GradientStop* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Drawing_GradientStop___ObjInit_1(List__Fuse_Drawing_GradientStop* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Drawing::GradientStop__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Drawing_GradientStop__Add(List__Fuse_Drawing_GradientStop* __this, ::app::Fuse::Drawing::GradientStop* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::GradientStop*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Drawing_GradientStop__AddRange(List__Fuse_Drawing_GradientStop* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Drawing_GradientStop::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Drawing::GradientStop* i = ::app::Uno::Collections::IEnumerator__Fuse_Drawing_GradientStop::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Drawing_GradientStop__BoundsCheck(List__Fuse_Drawing_GradientStop* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Drawing_GradientStop__Clear(List__Fuse_Drawing_GradientStop* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Drawing_GradientStop__Contains(List__Fuse_Drawing_GradientStop* __this, ::app::Fuse::Drawing::GradientStop* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_GradientStop(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::GradientStop*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_GradientStop__EnsureCapacity(List__Fuse_Drawing_GradientStop* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Drawing::GradientStop__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Drawing::GradientStop__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Drawing::GradientStop*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::GradientStop*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Drawing_GradientStop__get_Count(List__Fuse_Drawing_GradientStop* __this)
{
    return __this->_used;
}

::app::Fuse::Drawing::GradientStop* List__Fuse_Drawing_GradientStop__get_Item(List__Fuse_Drawing_GradientStop* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::GradientStop*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_GradientStop List__Fuse_Drawing_GradientStop__GetEnumerator(List__Fuse_Drawing_GradientStop* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_GradientStop__New_1(NULL, __this);
}

int List__Fuse_Drawing_GradientStop__IndexOf(List__Fuse_Drawing_GradientStop* __this, ::app::Fuse::Drawing::GradientStop* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_GradientStop(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::GradientStop*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Drawing_GradientStop__Insert(List__Fuse_Drawing_GradientStop* __this, int index, ::app::Fuse::Drawing::GradientStop* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::GradientStop*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::GradientStop*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::GradientStop*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Drawing_GradientStop* List__Fuse_Drawing_GradientStop__New_1(::uStatic* __this)
{
    List__Fuse_Drawing_GradientStop* inst = (List__Fuse_Drawing_GradientStop*)::uAllocObject(sizeof(List__Fuse_Drawing_GradientStop), List__Fuse_Drawing_GradientStop__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Drawing_GradientStop* List__Fuse_Drawing_GradientStop__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Drawing_GradientStop* inst = (List__Fuse_Drawing_GradientStop*)::uAllocObject(sizeof(List__Fuse_Drawing_GradientStop), List__Fuse_Drawing_GradientStop__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Drawing_GradientStop__Remove(List__Fuse_Drawing_GradientStop* __this, ::app::Fuse::Drawing::GradientStop* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_GradientStop(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::GradientStop*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_GradientStop__RemoveAt(List__Fuse_Drawing_GradientStop* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::GradientStop*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::GradientStop*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::GradientStop*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Drawing_GradientStop__set_Item(List__Fuse_Drawing_GradientStop* __this, int index, ::app::Fuse::Drawing::GradientStop* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::GradientStop*>(index) = value;
    __this->_version++;
}

void List__Fuse_Drawing_GradientStop__Sort(List__Fuse_Drawing_GradientStop* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Drawing_GradientStop(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Drawing_GradientStop__ToArray(List__Fuse_Drawing_GradientStop* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Drawing::GradientStop__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Drawing::GradientStop*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::GradientStop*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Drawing_Internal_MultiBuffer_Field__uType* List__Fuse_Drawing_Internal_MultiBuffer_Field__typeof()
{
    static ::uStaticStrong<List__Fuse_Drawing_Internal_MultiBuffer_Field__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Drawing_Internal_MultiBuffer_Field__uType*)::uAllocClassType(sizeof(List__Fuse_Drawing_Internal_MultiBuffer_Field__uType), "Uno.Collections.List<Fuse.Drawing.Internal.MultiBuffer_Field>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Drawing_Internal_MultiBuffer_Field__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Internal_MultiBuffer_Field__typeof(), offsetof(List__Fuse_Drawing_Internal_MultiBuffer_Field__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Drawing_Internal_MultiBuffer_Field, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Drawing_Internal_MultiBuffer_Field, _data), ::uGetArrayType(::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Drawing_Internal_MultiBuffer_Field, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Drawing_Internal_MultiBuffer_Field, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Drawing_Internal_MultiBuffer_Field__Add, 0, false, ::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Drawing_Internal_MultiBuffer_Field__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Internal_MultiBuffer_Field__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Drawing_Internal_MultiBuffer_Field__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Drawing_Internal_MultiBuffer_Field__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Drawing_Internal_MultiBuffer_Field__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Drawing_Internal_MultiBuffer_Field__get_Item, 0, false, ::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Drawing_Internal_MultiBuffer_Field__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Internal_MultiBuffer_Field__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Drawing_Internal_MultiBuffer_Field__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Drawing_Internal_MultiBuffer_Field__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Internal_MultiBuffer_Field__New_1, 0, true, List__Fuse_Drawing_Internal_MultiBuffer_Field__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Internal_MultiBuffer_Field__New_2, 0, true, List__Fuse_Drawing_Internal_MultiBuffer_Field__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Drawing_Internal_MultiBuffer_Field__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Drawing_Internal_MultiBuffer_Field__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Drawing_Internal_MultiBuffer_Field__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Drawing_Internal_MultiBuffer_Field__Sort, 0, false, ::app::Uno::Comparison__Fuse_Drawing_Internal_MultiBuffer_Field__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Drawing_Internal_MultiBuffer_Field__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Drawing_Internal_MultiBuffer_Field__GetEnumerator_boxed(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Internal_MultiBuffer_Field__typeof(), __this->GetEnumerator());
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field___ObjInit(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field___ObjInit_1(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field__Add(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, ::app::Fuse::Drawing::Internal::MultiBuffer_Field* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field__AddRange(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Internal_MultiBuffer_Field::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Drawing::Internal::MultiBuffer_Field* i = ::app::Uno::Collections::IEnumerator__Fuse_Drawing_Internal_MultiBuffer_Field::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field__BoundsCheck(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field__Clear(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Drawing_Internal_MultiBuffer_Field__Contains(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, ::app::Fuse::Drawing::Internal::MultiBuffer_Field* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Internal_MultiBuffer_Field(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field__EnsureCapacity(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Drawing_Internal_MultiBuffer_Field__get_Count(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this)
{
    return __this->_used;
}

::app::Fuse::Drawing::Internal::MultiBuffer_Field* List__Fuse_Drawing_Internal_MultiBuffer_Field__get_Item(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Internal_MultiBuffer_Field List__Fuse_Drawing_Internal_MultiBuffer_Field__GetEnumerator(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Internal_MultiBuffer_Field__New_1(NULL, __this);
}

int List__Fuse_Drawing_Internal_MultiBuffer_Field__IndexOf(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, ::app::Fuse::Drawing::Internal::MultiBuffer_Field* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Internal_MultiBuffer_Field(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field__Insert(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, int index, ::app::Fuse::Drawing::Internal::MultiBuffer_Field* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Drawing_Internal_MultiBuffer_Field* List__Fuse_Drawing_Internal_MultiBuffer_Field__New_1(::uStatic* __this)
{
    List__Fuse_Drawing_Internal_MultiBuffer_Field* inst = (List__Fuse_Drawing_Internal_MultiBuffer_Field*)::uAllocObject(sizeof(List__Fuse_Drawing_Internal_MultiBuffer_Field), List__Fuse_Drawing_Internal_MultiBuffer_Field__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Drawing_Internal_MultiBuffer_Field* List__Fuse_Drawing_Internal_MultiBuffer_Field__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Drawing_Internal_MultiBuffer_Field* inst = (List__Fuse_Drawing_Internal_MultiBuffer_Field*)::uAllocObject(sizeof(List__Fuse_Drawing_Internal_MultiBuffer_Field), List__Fuse_Drawing_Internal_MultiBuffer_Field__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Drawing_Internal_MultiBuffer_Field__Remove(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, ::app::Fuse::Drawing::Internal::MultiBuffer_Field* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Internal_MultiBuffer_Field(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field__RemoveAt(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field__set_Item(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, int index, ::app::Fuse::Drawing::Internal::MultiBuffer_Field* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(index) = value;
    __this->_version++;
}

void List__Fuse_Drawing_Internal_MultiBuffer_Field__Sort(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Drawing_Internal_MultiBuffer_Field(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Drawing_Internal_MultiBuffer_Field__ToArray(List__Fuse_Drawing_Internal_MultiBuffer_Field* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Drawing::Internal::MultiBuffer_Field__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Internal::MultiBuffer_Field*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Drawing_PathGeometry__uType* List__Fuse_Drawing_PathGeometry__typeof()
{
    static ::uStaticStrong<List__Fuse_Drawing_PathGeometry__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Drawing_PathGeometry__uType*)::uAllocClassType(sizeof(List__Fuse_Drawing_PathGeometry__uType), "Uno.Collections.List<Fuse.Drawing.PathGeometry>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Drawing_PathGeometry__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Drawing_PathGeometry__typeof(), offsetof(List__Fuse_Drawing_PathGeometry__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Drawing_PathGeometry, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Drawing_PathGeometry, _data), ::uGetArrayType(::app::Fuse::Drawing::PathGeometry__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Drawing_PathGeometry, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Drawing_PathGeometry, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Drawing_PathGeometry__Add, 0, false, ::app::Fuse::Drawing::PathGeometry__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Drawing_PathGeometry__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Drawing_PathGeometry__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Drawing_PathGeometry__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Drawing_PathGeometry__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::PathGeometry__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Drawing_PathGeometry__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Drawing_PathGeometry__get_Item, 0, false, ::app::Fuse::Drawing::PathGeometry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Drawing_PathGeometry__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_PathGeometry__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Drawing_PathGeometry__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::PathGeometry__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Drawing_PathGeometry__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::PathGeometry__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_PathGeometry__New_1, 0, true, List__Fuse_Drawing_PathGeometry__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_PathGeometry__New_2, 0, true, List__Fuse_Drawing_PathGeometry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Drawing_PathGeometry__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::PathGeometry__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Drawing_PathGeometry__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Drawing_PathGeometry__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::PathGeometry__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Drawing_PathGeometry__Sort, 0, false, ::app::Uno::Comparison__Fuse_Drawing_PathGeometry__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Drawing_PathGeometry__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Drawing::PathGeometry__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Drawing_PathGeometry__GetEnumerator_boxed(List__Fuse_Drawing_PathGeometry* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_PathGeometry__typeof(), __this->GetEnumerator());
}

void List__Fuse_Drawing_PathGeometry___ObjInit(List__Fuse_Drawing_PathGeometry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Drawing_PathGeometry___ObjInit_1(List__Fuse_Drawing_PathGeometry* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Drawing::PathGeometry__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Drawing_PathGeometry__Add(List__Fuse_Drawing_PathGeometry* __this, ::app::Fuse::Drawing::PathGeometry* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::PathGeometry*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Drawing_PathGeometry__AddRange(List__Fuse_Drawing_PathGeometry* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Drawing_PathGeometry::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Drawing::PathGeometry* i = ::app::Uno::Collections::IEnumerator__Fuse_Drawing_PathGeometry::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Drawing_PathGeometry__BoundsCheck(List__Fuse_Drawing_PathGeometry* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Drawing_PathGeometry__Clear(List__Fuse_Drawing_PathGeometry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Drawing_PathGeometry__Contains(List__Fuse_Drawing_PathGeometry* __this, ::app::Fuse::Drawing::PathGeometry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_PathGeometry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::PathGeometry*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_PathGeometry__EnsureCapacity(List__Fuse_Drawing_PathGeometry* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Drawing::PathGeometry__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Drawing::PathGeometry__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Drawing::PathGeometry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::PathGeometry*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Drawing_PathGeometry__get_Count(List__Fuse_Drawing_PathGeometry* __this)
{
    return __this->_used;
}

::app::Fuse::Drawing::PathGeometry* List__Fuse_Drawing_PathGeometry__get_Item(List__Fuse_Drawing_PathGeometry* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::PathGeometry*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_PathGeometry List__Fuse_Drawing_PathGeometry__GetEnumerator(List__Fuse_Drawing_PathGeometry* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_PathGeometry__New_1(NULL, __this);
}

int List__Fuse_Drawing_PathGeometry__IndexOf(List__Fuse_Drawing_PathGeometry* __this, ::app::Fuse::Drawing::PathGeometry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_PathGeometry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::PathGeometry*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Drawing_PathGeometry__Insert(List__Fuse_Drawing_PathGeometry* __this, int index, ::app::Fuse::Drawing::PathGeometry* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::PathGeometry*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::PathGeometry*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::PathGeometry*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Drawing_PathGeometry* List__Fuse_Drawing_PathGeometry__New_1(::uStatic* __this)
{
    List__Fuse_Drawing_PathGeometry* inst = (List__Fuse_Drawing_PathGeometry*)::uAllocObject(sizeof(List__Fuse_Drawing_PathGeometry), List__Fuse_Drawing_PathGeometry__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Drawing_PathGeometry* List__Fuse_Drawing_PathGeometry__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Drawing_PathGeometry* inst = (List__Fuse_Drawing_PathGeometry*)::uAllocObject(sizeof(List__Fuse_Drawing_PathGeometry), List__Fuse_Drawing_PathGeometry__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Drawing_PathGeometry__Remove(List__Fuse_Drawing_PathGeometry* __this, ::app::Fuse::Drawing::PathGeometry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_PathGeometry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::PathGeometry*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_PathGeometry__RemoveAt(List__Fuse_Drawing_PathGeometry* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::PathGeometry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::PathGeometry*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::PathGeometry*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Drawing_PathGeometry__set_Item(List__Fuse_Drawing_PathGeometry* __this, int index, ::app::Fuse::Drawing::PathGeometry* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::PathGeometry*>(index) = value;
    __this->_version++;
}

void List__Fuse_Drawing_PathGeometry__Sort(List__Fuse_Drawing_PathGeometry* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Drawing_PathGeometry(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Drawing_PathGeometry__ToArray(List__Fuse_Drawing_PathGeometry* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Drawing::PathGeometry__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Drawing::PathGeometry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::PathGeometry*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Drawing_Stroke__uType* List__Fuse_Drawing_Stroke__typeof()
{
    static ::uStaticStrong<List__Fuse_Drawing_Stroke__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Drawing_Stroke__uType*)::uAllocClassType(sizeof(List__Fuse_Drawing_Stroke__uType), "Uno.Collections.List<Fuse.Drawing.Stroke>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::app::Fuse::Drawing::Stroke*(*)(void*, int))List__Fuse_Drawing_Stroke__get_Item;
    type->__interface_1.__fp_Clear = (void(*)(void*))List__Fuse_Drawing_Stroke__Clear;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Drawing::Stroke*))List__Fuse_Drawing_Stroke__Add;
    type->__interface_1.__fp_Remove = (bool(*)(void*, ::app::Fuse::Drawing::Stroke*))List__Fuse_Drawing_Stroke__Remove;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Drawing_Stroke__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Drawing_Stroke__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Drawing_Stroke__typeof(), offsetof(List__Fuse_Drawing_Stroke__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Drawing_Stroke__typeof(), offsetof(List__Fuse_Drawing_Stroke__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Stroke__typeof(), offsetof(List__Fuse_Drawing_Stroke__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Drawing_Stroke, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Drawing_Stroke, _data), ::uGetArrayType(::app::Fuse::Drawing::Stroke__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Drawing_Stroke, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Drawing_Stroke, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Drawing_Stroke__Add, 0, false, ::app::Fuse::Drawing::Stroke__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Drawing_Stroke__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Stroke__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Drawing_Stroke__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Drawing_Stroke__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Stroke__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Drawing_Stroke__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Drawing_Stroke__get_Item, 0, false, ::app::Fuse::Drawing::Stroke__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Drawing_Stroke__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Stroke__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Drawing_Stroke__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Stroke__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Drawing_Stroke__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Stroke__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Stroke__New_1, 0, true, List__Fuse_Drawing_Stroke__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Drawing_Stroke__New_2, 0, true, List__Fuse_Drawing_Stroke__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Drawing_Stroke__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Stroke__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Drawing_Stroke__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Drawing_Stroke__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Drawing::Stroke__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Drawing_Stroke__Sort, 0, false, ::app::Uno::Comparison__Fuse_Drawing_Stroke__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Drawing_Stroke__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Drawing::Stroke__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Drawing_Stroke__GetEnumerator_boxed(List__Fuse_Drawing_Stroke* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Stroke__typeof(), __this->GetEnumerator());
}

void List__Fuse_Drawing_Stroke___ObjInit(List__Fuse_Drawing_Stroke* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Drawing_Stroke___ObjInit_1(List__Fuse_Drawing_Stroke* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Drawing::Stroke__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Drawing_Stroke__Add(List__Fuse_Drawing_Stroke* __this, ::app::Fuse::Drawing::Stroke* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Stroke*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Drawing_Stroke__AddRange(List__Fuse_Drawing_Stroke* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Drawing_Stroke::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Drawing::Stroke* i = ::app::Uno::Collections::IEnumerator__Fuse_Drawing_Stroke::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Drawing_Stroke__BoundsCheck(List__Fuse_Drawing_Stroke* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Drawing_Stroke__Clear(List__Fuse_Drawing_Stroke* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Drawing_Stroke__Contains(List__Fuse_Drawing_Stroke* __this, ::app::Fuse::Drawing::Stroke* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Stroke(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Stroke*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Stroke__EnsureCapacity(List__Fuse_Drawing_Stroke* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Drawing::Stroke__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Drawing::Stroke__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Drawing::Stroke*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Stroke*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Drawing_Stroke__get_Count(List__Fuse_Drawing_Stroke* __this)
{
    return __this->_used;
}

::app::Fuse::Drawing::Stroke* List__Fuse_Drawing_Stroke__get_Item(List__Fuse_Drawing_Stroke* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Stroke*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Stroke List__Fuse_Drawing_Stroke__GetEnumerator(List__Fuse_Drawing_Stroke* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Drawing_Stroke__New_1(NULL, __this);
}

int List__Fuse_Drawing_Stroke__IndexOf(List__Fuse_Drawing_Stroke* __this, ::app::Fuse::Drawing::Stroke* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Stroke(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Stroke*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Drawing_Stroke__Insert(List__Fuse_Drawing_Stroke* __this, int index, ::app::Fuse::Drawing::Stroke* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Stroke*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Stroke*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Stroke*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Drawing_Stroke* List__Fuse_Drawing_Stroke__New_1(::uStatic* __this)
{
    List__Fuse_Drawing_Stroke* inst = (List__Fuse_Drawing_Stroke*)::uAllocObject(sizeof(List__Fuse_Drawing_Stroke), List__Fuse_Drawing_Stroke__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Drawing_Stroke* List__Fuse_Drawing_Stroke__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Drawing_Stroke* inst = (List__Fuse_Drawing_Stroke*)::uAllocObject(sizeof(List__Fuse_Drawing_Stroke), List__Fuse_Drawing_Stroke__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Drawing_Stroke__Remove(List__Fuse_Drawing_Stroke* __this, ::app::Fuse::Drawing::Stroke* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Drawing_Stroke(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Stroke*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Drawing_Stroke__RemoveAt(List__Fuse_Drawing_Stroke* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Stroke*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Stroke*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Stroke*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Drawing_Stroke__set_Item(List__Fuse_Drawing_Stroke* __this, int index, ::app::Fuse::Drawing::Stroke* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Drawing::Stroke*>(index) = value;
    __this->_version++;
}

void List__Fuse_Drawing_Stroke__Sort(List__Fuse_Drawing_Stroke* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Drawing_Stroke(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Drawing_Stroke__ToArray(List__Fuse_Drawing_Stroke* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Drawing::Stroke__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Drawing::Stroke*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Drawing::Stroke*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Effects_Effect__uType* List__Fuse_Effects_Effect__typeof()
{
    static ::uStaticStrong<List__Fuse_Effects_Effect__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Effects_Effect__uType*)::uAllocClassType(sizeof(List__Fuse_Effects_Effect__uType), "Uno.Collections.List<Fuse.Effects.Effect>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::app::Fuse::Effects::Effect*(*)(void*, int))List__Fuse_Effects_Effect__get_Item;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Effects::Effect*))List__Fuse_Effects_Effect__Add;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Effects_Effect__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Effects_Effect__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Effects_Effect__typeof(), offsetof(List__Fuse_Effects_Effect__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Effects_Effect__typeof(), offsetof(List__Fuse_Effects_Effect__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Effects_Effect__typeof(), offsetof(List__Fuse_Effects_Effect__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Effects_Effect, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Effects_Effect, _data), ::uGetArrayType(::app::Fuse::Effects::Effect__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Effects_Effect, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Effects_Effect, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Effects_Effect__Add, 0, false, ::app::Fuse::Effects::Effect__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Effects_Effect__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Effects_Effect__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Effects_Effect__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Effects_Effect__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Effects::Effect__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Effects_Effect__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Effects_Effect__get_Item, 0, false, ::app::Fuse::Effects::Effect__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Effects_Effect__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Effects_Effect__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Effects_Effect__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Effects::Effect__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Effects_Effect__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Effects::Effect__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Effects_Effect__New_1, 0, true, List__Fuse_Effects_Effect__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Effects_Effect__New_2, 0, true, List__Fuse_Effects_Effect__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Effects_Effect__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Effects::Effect__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Effects_Effect__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Effects_Effect__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Effects::Effect__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Effects_Effect__Sort, 0, false, ::app::Uno::Comparison__Fuse_Effects_Effect__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Effects_Effect__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Effects::Effect__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Effects_Effect__GetEnumerator_boxed(List__Fuse_Effects_Effect* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Effects_Effect__typeof(), __this->GetEnumerator());
}

void List__Fuse_Effects_Effect___ObjInit(List__Fuse_Effects_Effect* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Effects_Effect___ObjInit_1(List__Fuse_Effects_Effect* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Effects::Effect__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Effects_Effect__Add(List__Fuse_Effects_Effect* __this, ::app::Fuse::Effects::Effect* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Effects::Effect*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Effects_Effect__AddRange(List__Fuse_Effects_Effect* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Effects_Effect::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Effects::Effect* i = ::app::Uno::Collections::IEnumerator__Fuse_Effects_Effect::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Effects_Effect__BoundsCheck(List__Fuse_Effects_Effect* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Effects_Effect__Clear(List__Fuse_Effects_Effect* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Effects_Effect__Contains(List__Fuse_Effects_Effect* __this, ::app::Fuse::Effects::Effect* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Effects_Effect(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Effects::Effect*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Effects_Effect__EnsureCapacity(List__Fuse_Effects_Effect* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Effects::Effect__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Effects::Effect__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Effects::Effect*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Effects::Effect*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Effects_Effect__get_Count(List__Fuse_Effects_Effect* __this)
{
    return __this->_used;
}

::app::Fuse::Effects::Effect* List__Fuse_Effects_Effect__get_Item(List__Fuse_Effects_Effect* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Effects::Effect*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Effects_Effect List__Fuse_Effects_Effect__GetEnumerator(List__Fuse_Effects_Effect* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Effects_Effect__New_1(NULL, __this);
}

int List__Fuse_Effects_Effect__IndexOf(List__Fuse_Effects_Effect* __this, ::app::Fuse::Effects::Effect* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Effects_Effect(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Effects::Effect*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Effects_Effect__Insert(List__Fuse_Effects_Effect* __this, int index, ::app::Fuse::Effects::Effect* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Effects::Effect*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Effects::Effect*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Effects::Effect*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Effects_Effect* List__Fuse_Effects_Effect__New_1(::uStatic* __this)
{
    List__Fuse_Effects_Effect* inst = (List__Fuse_Effects_Effect*)::uAllocObject(sizeof(List__Fuse_Effects_Effect), List__Fuse_Effects_Effect__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Effects_Effect* List__Fuse_Effects_Effect__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Effects_Effect* inst = (List__Fuse_Effects_Effect*)::uAllocObject(sizeof(List__Fuse_Effects_Effect), List__Fuse_Effects_Effect__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Effects_Effect__Remove(List__Fuse_Effects_Effect* __this, ::app::Fuse::Effects::Effect* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Effects_Effect(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Effects::Effect*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Effects_Effect__RemoveAt(List__Fuse_Effects_Effect* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Effects::Effect*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Effects::Effect*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Effects::Effect*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Effects_Effect__set_Item(List__Fuse_Effects_Effect* __this, int index, ::app::Fuse::Effects::Effect* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Effects::Effect*>(index) = value;
    __this->_version++;
}

void List__Fuse_Effects_Effect__Sort(List__Fuse_Effects_Effect* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Effects_Effect(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Effects_Effect__ToArray(List__Fuse_Effects_Effect* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Effects::Effect__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Effects::Effect*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Effects::Effect*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Elements_Element__uType* List__Fuse_Elements_Element__typeof()
{
    static ::uStaticStrong<List__Fuse_Elements_Element__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Elements_Element__uType*)::uAllocClassType(sizeof(List__Fuse_Elements_Element__uType), "Uno.Collections.List<Fuse.Elements.Element>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Elements_Element__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Elements_Element__typeof(), offsetof(List__Fuse_Elements_Element__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Elements_Element, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Elements_Element, _data), ::uGetArrayType(::app::Fuse::Elements::Element__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Elements_Element, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Elements_Element, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Elements_Element__Add, 0, false, ::app::Fuse::Elements::Element__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Elements_Element__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Elements_Element__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Elements_Element__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Elements_Element__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Elements::Element__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Elements_Element__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Elements_Element__get_Item, 0, false, ::app::Fuse::Elements::Element__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Elements_Element__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Elements_Element__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Elements_Element__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::Element__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Elements_Element__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::Element__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Elements_Element__New_1, 0, true, List__Fuse_Elements_Element__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Elements_Element__New_2, 0, true, List__Fuse_Elements_Element__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Elements_Element__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Elements::Element__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Elements_Element__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Elements_Element__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::Element__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Elements_Element__Sort, 0, false, ::app::Uno::Comparison__Fuse_Elements_Element__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Elements_Element__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Elements::Element__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Elements_Element__GetEnumerator_boxed(List__Fuse_Elements_Element* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Elements_Element__typeof(), __this->GetEnumerator());
}

void List__Fuse_Elements_Element___ObjInit(List__Fuse_Elements_Element* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Elements_Element___ObjInit_1(List__Fuse_Elements_Element* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Elements::Element__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Elements_Element__Add(List__Fuse_Elements_Element* __this, ::app::Fuse::Elements::Element* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::Element*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Elements_Element__AddRange(List__Fuse_Elements_Element* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Elements_Element::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Elements::Element* i = ::app::Uno::Collections::IEnumerator__Fuse_Elements_Element::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Elements_Element__BoundsCheck(List__Fuse_Elements_Element* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Elements_Element__Clear(List__Fuse_Elements_Element* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Elements_Element__Contains(List__Fuse_Elements_Element* __this, ::app::Fuse::Elements::Element* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_Element(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::Element*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Elements_Element__EnsureCapacity(List__Fuse_Elements_Element* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Elements::Element__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Elements::Element__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Elements::Element*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::Element*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Elements_Element__get_Count(List__Fuse_Elements_Element* __this)
{
    return __this->_used;
}

::app::Fuse::Elements::Element* List__Fuse_Elements_Element__get_Item(List__Fuse_Elements_Element* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::Element*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Elements_Element List__Fuse_Elements_Element__GetEnumerator(List__Fuse_Elements_Element* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Elements_Element__New_1(NULL, __this);
}

int List__Fuse_Elements_Element__IndexOf(List__Fuse_Elements_Element* __this, ::app::Fuse::Elements::Element* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_Element(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::Element*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Elements_Element__Insert(List__Fuse_Elements_Element* __this, int index, ::app::Fuse::Elements::Element* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::Element*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::Element*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::Element*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Elements_Element* List__Fuse_Elements_Element__New_1(::uStatic* __this)
{
    List__Fuse_Elements_Element* inst = (List__Fuse_Elements_Element*)::uAllocObject(sizeof(List__Fuse_Elements_Element), List__Fuse_Elements_Element__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Elements_Element* List__Fuse_Elements_Element__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Elements_Element* inst = (List__Fuse_Elements_Element*)::uAllocObject(sizeof(List__Fuse_Elements_Element), List__Fuse_Elements_Element__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Elements_Element__Remove(List__Fuse_Elements_Element* __this, ::app::Fuse::Elements::Element* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_Element(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::Element*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Elements_Element__RemoveAt(List__Fuse_Elements_Element* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::Element*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::Element*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::Element*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Elements_Element__set_Item(List__Fuse_Elements_Element* __this, int index, ::app::Fuse::Elements::Element* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::Element*>(index) = value;
    __this->_version++;
}

void List__Fuse_Elements_Element__Sort(List__Fuse_Elements_Element* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Elements_Element(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Elements_Element__ToArray(List__Fuse_Elements_Element* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Elements::Element__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Elements::Element*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::Element*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Elements_ElementAtlas__uType* List__Fuse_Elements_ElementAtlas__typeof()
{
    static ::uStaticStrong<List__Fuse_Elements_ElementAtlas__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Elements_ElementAtlas__uType*)::uAllocClassType(sizeof(List__Fuse_Elements_ElementAtlas__uType), "Uno.Collections.List<Fuse.Elements.ElementAtlas>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Elements_ElementAtlas__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Elements_ElementAtlas__typeof(), offsetof(List__Fuse_Elements_ElementAtlas__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Elements_ElementAtlas, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Elements_ElementAtlas, _data), ::uGetArrayType(::app::Fuse::Elements::ElementAtlas__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Elements_ElementAtlas, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Elements_ElementAtlas, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Elements_ElementAtlas__Add, 0, false, ::app::Fuse::Elements::ElementAtlas__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Elements_ElementAtlas__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Elements_ElementAtlas__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Elements_ElementAtlas__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Elements_ElementAtlas__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Elements::ElementAtlas__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Elements_ElementAtlas__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Elements_ElementAtlas__get_Item, 0, false, ::app::Fuse::Elements::ElementAtlas__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Elements_ElementAtlas__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementAtlas__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Elements_ElementAtlas__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::ElementAtlas__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Elements_ElementAtlas__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::ElementAtlas__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Elements_ElementAtlas__New_1, 0, true, List__Fuse_Elements_ElementAtlas__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Elements_ElementAtlas__New_2, 0, true, List__Fuse_Elements_ElementAtlas__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Elements_ElementAtlas__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Elements::ElementAtlas__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Elements_ElementAtlas__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Elements_ElementAtlas__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::ElementAtlas__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Elements_ElementAtlas__Sort, 0, false, ::app::Uno::Comparison__Fuse_Elements_ElementAtlas__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Elements_ElementAtlas__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Elements::ElementAtlas__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Elements_ElementAtlas__GetEnumerator_boxed(List__Fuse_Elements_ElementAtlas* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementAtlas__typeof(), __this->GetEnumerator());
}

void List__Fuse_Elements_ElementAtlas___ObjInit(List__Fuse_Elements_ElementAtlas* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Elements_ElementAtlas___ObjInit_1(List__Fuse_Elements_ElementAtlas* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Elements::ElementAtlas__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Elements_ElementAtlas__Add(List__Fuse_Elements_ElementAtlas* __this, ::app::Fuse::Elements::ElementAtlas* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementAtlas*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Elements_ElementAtlas__AddRange(List__Fuse_Elements_ElementAtlas* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Elements_ElementAtlas::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Elements::ElementAtlas* i = ::app::Uno::Collections::IEnumerator__Fuse_Elements_ElementAtlas::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Elements_ElementAtlas__BoundsCheck(List__Fuse_Elements_ElementAtlas* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Elements_ElementAtlas__Clear(List__Fuse_Elements_ElementAtlas* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Elements_ElementAtlas__Contains(List__Fuse_Elements_ElementAtlas* __this, ::app::Fuse::Elements::ElementAtlas* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_ElementAtlas(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementAtlas*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Elements_ElementAtlas__EnsureCapacity(List__Fuse_Elements_ElementAtlas* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Elements::ElementAtlas__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Elements::ElementAtlas__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Elements::ElementAtlas*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementAtlas*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Elements_ElementAtlas__get_Count(List__Fuse_Elements_ElementAtlas* __this)
{
    return __this->_used;
}

::app::Fuse::Elements::ElementAtlas* List__Fuse_Elements_ElementAtlas__get_Item(List__Fuse_Elements_ElementAtlas* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementAtlas*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementAtlas List__Fuse_Elements_ElementAtlas__GetEnumerator(List__Fuse_Elements_ElementAtlas* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementAtlas__New_1(NULL, __this);
}

int List__Fuse_Elements_ElementAtlas__IndexOf(List__Fuse_Elements_ElementAtlas* __this, ::app::Fuse::Elements::ElementAtlas* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_ElementAtlas(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementAtlas*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Elements_ElementAtlas__Insert(List__Fuse_Elements_ElementAtlas* __this, int index, ::app::Fuse::Elements::ElementAtlas* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementAtlas*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementAtlas*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementAtlas*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Elements_ElementAtlas* List__Fuse_Elements_ElementAtlas__New_1(::uStatic* __this)
{
    List__Fuse_Elements_ElementAtlas* inst = (List__Fuse_Elements_ElementAtlas*)::uAllocObject(sizeof(List__Fuse_Elements_ElementAtlas), List__Fuse_Elements_ElementAtlas__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Elements_ElementAtlas* List__Fuse_Elements_ElementAtlas__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Elements_ElementAtlas* inst = (List__Fuse_Elements_ElementAtlas*)::uAllocObject(sizeof(List__Fuse_Elements_ElementAtlas), List__Fuse_Elements_ElementAtlas__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Elements_ElementAtlas__Remove(List__Fuse_Elements_ElementAtlas* __this, ::app::Fuse::Elements::ElementAtlas* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_ElementAtlas(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementAtlas*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Elements_ElementAtlas__RemoveAt(List__Fuse_Elements_ElementAtlas* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementAtlas*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementAtlas*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementAtlas*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Elements_ElementAtlas__set_Item(List__Fuse_Elements_ElementAtlas* __this, int index, ::app::Fuse::Elements::ElementAtlas* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementAtlas*>(index) = value;
    __this->_version++;
}

void List__Fuse_Elements_ElementAtlas__Sort(List__Fuse_Elements_ElementAtlas* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Elements_ElementAtlas(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Elements_ElementAtlas__ToArray(List__Fuse_Elements_ElementAtlas* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Elements::ElementAtlas__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Elements::ElementAtlas*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementAtlas*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Elements_ElementBatch__uType* List__Fuse_Elements_ElementBatch__typeof()
{
    static ::uStaticStrong<List__Fuse_Elements_ElementBatch__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Elements_ElementBatch__uType*)::uAllocClassType(sizeof(List__Fuse_Elements_ElementBatch__uType), "Uno.Collections.List<Fuse.Elements.ElementBatch>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Elements_ElementBatch__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Elements_ElementBatch__typeof(), offsetof(List__Fuse_Elements_ElementBatch__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Elements_ElementBatch, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Elements_ElementBatch, _data), ::uGetArrayType(::app::Fuse::Elements::ElementBatch__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Elements_ElementBatch, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Elements_ElementBatch, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Elements_ElementBatch__Add, 0, false, ::app::Fuse::Elements::ElementBatch__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Elements_ElementBatch__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Elements_ElementBatch__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Elements_ElementBatch__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Elements_ElementBatch__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Elements::ElementBatch__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Elements_ElementBatch__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Elements_ElementBatch__get_Item, 0, false, ::app::Fuse::Elements::ElementBatch__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Elements_ElementBatch__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementBatch__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Elements_ElementBatch__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::ElementBatch__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Elements_ElementBatch__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::ElementBatch__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Elements_ElementBatch__New_1, 0, true, List__Fuse_Elements_ElementBatch__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Elements_ElementBatch__New_2, 0, true, List__Fuse_Elements_ElementBatch__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Elements_ElementBatch__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Elements::ElementBatch__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Elements_ElementBatch__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Elements_ElementBatch__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::ElementBatch__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Elements_ElementBatch__Sort, 0, false, ::app::Uno::Comparison__Fuse_Elements_ElementBatch__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Elements_ElementBatch__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Elements::ElementBatch__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Elements_ElementBatch__GetEnumerator_boxed(List__Fuse_Elements_ElementBatch* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementBatch__typeof(), __this->GetEnumerator());
}

void List__Fuse_Elements_ElementBatch___ObjInit(List__Fuse_Elements_ElementBatch* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Elements_ElementBatch___ObjInit_1(List__Fuse_Elements_ElementBatch* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Elements::ElementBatch__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Elements_ElementBatch__Add(List__Fuse_Elements_ElementBatch* __this, ::app::Fuse::Elements::ElementBatch* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatch*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Elements_ElementBatch__AddRange(List__Fuse_Elements_ElementBatch* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Elements_ElementBatch::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Elements::ElementBatch* i = ::app::Uno::Collections::IEnumerator__Fuse_Elements_ElementBatch::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Elements_ElementBatch__BoundsCheck(List__Fuse_Elements_ElementBatch* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Elements_ElementBatch__Clear(List__Fuse_Elements_ElementBatch* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Elements_ElementBatch__Contains(List__Fuse_Elements_ElementBatch* __this, ::app::Fuse::Elements::ElementBatch* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_ElementBatch(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatch*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Elements_ElementBatch__EnsureCapacity(List__Fuse_Elements_ElementBatch* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Elements::ElementBatch__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Elements::ElementBatch__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Elements::ElementBatch*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatch*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Elements_ElementBatch__get_Count(List__Fuse_Elements_ElementBatch* __this)
{
    return __this->_used;
}

::app::Fuse::Elements::ElementBatch* List__Fuse_Elements_ElementBatch__get_Item(List__Fuse_Elements_ElementBatch* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatch*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementBatch List__Fuse_Elements_ElementBatch__GetEnumerator(List__Fuse_Elements_ElementBatch* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementBatch__New_1(NULL, __this);
}

int List__Fuse_Elements_ElementBatch__IndexOf(List__Fuse_Elements_ElementBatch* __this, ::app::Fuse::Elements::ElementBatch* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_ElementBatch(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatch*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Elements_ElementBatch__Insert(List__Fuse_Elements_ElementBatch* __this, int index, ::app::Fuse::Elements::ElementBatch* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatch*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatch*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatch*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Elements_ElementBatch* List__Fuse_Elements_ElementBatch__New_1(::uStatic* __this)
{
    List__Fuse_Elements_ElementBatch* inst = (List__Fuse_Elements_ElementBatch*)::uAllocObject(sizeof(List__Fuse_Elements_ElementBatch), List__Fuse_Elements_ElementBatch__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Elements_ElementBatch* List__Fuse_Elements_ElementBatch__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Elements_ElementBatch* inst = (List__Fuse_Elements_ElementBatch*)::uAllocObject(sizeof(List__Fuse_Elements_ElementBatch), List__Fuse_Elements_ElementBatch__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Elements_ElementBatch__Remove(List__Fuse_Elements_ElementBatch* __this, ::app::Fuse::Elements::ElementBatch* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_ElementBatch(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatch*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Elements_ElementBatch__RemoveAt(List__Fuse_Elements_ElementBatch* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatch*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatch*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatch*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Elements_ElementBatch__set_Item(List__Fuse_Elements_ElementBatch* __this, int index, ::app::Fuse::Elements::ElementBatch* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatch*>(index) = value;
    __this->_version++;
}

void List__Fuse_Elements_ElementBatch__Sort(List__Fuse_Elements_ElementBatch* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Elements_ElementBatch(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Elements_ElementBatch__ToArray(List__Fuse_Elements_ElementBatch* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Elements::ElementBatch__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Elements::ElementBatch*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatch*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Elements_ElementBatchEntry__uType* List__Fuse_Elements_ElementBatchEntry__typeof()
{
    static ::uStaticStrong<List__Fuse_Elements_ElementBatchEntry__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Elements_ElementBatchEntry__uType*)::uAllocClassType(sizeof(List__Fuse_Elements_ElementBatchEntry__uType), "Uno.Collections.List<Fuse.Elements.ElementBatchEntry>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Elements_ElementBatchEntry__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Elements_ElementBatchEntry__typeof(), offsetof(List__Fuse_Elements_ElementBatchEntry__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Elements_ElementBatchEntry, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Elements_ElementBatchEntry, _data), ::uGetArrayType(::app::Fuse::Elements::ElementBatchEntry__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Elements_ElementBatchEntry, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Elements_ElementBatchEntry, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Elements_ElementBatchEntry__Add, 0, false, ::app::Fuse::Elements::ElementBatchEntry__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Elements_ElementBatchEntry__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Elements_ElementBatchEntry__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Elements_ElementBatchEntry__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Elements_ElementBatchEntry__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Elements::ElementBatchEntry__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Elements_ElementBatchEntry__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Elements_ElementBatchEntry__get_Item, 0, false, ::app::Fuse::Elements::ElementBatchEntry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Elements_ElementBatchEntry__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementBatchEntry__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Elements_ElementBatchEntry__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::ElementBatchEntry__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Elements_ElementBatchEntry__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::ElementBatchEntry__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Elements_ElementBatchEntry__New_1, 0, true, List__Fuse_Elements_ElementBatchEntry__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Elements_ElementBatchEntry__New_2, 0, true, List__Fuse_Elements_ElementBatchEntry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Elements_ElementBatchEntry__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Elements::ElementBatchEntry__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Elements_ElementBatchEntry__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Elements_ElementBatchEntry__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::ElementBatchEntry__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Elements_ElementBatchEntry__Sort, 0, false, ::app::Uno::Comparison__Fuse_Elements_ElementBatchEntry__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Elements_ElementBatchEntry__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Elements::ElementBatchEntry__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Elements_ElementBatchEntry__GetEnumerator_boxed(List__Fuse_Elements_ElementBatchEntry* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementBatchEntry__typeof(), __this->GetEnumerator());
}

void List__Fuse_Elements_ElementBatchEntry___ObjInit(List__Fuse_Elements_ElementBatchEntry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Elements_ElementBatchEntry___ObjInit_1(List__Fuse_Elements_ElementBatchEntry* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Elements::ElementBatchEntry__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Elements_ElementBatchEntry__Add(List__Fuse_Elements_ElementBatchEntry* __this, ::app::Fuse::Elements::ElementBatchEntry* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatchEntry*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Elements_ElementBatchEntry__AddRange(List__Fuse_Elements_ElementBatchEntry* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Elements_ElementBatchEntry::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Elements::ElementBatchEntry* i = ::app::Uno::Collections::IEnumerator__Fuse_Elements_ElementBatchEntry::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Elements_ElementBatchEntry__BoundsCheck(List__Fuse_Elements_ElementBatchEntry* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Elements_ElementBatchEntry__Clear(List__Fuse_Elements_ElementBatchEntry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Elements_ElementBatchEntry__Contains(List__Fuse_Elements_ElementBatchEntry* __this, ::app::Fuse::Elements::ElementBatchEntry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_ElementBatchEntry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatchEntry*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Elements_ElementBatchEntry__EnsureCapacity(List__Fuse_Elements_ElementBatchEntry* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Elements::ElementBatchEntry__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Elements::ElementBatchEntry__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Elements::ElementBatchEntry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatchEntry*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Elements_ElementBatchEntry__get_Count(List__Fuse_Elements_ElementBatchEntry* __this)
{
    return __this->_used;
}

::app::Fuse::Elements::ElementBatchEntry* List__Fuse_Elements_ElementBatchEntry__get_Item(List__Fuse_Elements_ElementBatchEntry* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatchEntry*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementBatchEntry List__Fuse_Elements_ElementBatchEntry__GetEnumerator(List__Fuse_Elements_ElementBatchEntry* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Elements_ElementBatchEntry__New_1(NULL, __this);
}

int List__Fuse_Elements_ElementBatchEntry__IndexOf(List__Fuse_Elements_ElementBatchEntry* __this, ::app::Fuse::Elements::ElementBatchEntry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_ElementBatchEntry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatchEntry*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Elements_ElementBatchEntry__Insert(List__Fuse_Elements_ElementBatchEntry* __this, int index, ::app::Fuse::Elements::ElementBatchEntry* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatchEntry*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatchEntry*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatchEntry*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Elements_ElementBatchEntry* List__Fuse_Elements_ElementBatchEntry__New_1(::uStatic* __this)
{
    List__Fuse_Elements_ElementBatchEntry* inst = (List__Fuse_Elements_ElementBatchEntry*)::uAllocObject(sizeof(List__Fuse_Elements_ElementBatchEntry), List__Fuse_Elements_ElementBatchEntry__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Elements_ElementBatchEntry* List__Fuse_Elements_ElementBatchEntry__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Elements_ElementBatchEntry* inst = (List__Fuse_Elements_ElementBatchEntry*)::uAllocObject(sizeof(List__Fuse_Elements_ElementBatchEntry), List__Fuse_Elements_ElementBatchEntry__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Elements_ElementBatchEntry__Remove(List__Fuse_Elements_ElementBatchEntry* __this, ::app::Fuse::Elements::ElementBatchEntry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_ElementBatchEntry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatchEntry*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Elements_ElementBatchEntry__RemoveAt(List__Fuse_Elements_ElementBatchEntry* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatchEntry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatchEntry*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatchEntry*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Elements_ElementBatchEntry__set_Item(List__Fuse_Elements_ElementBatchEntry* __this, int index, ::app::Fuse::Elements::ElementBatchEntry* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Elements::ElementBatchEntry*>(index) = value;
    __this->_version++;
}

void List__Fuse_Elements_ElementBatchEntry__Sort(List__Fuse_Elements_ElementBatchEntry* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Elements_ElementBatchEntry(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Elements_ElementBatchEntry__ToArray(List__Fuse_Elements_ElementBatchEntry* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Elements::ElementBatchEntry__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Elements::ElementBatchEntry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Elements::ElementBatchEntry*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Elements_IElementBatchDrawable__uType* List__Fuse_Elements_IElementBatchDrawable__typeof()
{
    static ::uStaticStrong<List__Fuse_Elements_IElementBatchDrawable__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Elements_IElementBatchDrawable__uType*)::uAllocClassType(sizeof(List__Fuse_Elements_IElementBatchDrawable__uType), "Uno.Collections.List<Fuse.Elements.IElementBatchDrawable>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Elements_IElementBatchDrawable__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Elements_IElementBatchDrawable__typeof(), offsetof(List__Fuse_Elements_IElementBatchDrawable__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Elements_IElementBatchDrawable, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Elements_IElementBatchDrawable, _data), ::uGetArrayType(::app::Fuse::Elements::IElementBatchDrawable__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Elements_IElementBatchDrawable, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Elements_IElementBatchDrawable, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Elements_IElementBatchDrawable__Add, 0, false, ::app::Fuse::Elements::IElementBatchDrawable__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Elements_IElementBatchDrawable__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Elements_IElementBatchDrawable__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Elements_IElementBatchDrawable__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Elements_IElementBatchDrawable__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Elements::IElementBatchDrawable__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Elements_IElementBatchDrawable__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Elements_IElementBatchDrawable__get_Item, 0, false, ::app::Fuse::Elements::IElementBatchDrawable__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Elements_IElementBatchDrawable__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Elements_IElementBatchDrawable__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Elements_IElementBatchDrawable__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::IElementBatchDrawable__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Elements_IElementBatchDrawable__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::IElementBatchDrawable__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Elements_IElementBatchDrawable__New_1, 0, true, List__Fuse_Elements_IElementBatchDrawable__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Elements_IElementBatchDrawable__New_2, 0, true, List__Fuse_Elements_IElementBatchDrawable__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Elements_IElementBatchDrawable__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Elements::IElementBatchDrawable__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Elements_IElementBatchDrawable__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Elements_IElementBatchDrawable__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Elements::IElementBatchDrawable__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Elements_IElementBatchDrawable__Sort, 0, false, ::app::Uno::Comparison__Fuse_Elements_IElementBatchDrawable__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Elements_IElementBatchDrawable__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Elements::IElementBatchDrawable__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Elements_IElementBatchDrawable__GetEnumerator_boxed(List__Fuse_Elements_IElementBatchDrawable* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Elements_IElementBatchDrawable__typeof(), __this->GetEnumerator());
}

void List__Fuse_Elements_IElementBatchDrawable___ObjInit(List__Fuse_Elements_IElementBatchDrawable* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Elements_IElementBatchDrawable___ObjInit_1(List__Fuse_Elements_IElementBatchDrawable* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Elements::IElementBatchDrawable__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Elements_IElementBatchDrawable__Add(List__Fuse_Elements_IElementBatchDrawable* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Elements_IElementBatchDrawable__AddRange(List__Fuse_Elements_IElementBatchDrawable* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Elements_IElementBatchDrawable::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Fuse_Elements_IElementBatchDrawable::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Elements_IElementBatchDrawable__BoundsCheck(List__Fuse_Elements_IElementBatchDrawable* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Elements_IElementBatchDrawable__Clear(List__Fuse_Elements_IElementBatchDrawable* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Elements_IElementBatchDrawable__Contains(List__Fuse_Elements_IElementBatchDrawable* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_IElementBatchDrawable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Elements_IElementBatchDrawable__EnsureCapacity(List__Fuse_Elements_IElementBatchDrawable* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Elements::IElementBatchDrawable__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Elements::IElementBatchDrawable__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Elements_IElementBatchDrawable__get_Count(List__Fuse_Elements_IElementBatchDrawable* __this)
{
    return __this->_used;
}

::uObject* List__Fuse_Elements_IElementBatchDrawable__get_Item(List__Fuse_Elements_IElementBatchDrawable* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Elements_IElementBatchDrawable List__Fuse_Elements_IElementBatchDrawable__GetEnumerator(List__Fuse_Elements_IElementBatchDrawable* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Elements_IElementBatchDrawable__New_1(NULL, __this);
}

int List__Fuse_Elements_IElementBatchDrawable__IndexOf(List__Fuse_Elements_IElementBatchDrawable* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_IElementBatchDrawable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Elements_IElementBatchDrawable__Insert(List__Fuse_Elements_IElementBatchDrawable* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Elements_IElementBatchDrawable* List__Fuse_Elements_IElementBatchDrawable__New_1(::uStatic* __this)
{
    List__Fuse_Elements_IElementBatchDrawable* inst = (List__Fuse_Elements_IElementBatchDrawable*)::uAllocObject(sizeof(List__Fuse_Elements_IElementBatchDrawable), List__Fuse_Elements_IElementBatchDrawable__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Elements_IElementBatchDrawable* List__Fuse_Elements_IElementBatchDrawable__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Elements_IElementBatchDrawable* inst = (List__Fuse_Elements_IElementBatchDrawable*)::uAllocObject(sizeof(List__Fuse_Elements_IElementBatchDrawable), List__Fuse_Elements_IElementBatchDrawable__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Elements_IElementBatchDrawable__Remove(List__Fuse_Elements_IElementBatchDrawable* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Elements_IElementBatchDrawable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Elements_IElementBatchDrawable__RemoveAt(List__Fuse_Elements_IElementBatchDrawable* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Elements_IElementBatchDrawable__set_Item(List__Fuse_Elements_IElementBatchDrawable* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Fuse_Elements_IElementBatchDrawable__Sort(List__Fuse_Elements_IElementBatchDrawable* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Elements_IElementBatchDrawable(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Elements_IElementBatchDrawable__ToArray(List__Fuse_Elements_IElementBatchDrawable* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Elements::IElementBatchDrawable__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Entities_Component__uType* List__Fuse_Entities_Component__typeof()
{
    static ::uStaticStrong<List__Fuse_Entities_Component__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Entities_Component__uType*)::uAllocClassType(sizeof(List__Fuse_Entities_Component__uType), "Uno.Collections.List<Fuse.Entities.Component>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::app::Fuse::Entities::Component*(*)(void*, int))List__Fuse_Entities_Component__get_Item;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Entities::Component*))List__Fuse_Entities_Component__Add;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Entities_Component__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Entities_Component__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Entities_Component__typeof(), offsetof(List__Fuse_Entities_Component__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Entities_Component__typeof(), offsetof(List__Fuse_Entities_Component__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Entities_Component__typeof(), offsetof(List__Fuse_Entities_Component__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Entities_Component, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Entities_Component, _data), ::uGetArrayType(::app::Fuse::Entities::Component__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Entities_Component, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Entities_Component, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Entities_Component__Add, 0, false, ::app::Fuse::Entities::Component__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Entities_Component__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Entities_Component__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Entities_Component__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Entities_Component__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Component__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Entities_Component__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Entities_Component__get_Item, 0, false, ::app::Fuse::Entities::Component__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Entities_Component__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Component__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Entities_Component__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Entities::Component__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Entities_Component__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Entities::Component__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Entities_Component__New_1, 0, true, List__Fuse_Entities_Component__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Entities_Component__New_2, 0, true, List__Fuse_Entities_Component__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Entities_Component__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Component__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Entities_Component__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Entities_Component__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Entities::Component__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Entities_Component__Sort, 0, false, ::app::Uno::Comparison__Fuse_Entities_Component__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Entities_Component__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Entities::Component__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Entities_Component__GetEnumerator_boxed(List__Fuse_Entities_Component* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Component__typeof(), __this->GetEnumerator());
}

void List__Fuse_Entities_Component___ObjInit(List__Fuse_Entities_Component* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Entities_Component___ObjInit_1(List__Fuse_Entities_Component* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Entities::Component__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Entities_Component__Add(List__Fuse_Entities_Component* __this, ::app::Fuse::Entities::Component* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Component*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Entities_Component__AddRange(List__Fuse_Entities_Component* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Entities_Component::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Entities::Component* i = ::app::Uno::Collections::IEnumerator__Fuse_Entities_Component::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Entities_Component__BoundsCheck(List__Fuse_Entities_Component* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Entities_Component__Clear(List__Fuse_Entities_Component* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Entities_Component__Contains(List__Fuse_Entities_Component* __this, ::app::Fuse::Entities::Component* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Entities_Component(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Component*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Entities_Component__EnsureCapacity(List__Fuse_Entities_Component* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Entities::Component__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Entities::Component__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Entities::Component*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Component*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Entities_Component__get_Count(List__Fuse_Entities_Component* __this)
{
    return __this->_used;
}

::app::Fuse::Entities::Component* List__Fuse_Entities_Component__get_Item(List__Fuse_Entities_Component* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Component*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Component List__Fuse_Entities_Component__GetEnumerator(List__Fuse_Entities_Component* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Component__New_1(NULL, __this);
}

int List__Fuse_Entities_Component__IndexOf(List__Fuse_Entities_Component* __this, ::app::Fuse::Entities::Component* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Entities_Component(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Component*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Entities_Component__Insert(List__Fuse_Entities_Component* __this, int index, ::app::Fuse::Entities::Component* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Component*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Component*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Component*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Entities_Component* List__Fuse_Entities_Component__New_1(::uStatic* __this)
{
    List__Fuse_Entities_Component* inst = (List__Fuse_Entities_Component*)::uAllocObject(sizeof(List__Fuse_Entities_Component), List__Fuse_Entities_Component__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Entities_Component* List__Fuse_Entities_Component__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Entities_Component* inst = (List__Fuse_Entities_Component*)::uAllocObject(sizeof(List__Fuse_Entities_Component), List__Fuse_Entities_Component__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Entities_Component__Remove(List__Fuse_Entities_Component* __this, ::app::Fuse::Entities::Component* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Entities_Component(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Component*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Entities_Component__RemoveAt(List__Fuse_Entities_Component* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Component*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Component*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Component*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Entities_Component__set_Item(List__Fuse_Entities_Component* __this, int index, ::app::Fuse::Entities::Component* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Component*>(index) = value;
    __this->_version++;
}

void List__Fuse_Entities_Component__Sort(List__Fuse_Entities_Component* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Entities_Component(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Entities_Component__ToArray(List__Fuse_Entities_Component* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Entities::Component__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Entities::Component*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Component*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Entities_Entity__uType* List__Fuse_Entities_Entity__typeof()
{
    static ::uStaticStrong<List__Fuse_Entities_Entity__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Entities_Entity__uType*)::uAllocClassType(sizeof(List__Fuse_Entities_Entity__uType), "Uno.Collections.List<Fuse.Entities.Entity>", false, 3, 1, 0);

    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Fuse_Entities_Entity__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Fuse::Entities::Entity*(*)(void*, int))List__Fuse_Entities_Entity__get_Item;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Entities::Entity*))List__Fuse_Entities_Entity__Add;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Entities_Entity__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Entities_Entity__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Entities_Entity__typeof(), offsetof(List__Fuse_Entities_Entity__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Entities_Entity__typeof(), offsetof(List__Fuse_Entities_Entity__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Entities_Entity__typeof(), offsetof(List__Fuse_Entities_Entity__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Entities_Entity, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Entities_Entity, _data), ::uGetArrayType(::app::Fuse::Entities::Entity__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Entities_Entity, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Entities_Entity, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Entities_Entity__Add, 0, false, ::app::Fuse::Entities::Entity__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Entities_Entity__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Entities_Entity__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Entities_Entity__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Entities_Entity__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Entity__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Entities_Entity__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Entities_Entity__get_Item, 0, false, ::app::Fuse::Entities::Entity__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Entities_Entity__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Entity__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Entities_Entity__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Entities::Entity__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Entities_Entity__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Entities::Entity__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Entities_Entity__New_1, 0, true, List__Fuse_Entities_Entity__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Entities_Entity__New_2, 0, true, List__Fuse_Entities_Entity__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Entities_Entity__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Entity__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Entities_Entity__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Entities_Entity__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Entities::Entity__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Entities_Entity__Sort, 0, false, ::app::Uno::Comparison__Fuse_Entities_Entity__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Entities_Entity__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Entities::Entity__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Entities_Entity__GetEnumerator_boxed(List__Fuse_Entities_Entity* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Entity__typeof(), __this->GetEnumerator());
}

void List__Fuse_Entities_Entity___ObjInit(List__Fuse_Entities_Entity* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Entities_Entity___ObjInit_1(List__Fuse_Entities_Entity* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Entities::Entity__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Entities_Entity__Add(List__Fuse_Entities_Entity* __this, ::app::Fuse::Entities::Entity* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Entity*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Entities_Entity__AddRange(List__Fuse_Entities_Entity* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Entities_Entity::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Entities::Entity* i = ::app::Uno::Collections::IEnumerator__Fuse_Entities_Entity::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Entities_Entity__BoundsCheck(List__Fuse_Entities_Entity* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Entities_Entity__Clear(List__Fuse_Entities_Entity* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Entities_Entity__Contains(List__Fuse_Entities_Entity* __this, ::app::Fuse::Entities::Entity* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Entities_Entity(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entity*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Entities_Entity__EnsureCapacity(List__Fuse_Entities_Entity* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Entities::Entity__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Entities::Entity__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Entities::Entity*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entity*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Entities_Entity__get_Count(List__Fuse_Entities_Entity* __this)
{
    return __this->_used;
}

::app::Fuse::Entities::Entity* List__Fuse_Entities_Entity__get_Item(List__Fuse_Entities_Entity* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entity*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Entity List__Fuse_Entities_Entity__GetEnumerator(List__Fuse_Entities_Entity* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Entity__New_1(NULL, __this);
}

int List__Fuse_Entities_Entity__IndexOf(List__Fuse_Entities_Entity* __this, ::app::Fuse::Entities::Entity* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Entities_Entity(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entity*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Entities_Entity__Insert(List__Fuse_Entities_Entity* __this, int index, ::app::Fuse::Entities::Entity* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Entity*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entity*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Entity*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Entities_Entity* List__Fuse_Entities_Entity__New_1(::uStatic* __this)
{
    List__Fuse_Entities_Entity* inst = (List__Fuse_Entities_Entity*)::uAllocObject(sizeof(List__Fuse_Entities_Entity), List__Fuse_Entities_Entity__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Entities_Entity* List__Fuse_Entities_Entity__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Entities_Entity* inst = (List__Fuse_Entities_Entity*)::uAllocObject(sizeof(List__Fuse_Entities_Entity), List__Fuse_Entities_Entity__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Entities_Entity__Remove(List__Fuse_Entities_Entity* __this, ::app::Fuse::Entities::Entity* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Entities_Entity(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entity*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Entities_Entity__RemoveAt(List__Fuse_Entities_Entity* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Entity*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entity*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Entity*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Entities_Entity__set_Item(List__Fuse_Entities_Entity* __this, int index, ::app::Fuse::Entities::Entity* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Entities::Entity*>(index) = value;
    __this->_version++;
}

void List__Fuse_Entities_Entity__Sort(List__Fuse_Entities_Entity* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Entities_Entity(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Entities_Entity__ToArray(List__Fuse_Entities_Entity* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Entities::Entity__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Entities::Entity*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entity*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Entities_Entry__uType* List__Fuse_Entities_Entry__typeof()
{
    static ::uStaticStrong<List__Fuse_Entities_Entry__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Entities_Entry__uType*)::uAllocClassType(sizeof(List__Fuse_Entities_Entry__uType), "Uno.Collections.List<Fuse.Entities.Entry>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Entities_Entry__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Entities_Entry__typeof(), offsetof(List__Fuse_Entities_Entry__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Entities_Entry, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Entities_Entry, _data), ::uGetArrayType(::app::Fuse::Entities::Entry__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Entities_Entry, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Entities_Entry, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Entities_Entry__Add, 0, false, ::app::Fuse::Entities::Entry__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Entities_Entry__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Entities_Entry__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Entities_Entry__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Entities_Entry__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Entry__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Entities_Entry__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Entities_Entry__get_Item, 0, false, ::app::Fuse::Entities::Entry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Entities_Entry__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Entry__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Entities_Entry__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Entities::Entry__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Entities_Entry__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Entities::Entry__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Entities_Entry__New_1, 0, true, List__Fuse_Entities_Entry__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Entities_Entry__New_2, 0, true, List__Fuse_Entities_Entry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Entities_Entry__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Entry__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Entities_Entry__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Entities_Entry__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Entities::Entry__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Entities_Entry__Sort, 0, false, ::app::Uno::Comparison__Fuse_Entities_Entry__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Entities_Entry__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Entities::Entry__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Entities_Entry__GetEnumerator_boxed(List__Fuse_Entities_Entry* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Entry__typeof(), __this->GetEnumerator());
}

void List__Fuse_Entities_Entry___ObjInit(List__Fuse_Entities_Entry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Entities_Entry___ObjInit_1(List__Fuse_Entities_Entry* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Entities::Entry__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Entities_Entry__Add(List__Fuse_Entities_Entry* __this, ::app::Fuse::Entities::Entry item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Entities_Entry__AddRange(List__Fuse_Entities_Entry* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Entities_Entry::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Entities::Entry i = ::app::Uno::Collections::IEnumerator__Fuse_Entities_Entry::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Entities_Entry__BoundsCheck(List__Fuse_Entities_Entry* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Entities_Entry__Clear(List__Fuse_Entities_Entry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Entities_Entry__Contains(List__Fuse_Entities_Entry* __this, ::app::Fuse::Entities::Entry item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Entities_Entry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Entities_Entry__EnsureCapacity(List__Fuse_Entities_Entry* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Entities::Entry__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Entities::Entry__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Fuse::Entities::Entry>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Entities_Entry__get_Count(List__Fuse_Entities_Entry* __this)
{
    return __this->_used;
}

::app::Fuse::Entities::Entry List__Fuse_Entities_Entry__get_Item(List__Fuse_Entities_Entry* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Entry List__Fuse_Entities_Entry__GetEnumerator(List__Fuse_Entities_Entry* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Entities_Entry__New_1(NULL, __this);
}

int List__Fuse_Entities_Entry__IndexOf(List__Fuse_Entities_Entry* __this, ::app::Fuse::Entities::Entry item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Entities_Entry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Entities_Entry__Insert(List__Fuse_Entities_Entry* __this, int index, ::app::Fuse::Entities::Entry item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Entities_Entry* List__Fuse_Entities_Entry__New_1(::uStatic* __this)
{
    List__Fuse_Entities_Entry* inst = (List__Fuse_Entities_Entry*)::uAllocObject(sizeof(List__Fuse_Entities_Entry), List__Fuse_Entities_Entry__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Entities_Entry* List__Fuse_Entities_Entry__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Entities_Entry* inst = (List__Fuse_Entities_Entry*)::uAllocObject(sizeof(List__Fuse_Entities_Entry), List__Fuse_Entities_Entry__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Entities_Entry__Remove(List__Fuse_Entities_Entry* __this, ::app::Fuse::Entities::Entry item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Entities_Entry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Entities_Entry__RemoveAt(List__Fuse_Entities_Entry* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(__this->_used) = ::uDefault< ::app::Fuse::Entities::Entry>();
    __this->_version++;
}

void List__Fuse_Entities_Entry__set_Item(List__Fuse_Entities_Entry* __this, int index, ::app::Fuse::Entities::Entry value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(index) = value;
    __this->_version++;
}

void List__Fuse_Entities_Entry__Sort(List__Fuse_Entities_Entry* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Entities_Entry(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Entities_Entry__ToArray(List__Fuse_Entities_Entry* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Entities::Entry__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Fuse::Entities::Entry>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Entities::Entry>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_Capturer__uType* List__Fuse_Input_Capturer__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_Capturer__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_Capturer__uType*)::uAllocClassType(sizeof(List__Fuse_Input_Capturer__uType), "Uno.Collections.List<Fuse.Input.Capturer>", false, 3, 1, 0);

    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Fuse_Input_Capturer__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Fuse::Input::Capturer*(*)(void*, int))List__Fuse_Input_Capturer__get_Item;
    type->__interface_1.__fp_Clear = (void(*)(void*))List__Fuse_Input_Capturer__Clear;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Input::Capturer*))List__Fuse_Input_Capturer__Add;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Input_Capturer__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_Capturer__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Input_Capturer__typeof(), offsetof(List__Fuse_Input_Capturer__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Input_Capturer__typeof(), offsetof(List__Fuse_Input_Capturer__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Input_Capturer__typeof(), offsetof(List__Fuse_Input_Capturer__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_Capturer, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_Capturer, _data), ::uGetArrayType(::app::Fuse::Input::Capturer__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_Capturer, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_Capturer, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_Capturer__Add, 0, false, ::app::Fuse::Input::Capturer__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_Capturer__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_Capturer__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_Capturer__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_Capturer__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::Capturer__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_Capturer__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_Capturer__get_Item, 0, false, ::app::Fuse::Input::Capturer__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_Capturer__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_Capturer__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_Capturer__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::Capturer__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_Capturer__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::Capturer__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_Capturer__New_1, 0, true, List__Fuse_Input_Capturer__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_Capturer__New_2, 0, true, List__Fuse_Input_Capturer__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_Capturer__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::Capturer__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_Capturer__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_Capturer__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::Capturer__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_Capturer__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_Capturer__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_Capturer__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::Capturer__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_Capturer__GetEnumerator_boxed(List__Fuse_Input_Capturer* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_Capturer__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_Capturer___ObjInit(List__Fuse_Input_Capturer* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_Capturer___ObjInit_1(List__Fuse_Input_Capturer* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::Capturer__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_Capturer__Add(List__Fuse_Input_Capturer* __this, ::app::Fuse::Input::Capturer* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Capturer*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_Capturer__AddRange(List__Fuse_Input_Capturer* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_Capturer::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Input::Capturer* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_Capturer::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_Capturer__BoundsCheck(List__Fuse_Input_Capturer* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_Capturer__Clear(List__Fuse_Input_Capturer* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_Capturer__Contains(List__Fuse_Input_Capturer* __this, ::app::Fuse::Input::Capturer* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_Capturer(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Capturer*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_Capturer__EnsureCapacity(List__Fuse_Input_Capturer* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::Capturer__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::Capturer__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Input::Capturer*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Capturer*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_Capturer__get_Count(List__Fuse_Input_Capturer* __this)
{
    return __this->_used;
}

::app::Fuse::Input::Capturer* List__Fuse_Input_Capturer__get_Item(List__Fuse_Input_Capturer* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Capturer*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_Capturer List__Fuse_Input_Capturer__GetEnumerator(List__Fuse_Input_Capturer* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_Capturer__New_1(NULL, __this);
}

int List__Fuse_Input_Capturer__IndexOf(List__Fuse_Input_Capturer* __this, ::app::Fuse::Input::Capturer* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_Capturer(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Capturer*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_Capturer__Insert(List__Fuse_Input_Capturer* __this, int index, ::app::Fuse::Input::Capturer* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Capturer*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Capturer*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Capturer*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_Capturer* List__Fuse_Input_Capturer__New_1(::uStatic* __this)
{
    List__Fuse_Input_Capturer* inst = (List__Fuse_Input_Capturer*)::uAllocObject(sizeof(List__Fuse_Input_Capturer), List__Fuse_Input_Capturer__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_Capturer* List__Fuse_Input_Capturer__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_Capturer* inst = (List__Fuse_Input_Capturer*)::uAllocObject(sizeof(List__Fuse_Input_Capturer), List__Fuse_Input_Capturer__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_Capturer__Remove(List__Fuse_Input_Capturer* __this, ::app::Fuse::Input::Capturer* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_Capturer(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Capturer*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_Capturer__RemoveAt(List__Fuse_Input_Capturer* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Capturer*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Capturer*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Capturer*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_Capturer__set_Item(List__Fuse_Input_Capturer* __this, int index, ::app::Fuse::Input::Capturer* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Capturer*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_Capturer__Sort(List__Fuse_Input_Capturer* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_Capturer(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_Capturer__ToArray(List__Fuse_Input_Capturer* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::Capturer__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Input::Capturer*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Capturer*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_FocusGainedHandler__uType* List__Fuse_Input_FocusGainedHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_FocusGainedHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_FocusGainedHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_FocusGainedHandler__uType), "Uno.Collections.List<Fuse.Input.FocusGainedHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_FocusGainedHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_FocusGainedHandler__typeof(), offsetof(List__Fuse_Input_FocusGainedHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_FocusGainedHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_FocusGainedHandler, _data), ::uGetArrayType(::app::Fuse::Input::FocusGainedHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_FocusGainedHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_FocusGainedHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_FocusGainedHandler__Add, 0, false, ::app::Fuse::Input::FocusGainedHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_FocusGainedHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_FocusGainedHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_FocusGainedHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_FocusGainedHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::FocusGainedHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_FocusGainedHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_FocusGainedHandler__get_Item, 0, false, ::app::Fuse::Input::FocusGainedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_FocusGainedHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_FocusGainedHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_FocusGainedHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::FocusGainedHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_FocusGainedHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::FocusGainedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_FocusGainedHandler__New_1, 0, true, List__Fuse_Input_FocusGainedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_FocusGainedHandler__New_2, 0, true, List__Fuse_Input_FocusGainedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_FocusGainedHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::FocusGainedHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_FocusGainedHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_FocusGainedHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::FocusGainedHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_FocusGainedHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_FocusGainedHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_FocusGainedHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::FocusGainedHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_FocusGainedHandler__GetEnumerator_boxed(List__Fuse_Input_FocusGainedHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_FocusGainedHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_FocusGainedHandler___ObjInit(List__Fuse_Input_FocusGainedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_FocusGainedHandler___ObjInit_1(List__Fuse_Input_FocusGainedHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::FocusGainedHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_FocusGainedHandler__Add(List__Fuse_Input_FocusGainedHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_FocusGainedHandler__AddRange(List__Fuse_Input_FocusGainedHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_FocusGainedHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_FocusGainedHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_FocusGainedHandler__BoundsCheck(List__Fuse_Input_FocusGainedHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_FocusGainedHandler__Clear(List__Fuse_Input_FocusGainedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_FocusGainedHandler__Contains(List__Fuse_Input_FocusGainedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_FocusGainedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_FocusGainedHandler__EnsureCapacity(List__Fuse_Input_FocusGainedHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::FocusGainedHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::FocusGainedHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_FocusGainedHandler__get_Count(List__Fuse_Input_FocusGainedHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_FocusGainedHandler__get_Item(List__Fuse_Input_FocusGainedHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_FocusGainedHandler List__Fuse_Input_FocusGainedHandler__GetEnumerator(List__Fuse_Input_FocusGainedHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_FocusGainedHandler__New_1(NULL, __this);
}

int List__Fuse_Input_FocusGainedHandler__IndexOf(List__Fuse_Input_FocusGainedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_FocusGainedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_FocusGainedHandler__Insert(List__Fuse_Input_FocusGainedHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_FocusGainedHandler* List__Fuse_Input_FocusGainedHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_FocusGainedHandler* inst = (List__Fuse_Input_FocusGainedHandler*)::uAllocObject(sizeof(List__Fuse_Input_FocusGainedHandler), List__Fuse_Input_FocusGainedHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_FocusGainedHandler* List__Fuse_Input_FocusGainedHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_FocusGainedHandler* inst = (List__Fuse_Input_FocusGainedHandler*)::uAllocObject(sizeof(List__Fuse_Input_FocusGainedHandler), List__Fuse_Input_FocusGainedHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_FocusGainedHandler__Remove(List__Fuse_Input_FocusGainedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_FocusGainedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_FocusGainedHandler__RemoveAt(List__Fuse_Input_FocusGainedHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_FocusGainedHandler__set_Item(List__Fuse_Input_FocusGainedHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_FocusGainedHandler__Sort(List__Fuse_Input_FocusGainedHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_FocusGainedHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_FocusGainedHandler__ToArray(List__Fuse_Input_FocusGainedHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::FocusGainedHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_FocusLostHandler__uType* List__Fuse_Input_FocusLostHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_FocusLostHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_FocusLostHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_FocusLostHandler__uType), "Uno.Collections.List<Fuse.Input.FocusLostHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_FocusLostHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_FocusLostHandler__typeof(), offsetof(List__Fuse_Input_FocusLostHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_FocusLostHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_FocusLostHandler, _data), ::uGetArrayType(::app::Fuse::Input::FocusLostHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_FocusLostHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_FocusLostHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_FocusLostHandler__Add, 0, false, ::app::Fuse::Input::FocusLostHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_FocusLostHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_FocusLostHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_FocusLostHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_FocusLostHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::FocusLostHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_FocusLostHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_FocusLostHandler__get_Item, 0, false, ::app::Fuse::Input::FocusLostHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_FocusLostHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_FocusLostHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_FocusLostHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::FocusLostHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_FocusLostHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::FocusLostHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_FocusLostHandler__New_1, 0, true, List__Fuse_Input_FocusLostHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_FocusLostHandler__New_2, 0, true, List__Fuse_Input_FocusLostHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_FocusLostHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::FocusLostHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_FocusLostHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_FocusLostHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::FocusLostHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_FocusLostHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_FocusLostHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_FocusLostHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::FocusLostHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_FocusLostHandler__GetEnumerator_boxed(List__Fuse_Input_FocusLostHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_FocusLostHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_FocusLostHandler___ObjInit(List__Fuse_Input_FocusLostHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_FocusLostHandler___ObjInit_1(List__Fuse_Input_FocusLostHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::FocusLostHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_FocusLostHandler__Add(List__Fuse_Input_FocusLostHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_FocusLostHandler__AddRange(List__Fuse_Input_FocusLostHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_FocusLostHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_FocusLostHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_FocusLostHandler__BoundsCheck(List__Fuse_Input_FocusLostHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_FocusLostHandler__Clear(List__Fuse_Input_FocusLostHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_FocusLostHandler__Contains(List__Fuse_Input_FocusLostHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_FocusLostHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_FocusLostHandler__EnsureCapacity(List__Fuse_Input_FocusLostHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::FocusLostHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::FocusLostHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_FocusLostHandler__get_Count(List__Fuse_Input_FocusLostHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_FocusLostHandler__get_Item(List__Fuse_Input_FocusLostHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_FocusLostHandler List__Fuse_Input_FocusLostHandler__GetEnumerator(List__Fuse_Input_FocusLostHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_FocusLostHandler__New_1(NULL, __this);
}

int List__Fuse_Input_FocusLostHandler__IndexOf(List__Fuse_Input_FocusLostHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_FocusLostHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_FocusLostHandler__Insert(List__Fuse_Input_FocusLostHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_FocusLostHandler* List__Fuse_Input_FocusLostHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_FocusLostHandler* inst = (List__Fuse_Input_FocusLostHandler*)::uAllocObject(sizeof(List__Fuse_Input_FocusLostHandler), List__Fuse_Input_FocusLostHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_FocusLostHandler* List__Fuse_Input_FocusLostHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_FocusLostHandler* inst = (List__Fuse_Input_FocusLostHandler*)::uAllocObject(sizeof(List__Fuse_Input_FocusLostHandler), List__Fuse_Input_FocusLostHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_FocusLostHandler__Remove(List__Fuse_Input_FocusLostHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_FocusLostHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_FocusLostHandler__RemoveAt(List__Fuse_Input_FocusLostHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_FocusLostHandler__set_Item(List__Fuse_Input_FocusLostHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_FocusLostHandler__Sort(List__Fuse_Input_FocusLostHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_FocusLostHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_FocusLostHandler__ToArray(List__Fuse_Input_FocusLostHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::FocusLostHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_IsFocusableChangedHandler__uType* List__Fuse_Input_IsFocusableChangedHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_IsFocusableChangedHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_IsFocusableChangedHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_IsFocusableChangedHandler__uType), "Uno.Collections.List<Fuse.Input.IsFocusableChangedHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_IsFocusableChangedHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_IsFocusableChangedHandler__typeof(), offsetof(List__Fuse_Input_IsFocusableChangedHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_IsFocusableChangedHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_IsFocusableChangedHandler, _data), ::uGetArrayType(::app::Fuse::Input::IsFocusableChangedHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_IsFocusableChangedHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_IsFocusableChangedHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_IsFocusableChangedHandler__Add, 0, false, ::app::Fuse::Input::IsFocusableChangedHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_IsFocusableChangedHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_IsFocusableChangedHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_IsFocusableChangedHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_IsFocusableChangedHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::IsFocusableChangedHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_IsFocusableChangedHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_IsFocusableChangedHandler__get_Item, 0, false, ::app::Fuse::Input::IsFocusableChangedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_IsFocusableChangedHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_IsFocusableChangedHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_IsFocusableChangedHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::IsFocusableChangedHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_IsFocusableChangedHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::IsFocusableChangedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_IsFocusableChangedHandler__New_1, 0, true, List__Fuse_Input_IsFocusableChangedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_IsFocusableChangedHandler__New_2, 0, true, List__Fuse_Input_IsFocusableChangedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_IsFocusableChangedHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::IsFocusableChangedHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_IsFocusableChangedHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_IsFocusableChangedHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::IsFocusableChangedHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_IsFocusableChangedHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_IsFocusableChangedHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_IsFocusableChangedHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::IsFocusableChangedHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_IsFocusableChangedHandler__GetEnumerator_boxed(List__Fuse_Input_IsFocusableChangedHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_IsFocusableChangedHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_IsFocusableChangedHandler___ObjInit(List__Fuse_Input_IsFocusableChangedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_IsFocusableChangedHandler___ObjInit_1(List__Fuse_Input_IsFocusableChangedHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::IsFocusableChangedHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_IsFocusableChangedHandler__Add(List__Fuse_Input_IsFocusableChangedHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_IsFocusableChangedHandler__AddRange(List__Fuse_Input_IsFocusableChangedHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_IsFocusableChangedHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_IsFocusableChangedHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_IsFocusableChangedHandler__BoundsCheck(List__Fuse_Input_IsFocusableChangedHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_IsFocusableChangedHandler__Clear(List__Fuse_Input_IsFocusableChangedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_IsFocusableChangedHandler__Contains(List__Fuse_Input_IsFocusableChangedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_IsFocusableChangedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_IsFocusableChangedHandler__EnsureCapacity(List__Fuse_Input_IsFocusableChangedHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::IsFocusableChangedHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::IsFocusableChangedHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_IsFocusableChangedHandler__get_Count(List__Fuse_Input_IsFocusableChangedHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_IsFocusableChangedHandler__get_Item(List__Fuse_Input_IsFocusableChangedHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_IsFocusableChangedHandler List__Fuse_Input_IsFocusableChangedHandler__GetEnumerator(List__Fuse_Input_IsFocusableChangedHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_IsFocusableChangedHandler__New_1(NULL, __this);
}

int List__Fuse_Input_IsFocusableChangedHandler__IndexOf(List__Fuse_Input_IsFocusableChangedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_IsFocusableChangedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_IsFocusableChangedHandler__Insert(List__Fuse_Input_IsFocusableChangedHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_IsFocusableChangedHandler* List__Fuse_Input_IsFocusableChangedHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_IsFocusableChangedHandler* inst = (List__Fuse_Input_IsFocusableChangedHandler*)::uAllocObject(sizeof(List__Fuse_Input_IsFocusableChangedHandler), List__Fuse_Input_IsFocusableChangedHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_IsFocusableChangedHandler* List__Fuse_Input_IsFocusableChangedHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_IsFocusableChangedHandler* inst = (List__Fuse_Input_IsFocusableChangedHandler*)::uAllocObject(sizeof(List__Fuse_Input_IsFocusableChangedHandler), List__Fuse_Input_IsFocusableChangedHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_IsFocusableChangedHandler__Remove(List__Fuse_Input_IsFocusableChangedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_IsFocusableChangedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_IsFocusableChangedHandler__RemoveAt(List__Fuse_Input_IsFocusableChangedHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_IsFocusableChangedHandler__set_Item(List__Fuse_Input_IsFocusableChangedHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_IsFocusableChangedHandler__Sort(List__Fuse_Input_IsFocusableChangedHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_IsFocusableChangedHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_IsFocusableChangedHandler__ToArray(List__Fuse_Input_IsFocusableChangedHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::IsFocusableChangedHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_KeyPressedHandler__uType* List__Fuse_Input_KeyPressedHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_KeyPressedHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_KeyPressedHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_KeyPressedHandler__uType), "Uno.Collections.List<Fuse.Input.KeyPressedHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_KeyPressedHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_KeyPressedHandler__typeof(), offsetof(List__Fuse_Input_KeyPressedHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_KeyPressedHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_KeyPressedHandler, _data), ::uGetArrayType(::app::Fuse::Input::KeyPressedHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_KeyPressedHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_KeyPressedHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_KeyPressedHandler__Add, 0, false, ::app::Fuse::Input::KeyPressedHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_KeyPressedHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_KeyPressedHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_KeyPressedHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_KeyPressedHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::KeyPressedHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_KeyPressedHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_KeyPressedHandler__get_Item, 0, false, ::app::Fuse::Input::KeyPressedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_KeyPressedHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_KeyPressedHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_KeyPressedHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::KeyPressedHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_KeyPressedHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::KeyPressedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_KeyPressedHandler__New_1, 0, true, List__Fuse_Input_KeyPressedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_KeyPressedHandler__New_2, 0, true, List__Fuse_Input_KeyPressedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_KeyPressedHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::KeyPressedHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_KeyPressedHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_KeyPressedHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::KeyPressedHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_KeyPressedHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_KeyPressedHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_KeyPressedHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::KeyPressedHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_KeyPressedHandler__GetEnumerator_boxed(List__Fuse_Input_KeyPressedHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_KeyPressedHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_KeyPressedHandler___ObjInit(List__Fuse_Input_KeyPressedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_KeyPressedHandler___ObjInit_1(List__Fuse_Input_KeyPressedHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::KeyPressedHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_KeyPressedHandler__Add(List__Fuse_Input_KeyPressedHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_KeyPressedHandler__AddRange(List__Fuse_Input_KeyPressedHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_KeyPressedHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_KeyPressedHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_KeyPressedHandler__BoundsCheck(List__Fuse_Input_KeyPressedHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_KeyPressedHandler__Clear(List__Fuse_Input_KeyPressedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_KeyPressedHandler__Contains(List__Fuse_Input_KeyPressedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_KeyPressedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_KeyPressedHandler__EnsureCapacity(List__Fuse_Input_KeyPressedHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::KeyPressedHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::KeyPressedHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_KeyPressedHandler__get_Count(List__Fuse_Input_KeyPressedHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_KeyPressedHandler__get_Item(List__Fuse_Input_KeyPressedHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_KeyPressedHandler List__Fuse_Input_KeyPressedHandler__GetEnumerator(List__Fuse_Input_KeyPressedHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_KeyPressedHandler__New_1(NULL, __this);
}

int List__Fuse_Input_KeyPressedHandler__IndexOf(List__Fuse_Input_KeyPressedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_KeyPressedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_KeyPressedHandler__Insert(List__Fuse_Input_KeyPressedHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_KeyPressedHandler* List__Fuse_Input_KeyPressedHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_KeyPressedHandler* inst = (List__Fuse_Input_KeyPressedHandler*)::uAllocObject(sizeof(List__Fuse_Input_KeyPressedHandler), List__Fuse_Input_KeyPressedHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_KeyPressedHandler* List__Fuse_Input_KeyPressedHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_KeyPressedHandler* inst = (List__Fuse_Input_KeyPressedHandler*)::uAllocObject(sizeof(List__Fuse_Input_KeyPressedHandler), List__Fuse_Input_KeyPressedHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_KeyPressedHandler__Remove(List__Fuse_Input_KeyPressedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_KeyPressedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_KeyPressedHandler__RemoveAt(List__Fuse_Input_KeyPressedHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_KeyPressedHandler__set_Item(List__Fuse_Input_KeyPressedHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_KeyPressedHandler__Sort(List__Fuse_Input_KeyPressedHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_KeyPressedHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_KeyPressedHandler__ToArray(List__Fuse_Input_KeyPressedHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::KeyPressedHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_KeyReleasedHandler__uType* List__Fuse_Input_KeyReleasedHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_KeyReleasedHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_KeyReleasedHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_KeyReleasedHandler__uType), "Uno.Collections.List<Fuse.Input.KeyReleasedHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_KeyReleasedHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_KeyReleasedHandler__typeof(), offsetof(List__Fuse_Input_KeyReleasedHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_KeyReleasedHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_KeyReleasedHandler, _data), ::uGetArrayType(::app::Fuse::Input::KeyReleasedHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_KeyReleasedHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_KeyReleasedHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_KeyReleasedHandler__Add, 0, false, ::app::Fuse::Input::KeyReleasedHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_KeyReleasedHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_KeyReleasedHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_KeyReleasedHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_KeyReleasedHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::KeyReleasedHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_KeyReleasedHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_KeyReleasedHandler__get_Item, 0, false, ::app::Fuse::Input::KeyReleasedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_KeyReleasedHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_KeyReleasedHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_KeyReleasedHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::KeyReleasedHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_KeyReleasedHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::KeyReleasedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_KeyReleasedHandler__New_1, 0, true, List__Fuse_Input_KeyReleasedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_KeyReleasedHandler__New_2, 0, true, List__Fuse_Input_KeyReleasedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_KeyReleasedHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::KeyReleasedHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_KeyReleasedHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_KeyReleasedHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::KeyReleasedHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_KeyReleasedHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_KeyReleasedHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_KeyReleasedHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::KeyReleasedHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_KeyReleasedHandler__GetEnumerator_boxed(List__Fuse_Input_KeyReleasedHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_KeyReleasedHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_KeyReleasedHandler___ObjInit(List__Fuse_Input_KeyReleasedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_KeyReleasedHandler___ObjInit_1(List__Fuse_Input_KeyReleasedHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::KeyReleasedHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_KeyReleasedHandler__Add(List__Fuse_Input_KeyReleasedHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_KeyReleasedHandler__AddRange(List__Fuse_Input_KeyReleasedHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_KeyReleasedHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_KeyReleasedHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_KeyReleasedHandler__BoundsCheck(List__Fuse_Input_KeyReleasedHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_KeyReleasedHandler__Clear(List__Fuse_Input_KeyReleasedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_KeyReleasedHandler__Contains(List__Fuse_Input_KeyReleasedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_KeyReleasedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_KeyReleasedHandler__EnsureCapacity(List__Fuse_Input_KeyReleasedHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::KeyReleasedHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::KeyReleasedHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_KeyReleasedHandler__get_Count(List__Fuse_Input_KeyReleasedHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_KeyReleasedHandler__get_Item(List__Fuse_Input_KeyReleasedHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_KeyReleasedHandler List__Fuse_Input_KeyReleasedHandler__GetEnumerator(List__Fuse_Input_KeyReleasedHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_KeyReleasedHandler__New_1(NULL, __this);
}

int List__Fuse_Input_KeyReleasedHandler__IndexOf(List__Fuse_Input_KeyReleasedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_KeyReleasedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_KeyReleasedHandler__Insert(List__Fuse_Input_KeyReleasedHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_KeyReleasedHandler* List__Fuse_Input_KeyReleasedHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_KeyReleasedHandler* inst = (List__Fuse_Input_KeyReleasedHandler*)::uAllocObject(sizeof(List__Fuse_Input_KeyReleasedHandler), List__Fuse_Input_KeyReleasedHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_KeyReleasedHandler* List__Fuse_Input_KeyReleasedHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_KeyReleasedHandler* inst = (List__Fuse_Input_KeyReleasedHandler*)::uAllocObject(sizeof(List__Fuse_Input_KeyReleasedHandler), List__Fuse_Input_KeyReleasedHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_KeyReleasedHandler__Remove(List__Fuse_Input_KeyReleasedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_KeyReleasedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_KeyReleasedHandler__RemoveAt(List__Fuse_Input_KeyReleasedHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_KeyReleasedHandler__set_Item(List__Fuse_Input_KeyReleasedHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_KeyReleasedHandler__Sort(List__Fuse_Input_KeyReleasedHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_KeyReleasedHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_KeyReleasedHandler__ToArray(List__Fuse_Input_KeyReleasedHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::KeyReleasedHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_Pointer_PELHolder__uType* List__Fuse_Input_Pointer_PELHolder__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_Pointer_PELHolder__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_Pointer_PELHolder__uType*)::uAllocClassType(sizeof(List__Fuse_Input_Pointer_PELHolder__uType), "Uno.Collections.List<Fuse.Input.Pointer_PELHolder>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_Pointer_PELHolder__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_Pointer_PELHolder__typeof(), offsetof(List__Fuse_Input_Pointer_PELHolder__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_Pointer_PELHolder, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_Pointer_PELHolder, _data), ::uGetArrayType(::app::Fuse::Input::Pointer_PELHolder__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_Pointer_PELHolder, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_Pointer_PELHolder, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_Pointer_PELHolder__Add, 0, false, ::app::Fuse::Input::Pointer_PELHolder__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_Pointer_PELHolder__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_Pointer_PELHolder__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_Pointer_PELHolder__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_Pointer_PELHolder__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::Pointer_PELHolder__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_Pointer_PELHolder__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_Pointer_PELHolder__get_Item, 0, false, ::app::Fuse::Input::Pointer_PELHolder__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_Pointer_PELHolder__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_Pointer_PELHolder__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_Pointer_PELHolder__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::Pointer_PELHolder__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_Pointer_PELHolder__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::Pointer_PELHolder__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_Pointer_PELHolder__New_1, 0, true, List__Fuse_Input_Pointer_PELHolder__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_Pointer_PELHolder__New_2, 0, true, List__Fuse_Input_Pointer_PELHolder__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_Pointer_PELHolder__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::Pointer_PELHolder__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_Pointer_PELHolder__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_Pointer_PELHolder__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::Pointer_PELHolder__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_Pointer_PELHolder__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_Pointer_PELHolder__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_Pointer_PELHolder__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::Pointer_PELHolder__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_Pointer_PELHolder__GetEnumerator_boxed(List__Fuse_Input_Pointer_PELHolder* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_Pointer_PELHolder__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_Pointer_PELHolder___ObjInit(List__Fuse_Input_Pointer_PELHolder* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_Pointer_PELHolder___ObjInit_1(List__Fuse_Input_Pointer_PELHolder* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::Pointer_PELHolder__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_Pointer_PELHolder__Add(List__Fuse_Input_Pointer_PELHolder* __this, ::app::Fuse::Input::Pointer_PELHolder* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Pointer_PELHolder*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_Pointer_PELHolder__AddRange(List__Fuse_Input_Pointer_PELHolder* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_Pointer_PELHolder::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Input::Pointer_PELHolder* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_Pointer_PELHolder::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_Pointer_PELHolder__BoundsCheck(List__Fuse_Input_Pointer_PELHolder* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_Pointer_PELHolder__Clear(List__Fuse_Input_Pointer_PELHolder* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_Pointer_PELHolder__Contains(List__Fuse_Input_Pointer_PELHolder* __this, ::app::Fuse::Input::Pointer_PELHolder* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_Pointer_PELHolder(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Pointer_PELHolder*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_Pointer_PELHolder__EnsureCapacity(List__Fuse_Input_Pointer_PELHolder* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::Pointer_PELHolder__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::Pointer_PELHolder__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Input::Pointer_PELHolder*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Pointer_PELHolder*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_Pointer_PELHolder__get_Count(List__Fuse_Input_Pointer_PELHolder* __this)
{
    return __this->_used;
}

::app::Fuse::Input::Pointer_PELHolder* List__Fuse_Input_Pointer_PELHolder__get_Item(List__Fuse_Input_Pointer_PELHolder* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Pointer_PELHolder*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_Pointer_PELHolder List__Fuse_Input_Pointer_PELHolder__GetEnumerator(List__Fuse_Input_Pointer_PELHolder* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_Pointer_PELHolder__New_1(NULL, __this);
}

int List__Fuse_Input_Pointer_PELHolder__IndexOf(List__Fuse_Input_Pointer_PELHolder* __this, ::app::Fuse::Input::Pointer_PELHolder* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_Pointer_PELHolder(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Pointer_PELHolder*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_Pointer_PELHolder__Insert(List__Fuse_Input_Pointer_PELHolder* __this, int index, ::app::Fuse::Input::Pointer_PELHolder* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Pointer_PELHolder*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Pointer_PELHolder*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Pointer_PELHolder*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_Pointer_PELHolder* List__Fuse_Input_Pointer_PELHolder__New_1(::uStatic* __this)
{
    List__Fuse_Input_Pointer_PELHolder* inst = (List__Fuse_Input_Pointer_PELHolder*)::uAllocObject(sizeof(List__Fuse_Input_Pointer_PELHolder), List__Fuse_Input_Pointer_PELHolder__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_Pointer_PELHolder* List__Fuse_Input_Pointer_PELHolder__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_Pointer_PELHolder* inst = (List__Fuse_Input_Pointer_PELHolder*)::uAllocObject(sizeof(List__Fuse_Input_Pointer_PELHolder), List__Fuse_Input_Pointer_PELHolder__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_Pointer_PELHolder__Remove(List__Fuse_Input_Pointer_PELHolder* __this, ::app::Fuse::Input::Pointer_PELHolder* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_Pointer_PELHolder(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Pointer_PELHolder*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_Pointer_PELHolder__RemoveAt(List__Fuse_Input_Pointer_PELHolder* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Pointer_PELHolder*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Pointer_PELHolder*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Pointer_PELHolder*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_Pointer_PELHolder__set_Item(List__Fuse_Input_Pointer_PELHolder* __this, int index, ::app::Fuse::Input::Pointer_PELHolder* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Input::Pointer_PELHolder*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_Pointer_PELHolder__Sort(List__Fuse_Input_Pointer_PELHolder* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_Pointer_PELHolder(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_Pointer_PELHolder__ToArray(List__Fuse_Input_Pointer_PELHolder* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::Pointer_PELHolder__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Input::Pointer_PELHolder*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Input::Pointer_PELHolder*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_PointerEnteredHandler__uType* List__Fuse_Input_PointerEnteredHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_PointerEnteredHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_PointerEnteredHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_PointerEnteredHandler__uType), "Uno.Collections.List<Fuse.Input.PointerEnteredHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_PointerEnteredHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerEnteredHandler__typeof(), offsetof(List__Fuse_Input_PointerEnteredHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_PointerEnteredHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_PointerEnteredHandler, _data), ::uGetArrayType(::app::Fuse::Input::PointerEnteredHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_PointerEnteredHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_PointerEnteredHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_PointerEnteredHandler__Add, 0, false, ::app::Fuse::Input::PointerEnteredHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_PointerEnteredHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerEnteredHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_PointerEnteredHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_PointerEnteredHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerEnteredHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_PointerEnteredHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_PointerEnteredHandler__get_Item, 0, false, ::app::Fuse::Input::PointerEnteredHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_PointerEnteredHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerEnteredHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_PointerEnteredHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerEnteredHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_PointerEnteredHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerEnteredHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerEnteredHandler__New_1, 0, true, List__Fuse_Input_PointerEnteredHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerEnteredHandler__New_2, 0, true, List__Fuse_Input_PointerEnteredHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_PointerEnteredHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerEnteredHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_PointerEnteredHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_PointerEnteredHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerEnteredHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_PointerEnteredHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_PointerEnteredHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_PointerEnteredHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::PointerEnteredHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_PointerEnteredHandler__GetEnumerator_boxed(List__Fuse_Input_PointerEnteredHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerEnteredHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_PointerEnteredHandler___ObjInit(List__Fuse_Input_PointerEnteredHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_PointerEnteredHandler___ObjInit_1(List__Fuse_Input_PointerEnteredHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::PointerEnteredHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_PointerEnteredHandler__Add(List__Fuse_Input_PointerEnteredHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_PointerEnteredHandler__AddRange(List__Fuse_Input_PointerEnteredHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerEnteredHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_PointerEnteredHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_PointerEnteredHandler__BoundsCheck(List__Fuse_Input_PointerEnteredHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_PointerEnteredHandler__Clear(List__Fuse_Input_PointerEnteredHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_PointerEnteredHandler__Contains(List__Fuse_Input_PointerEnteredHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerEnteredHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerEnteredHandler__EnsureCapacity(List__Fuse_Input_PointerEnteredHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::PointerEnteredHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::PointerEnteredHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_PointerEnteredHandler__get_Count(List__Fuse_Input_PointerEnteredHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_PointerEnteredHandler__get_Item(List__Fuse_Input_PointerEnteredHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerEnteredHandler List__Fuse_Input_PointerEnteredHandler__GetEnumerator(List__Fuse_Input_PointerEnteredHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerEnteredHandler__New_1(NULL, __this);
}

int List__Fuse_Input_PointerEnteredHandler__IndexOf(List__Fuse_Input_PointerEnteredHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerEnteredHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_PointerEnteredHandler__Insert(List__Fuse_Input_PointerEnteredHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_PointerEnteredHandler* List__Fuse_Input_PointerEnteredHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_PointerEnteredHandler* inst = (List__Fuse_Input_PointerEnteredHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerEnteredHandler), List__Fuse_Input_PointerEnteredHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_PointerEnteredHandler* List__Fuse_Input_PointerEnteredHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_PointerEnteredHandler* inst = (List__Fuse_Input_PointerEnteredHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerEnteredHandler), List__Fuse_Input_PointerEnteredHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_PointerEnteredHandler__Remove(List__Fuse_Input_PointerEnteredHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerEnteredHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerEnteredHandler__RemoveAt(List__Fuse_Input_PointerEnteredHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_PointerEnteredHandler__set_Item(List__Fuse_Input_PointerEnteredHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_PointerEnteredHandler__Sort(List__Fuse_Input_PointerEnteredHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_PointerEnteredHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_PointerEnteredHandler__ToArray(List__Fuse_Input_PointerEnteredHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::PointerEnteredHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_PointerLeftHandler__uType* List__Fuse_Input_PointerLeftHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_PointerLeftHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_PointerLeftHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_PointerLeftHandler__uType), "Uno.Collections.List<Fuse.Input.PointerLeftHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_PointerLeftHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerLeftHandler__typeof(), offsetof(List__Fuse_Input_PointerLeftHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_PointerLeftHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_PointerLeftHandler, _data), ::uGetArrayType(::app::Fuse::Input::PointerLeftHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_PointerLeftHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_PointerLeftHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_PointerLeftHandler__Add, 0, false, ::app::Fuse::Input::PointerLeftHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_PointerLeftHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerLeftHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_PointerLeftHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_PointerLeftHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerLeftHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_PointerLeftHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_PointerLeftHandler__get_Item, 0, false, ::app::Fuse::Input::PointerLeftHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_PointerLeftHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerLeftHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_PointerLeftHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerLeftHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_PointerLeftHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerLeftHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerLeftHandler__New_1, 0, true, List__Fuse_Input_PointerLeftHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerLeftHandler__New_2, 0, true, List__Fuse_Input_PointerLeftHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_PointerLeftHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerLeftHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_PointerLeftHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_PointerLeftHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerLeftHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_PointerLeftHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_PointerLeftHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_PointerLeftHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::PointerLeftHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_PointerLeftHandler__GetEnumerator_boxed(List__Fuse_Input_PointerLeftHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerLeftHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_PointerLeftHandler___ObjInit(List__Fuse_Input_PointerLeftHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_PointerLeftHandler___ObjInit_1(List__Fuse_Input_PointerLeftHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::PointerLeftHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_PointerLeftHandler__Add(List__Fuse_Input_PointerLeftHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_PointerLeftHandler__AddRange(List__Fuse_Input_PointerLeftHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerLeftHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_PointerLeftHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_PointerLeftHandler__BoundsCheck(List__Fuse_Input_PointerLeftHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_PointerLeftHandler__Clear(List__Fuse_Input_PointerLeftHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_PointerLeftHandler__Contains(List__Fuse_Input_PointerLeftHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerLeftHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerLeftHandler__EnsureCapacity(List__Fuse_Input_PointerLeftHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::PointerLeftHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::PointerLeftHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_PointerLeftHandler__get_Count(List__Fuse_Input_PointerLeftHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_PointerLeftHandler__get_Item(List__Fuse_Input_PointerLeftHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerLeftHandler List__Fuse_Input_PointerLeftHandler__GetEnumerator(List__Fuse_Input_PointerLeftHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerLeftHandler__New_1(NULL, __this);
}

int List__Fuse_Input_PointerLeftHandler__IndexOf(List__Fuse_Input_PointerLeftHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerLeftHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_PointerLeftHandler__Insert(List__Fuse_Input_PointerLeftHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_PointerLeftHandler* List__Fuse_Input_PointerLeftHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_PointerLeftHandler* inst = (List__Fuse_Input_PointerLeftHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerLeftHandler), List__Fuse_Input_PointerLeftHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_PointerLeftHandler* List__Fuse_Input_PointerLeftHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_PointerLeftHandler* inst = (List__Fuse_Input_PointerLeftHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerLeftHandler), List__Fuse_Input_PointerLeftHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_PointerLeftHandler__Remove(List__Fuse_Input_PointerLeftHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerLeftHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerLeftHandler__RemoveAt(List__Fuse_Input_PointerLeftHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_PointerLeftHandler__set_Item(List__Fuse_Input_PointerLeftHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_PointerLeftHandler__Sort(List__Fuse_Input_PointerLeftHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_PointerLeftHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_PointerLeftHandler__ToArray(List__Fuse_Input_PointerLeftHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::PointerLeftHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_PointerMovedHandler__uType* List__Fuse_Input_PointerMovedHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_PointerMovedHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_PointerMovedHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_PointerMovedHandler__uType), "Uno.Collections.List<Fuse.Input.PointerMovedHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_PointerMovedHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerMovedHandler__typeof(), offsetof(List__Fuse_Input_PointerMovedHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_PointerMovedHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_PointerMovedHandler, _data), ::uGetArrayType(::app::Fuse::Input::PointerMovedHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_PointerMovedHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_PointerMovedHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_PointerMovedHandler__Add, 0, false, ::app::Fuse::Input::PointerMovedHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_PointerMovedHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerMovedHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_PointerMovedHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_PointerMovedHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerMovedHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_PointerMovedHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_PointerMovedHandler__get_Item, 0, false, ::app::Fuse::Input::PointerMovedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_PointerMovedHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerMovedHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_PointerMovedHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerMovedHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_PointerMovedHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerMovedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerMovedHandler__New_1, 0, true, List__Fuse_Input_PointerMovedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerMovedHandler__New_2, 0, true, List__Fuse_Input_PointerMovedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_PointerMovedHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerMovedHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_PointerMovedHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_PointerMovedHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerMovedHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_PointerMovedHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_PointerMovedHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_PointerMovedHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::PointerMovedHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_PointerMovedHandler__GetEnumerator_boxed(List__Fuse_Input_PointerMovedHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerMovedHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_PointerMovedHandler___ObjInit(List__Fuse_Input_PointerMovedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_PointerMovedHandler___ObjInit_1(List__Fuse_Input_PointerMovedHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::PointerMovedHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_PointerMovedHandler__Add(List__Fuse_Input_PointerMovedHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_PointerMovedHandler__AddRange(List__Fuse_Input_PointerMovedHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerMovedHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_PointerMovedHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_PointerMovedHandler__BoundsCheck(List__Fuse_Input_PointerMovedHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_PointerMovedHandler__Clear(List__Fuse_Input_PointerMovedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_PointerMovedHandler__Contains(List__Fuse_Input_PointerMovedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerMovedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerMovedHandler__EnsureCapacity(List__Fuse_Input_PointerMovedHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::PointerMovedHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::PointerMovedHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_PointerMovedHandler__get_Count(List__Fuse_Input_PointerMovedHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_PointerMovedHandler__get_Item(List__Fuse_Input_PointerMovedHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerMovedHandler List__Fuse_Input_PointerMovedHandler__GetEnumerator(List__Fuse_Input_PointerMovedHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerMovedHandler__New_1(NULL, __this);
}

int List__Fuse_Input_PointerMovedHandler__IndexOf(List__Fuse_Input_PointerMovedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerMovedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_PointerMovedHandler__Insert(List__Fuse_Input_PointerMovedHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_PointerMovedHandler* List__Fuse_Input_PointerMovedHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_PointerMovedHandler* inst = (List__Fuse_Input_PointerMovedHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerMovedHandler), List__Fuse_Input_PointerMovedHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_PointerMovedHandler* List__Fuse_Input_PointerMovedHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_PointerMovedHandler* inst = (List__Fuse_Input_PointerMovedHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerMovedHandler), List__Fuse_Input_PointerMovedHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_PointerMovedHandler__Remove(List__Fuse_Input_PointerMovedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerMovedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerMovedHandler__RemoveAt(List__Fuse_Input_PointerMovedHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_PointerMovedHandler__set_Item(List__Fuse_Input_PointerMovedHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_PointerMovedHandler__Sort(List__Fuse_Input_PointerMovedHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_PointerMovedHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_PointerMovedHandler__ToArray(List__Fuse_Input_PointerMovedHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::PointerMovedHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_PointerPressedHandler__uType* List__Fuse_Input_PointerPressedHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_PointerPressedHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_PointerPressedHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_PointerPressedHandler__uType), "Uno.Collections.List<Fuse.Input.PointerPressedHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_PointerPressedHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerPressedHandler__typeof(), offsetof(List__Fuse_Input_PointerPressedHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_PointerPressedHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_PointerPressedHandler, _data), ::uGetArrayType(::app::Fuse::Input::PointerPressedHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_PointerPressedHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_PointerPressedHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_PointerPressedHandler__Add, 0, false, ::app::Fuse::Input::PointerPressedHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_PointerPressedHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerPressedHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_PointerPressedHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_PointerPressedHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerPressedHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_PointerPressedHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_PointerPressedHandler__get_Item, 0, false, ::app::Fuse::Input::PointerPressedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_PointerPressedHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerPressedHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_PointerPressedHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerPressedHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_PointerPressedHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerPressedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerPressedHandler__New_1, 0, true, List__Fuse_Input_PointerPressedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerPressedHandler__New_2, 0, true, List__Fuse_Input_PointerPressedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_PointerPressedHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerPressedHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_PointerPressedHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_PointerPressedHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerPressedHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_PointerPressedHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_PointerPressedHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_PointerPressedHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::PointerPressedHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_PointerPressedHandler__GetEnumerator_boxed(List__Fuse_Input_PointerPressedHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerPressedHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_PointerPressedHandler___ObjInit(List__Fuse_Input_PointerPressedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_PointerPressedHandler___ObjInit_1(List__Fuse_Input_PointerPressedHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::PointerPressedHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_PointerPressedHandler__Add(List__Fuse_Input_PointerPressedHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_PointerPressedHandler__AddRange(List__Fuse_Input_PointerPressedHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerPressedHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_PointerPressedHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_PointerPressedHandler__BoundsCheck(List__Fuse_Input_PointerPressedHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_PointerPressedHandler__Clear(List__Fuse_Input_PointerPressedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_PointerPressedHandler__Contains(List__Fuse_Input_PointerPressedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerPressedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerPressedHandler__EnsureCapacity(List__Fuse_Input_PointerPressedHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::PointerPressedHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::PointerPressedHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_PointerPressedHandler__get_Count(List__Fuse_Input_PointerPressedHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_PointerPressedHandler__get_Item(List__Fuse_Input_PointerPressedHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerPressedHandler List__Fuse_Input_PointerPressedHandler__GetEnumerator(List__Fuse_Input_PointerPressedHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerPressedHandler__New_1(NULL, __this);
}

int List__Fuse_Input_PointerPressedHandler__IndexOf(List__Fuse_Input_PointerPressedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerPressedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_PointerPressedHandler__Insert(List__Fuse_Input_PointerPressedHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_PointerPressedHandler* List__Fuse_Input_PointerPressedHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_PointerPressedHandler* inst = (List__Fuse_Input_PointerPressedHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerPressedHandler), List__Fuse_Input_PointerPressedHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_PointerPressedHandler* List__Fuse_Input_PointerPressedHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_PointerPressedHandler* inst = (List__Fuse_Input_PointerPressedHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerPressedHandler), List__Fuse_Input_PointerPressedHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_PointerPressedHandler__Remove(List__Fuse_Input_PointerPressedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerPressedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerPressedHandler__RemoveAt(List__Fuse_Input_PointerPressedHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_PointerPressedHandler__set_Item(List__Fuse_Input_PointerPressedHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_PointerPressedHandler__Sort(List__Fuse_Input_PointerPressedHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_PointerPressedHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_PointerPressedHandler__ToArray(List__Fuse_Input_PointerPressedHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::PointerPressedHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_PointerReleasedHandler__uType* List__Fuse_Input_PointerReleasedHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_PointerReleasedHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_PointerReleasedHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_PointerReleasedHandler__uType), "Uno.Collections.List<Fuse.Input.PointerReleasedHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_PointerReleasedHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerReleasedHandler__typeof(), offsetof(List__Fuse_Input_PointerReleasedHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_PointerReleasedHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_PointerReleasedHandler, _data), ::uGetArrayType(::app::Fuse::Input::PointerReleasedHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_PointerReleasedHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_PointerReleasedHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_PointerReleasedHandler__Add, 0, false, ::app::Fuse::Input::PointerReleasedHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_PointerReleasedHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerReleasedHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_PointerReleasedHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_PointerReleasedHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerReleasedHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_PointerReleasedHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_PointerReleasedHandler__get_Item, 0, false, ::app::Fuse::Input::PointerReleasedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_PointerReleasedHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerReleasedHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_PointerReleasedHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerReleasedHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_PointerReleasedHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerReleasedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerReleasedHandler__New_1, 0, true, List__Fuse_Input_PointerReleasedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerReleasedHandler__New_2, 0, true, List__Fuse_Input_PointerReleasedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_PointerReleasedHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerReleasedHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_PointerReleasedHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_PointerReleasedHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerReleasedHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_PointerReleasedHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_PointerReleasedHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_PointerReleasedHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::PointerReleasedHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_PointerReleasedHandler__GetEnumerator_boxed(List__Fuse_Input_PointerReleasedHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerReleasedHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_PointerReleasedHandler___ObjInit(List__Fuse_Input_PointerReleasedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_PointerReleasedHandler___ObjInit_1(List__Fuse_Input_PointerReleasedHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::PointerReleasedHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_PointerReleasedHandler__Add(List__Fuse_Input_PointerReleasedHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_PointerReleasedHandler__AddRange(List__Fuse_Input_PointerReleasedHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerReleasedHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_PointerReleasedHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_PointerReleasedHandler__BoundsCheck(List__Fuse_Input_PointerReleasedHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_PointerReleasedHandler__Clear(List__Fuse_Input_PointerReleasedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_PointerReleasedHandler__Contains(List__Fuse_Input_PointerReleasedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerReleasedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerReleasedHandler__EnsureCapacity(List__Fuse_Input_PointerReleasedHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::PointerReleasedHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::PointerReleasedHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_PointerReleasedHandler__get_Count(List__Fuse_Input_PointerReleasedHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_PointerReleasedHandler__get_Item(List__Fuse_Input_PointerReleasedHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerReleasedHandler List__Fuse_Input_PointerReleasedHandler__GetEnumerator(List__Fuse_Input_PointerReleasedHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerReleasedHandler__New_1(NULL, __this);
}

int List__Fuse_Input_PointerReleasedHandler__IndexOf(List__Fuse_Input_PointerReleasedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerReleasedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_PointerReleasedHandler__Insert(List__Fuse_Input_PointerReleasedHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_PointerReleasedHandler* List__Fuse_Input_PointerReleasedHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_PointerReleasedHandler* inst = (List__Fuse_Input_PointerReleasedHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerReleasedHandler), List__Fuse_Input_PointerReleasedHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_PointerReleasedHandler* List__Fuse_Input_PointerReleasedHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_PointerReleasedHandler* inst = (List__Fuse_Input_PointerReleasedHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerReleasedHandler), List__Fuse_Input_PointerReleasedHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_PointerReleasedHandler__Remove(List__Fuse_Input_PointerReleasedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerReleasedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerReleasedHandler__RemoveAt(List__Fuse_Input_PointerReleasedHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_PointerReleasedHandler__set_Item(List__Fuse_Input_PointerReleasedHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_PointerReleasedHandler__Sort(List__Fuse_Input_PointerReleasedHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_PointerReleasedHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_PointerReleasedHandler__ToArray(List__Fuse_Input_PointerReleasedHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::PointerReleasedHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_PointerWheelMovedHandler__uType* List__Fuse_Input_PointerWheelMovedHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_PointerWheelMovedHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_PointerWheelMovedHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_PointerWheelMovedHandler__uType), "Uno.Collections.List<Fuse.Input.PointerWheelMovedHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_PointerWheelMovedHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerWheelMovedHandler__typeof(), offsetof(List__Fuse_Input_PointerWheelMovedHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_PointerWheelMovedHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_PointerWheelMovedHandler, _data), ::uGetArrayType(::app::Fuse::Input::PointerWheelMovedHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_PointerWheelMovedHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_PointerWheelMovedHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_PointerWheelMovedHandler__Add, 0, false, ::app::Fuse::Input::PointerWheelMovedHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_PointerWheelMovedHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerWheelMovedHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_PointerWheelMovedHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_PointerWheelMovedHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerWheelMovedHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_PointerWheelMovedHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_PointerWheelMovedHandler__get_Item, 0, false, ::app::Fuse::Input::PointerWheelMovedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_PointerWheelMovedHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerWheelMovedHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_PointerWheelMovedHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerWheelMovedHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_PointerWheelMovedHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerWheelMovedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerWheelMovedHandler__New_1, 0, true, List__Fuse_Input_PointerWheelMovedHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_PointerWheelMovedHandler__New_2, 0, true, List__Fuse_Input_PointerWheelMovedHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_PointerWheelMovedHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::PointerWheelMovedHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_PointerWheelMovedHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_PointerWheelMovedHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::PointerWheelMovedHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_PointerWheelMovedHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_PointerWheelMovedHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_PointerWheelMovedHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::PointerWheelMovedHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_PointerWheelMovedHandler__GetEnumerator_boxed(List__Fuse_Input_PointerWheelMovedHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerWheelMovedHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_PointerWheelMovedHandler___ObjInit(List__Fuse_Input_PointerWheelMovedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_PointerWheelMovedHandler___ObjInit_1(List__Fuse_Input_PointerWheelMovedHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::PointerWheelMovedHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_PointerWheelMovedHandler__Add(List__Fuse_Input_PointerWheelMovedHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_PointerWheelMovedHandler__AddRange(List__Fuse_Input_PointerWheelMovedHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_PointerWheelMovedHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_PointerWheelMovedHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_PointerWheelMovedHandler__BoundsCheck(List__Fuse_Input_PointerWheelMovedHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_PointerWheelMovedHandler__Clear(List__Fuse_Input_PointerWheelMovedHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_PointerWheelMovedHandler__Contains(List__Fuse_Input_PointerWheelMovedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerWheelMovedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerWheelMovedHandler__EnsureCapacity(List__Fuse_Input_PointerWheelMovedHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::PointerWheelMovedHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::PointerWheelMovedHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_PointerWheelMovedHandler__get_Count(List__Fuse_Input_PointerWheelMovedHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_PointerWheelMovedHandler__get_Item(List__Fuse_Input_PointerWheelMovedHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerWheelMovedHandler List__Fuse_Input_PointerWheelMovedHandler__GetEnumerator(List__Fuse_Input_PointerWheelMovedHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_PointerWheelMovedHandler__New_1(NULL, __this);
}

int List__Fuse_Input_PointerWheelMovedHandler__IndexOf(List__Fuse_Input_PointerWheelMovedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerWheelMovedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_PointerWheelMovedHandler__Insert(List__Fuse_Input_PointerWheelMovedHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_PointerWheelMovedHandler* List__Fuse_Input_PointerWheelMovedHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_PointerWheelMovedHandler* inst = (List__Fuse_Input_PointerWheelMovedHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerWheelMovedHandler), List__Fuse_Input_PointerWheelMovedHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_PointerWheelMovedHandler* List__Fuse_Input_PointerWheelMovedHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_PointerWheelMovedHandler* inst = (List__Fuse_Input_PointerWheelMovedHandler*)::uAllocObject(sizeof(List__Fuse_Input_PointerWheelMovedHandler), List__Fuse_Input_PointerWheelMovedHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_PointerWheelMovedHandler__Remove(List__Fuse_Input_PointerWheelMovedHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_PointerWheelMovedHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_PointerWheelMovedHandler__RemoveAt(List__Fuse_Input_PointerWheelMovedHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_PointerWheelMovedHandler__set_Item(List__Fuse_Input_PointerWheelMovedHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_PointerWheelMovedHandler__Sort(List__Fuse_Input_PointerWheelMovedHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_PointerWheelMovedHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_PointerWheelMovedHandler__ToArray(List__Fuse_Input_PointerWheelMovedHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::PointerWheelMovedHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Input_TextEnteredHandler__uType* List__Fuse_Input_TextEnteredHandler__typeof()
{
    static ::uStaticStrong<List__Fuse_Input_TextEnteredHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Input_TextEnteredHandler__uType*)::uAllocClassType(sizeof(List__Fuse_Input_TextEnteredHandler__uType), "Uno.Collections.List<Fuse.Input.TextEnteredHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Input_TextEnteredHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Input_TextEnteredHandler__typeof(), offsetof(List__Fuse_Input_TextEnteredHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Input_TextEnteredHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Input_TextEnteredHandler, _data), ::uGetArrayType(::app::Fuse::Input::TextEnteredHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Input_TextEnteredHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Input_TextEnteredHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Input_TextEnteredHandler__Add, 0, false, ::app::Fuse::Input::TextEnteredHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Input_TextEnteredHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Input_TextEnteredHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Input_TextEnteredHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Input_TextEnteredHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::TextEnteredHandler__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Input_TextEnteredHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Input_TextEnteredHandler__get_Item, 0, false, ::app::Fuse::Input::TextEnteredHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Input_TextEnteredHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Input_TextEnteredHandler__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Input_TextEnteredHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::TextEnteredHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Input_TextEnteredHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::TextEnteredHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_TextEnteredHandler__New_1, 0, true, List__Fuse_Input_TextEnteredHandler__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Input_TextEnteredHandler__New_2, 0, true, List__Fuse_Input_TextEnteredHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Input_TextEnteredHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Input::TextEnteredHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Input_TextEnteredHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Input_TextEnteredHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::TextEnteredHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Input_TextEnteredHandler__Sort, 0, false, ::app::Uno::Comparison__Fuse_Input_TextEnteredHandler__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Input_TextEnteredHandler__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Input::TextEnteredHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Input_TextEnteredHandler__GetEnumerator_boxed(List__Fuse_Input_TextEnteredHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Input_TextEnteredHandler__typeof(), __this->GetEnumerator());
}

void List__Fuse_Input_TextEnteredHandler___ObjInit(List__Fuse_Input_TextEnteredHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Input_TextEnteredHandler___ObjInit_1(List__Fuse_Input_TextEnteredHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Input::TextEnteredHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Input_TextEnteredHandler__Add(List__Fuse_Input_TextEnteredHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Input_TextEnteredHandler__AddRange(List__Fuse_Input_TextEnteredHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Input_TextEnteredHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Fuse_Input_TextEnteredHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Input_TextEnteredHandler__BoundsCheck(List__Fuse_Input_TextEnteredHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Input_TextEnteredHandler__Clear(List__Fuse_Input_TextEnteredHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Input_TextEnteredHandler__Contains(List__Fuse_Input_TextEnteredHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_TextEnteredHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_TextEnteredHandler__EnsureCapacity(List__Fuse_Input_TextEnteredHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Input::TextEnteredHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Input::TextEnteredHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Input_TextEnteredHandler__get_Count(List__Fuse_Input_TextEnteredHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Fuse_Input_TextEnteredHandler__get_Item(List__Fuse_Input_TextEnteredHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Input_TextEnteredHandler List__Fuse_Input_TextEnteredHandler__GetEnumerator(List__Fuse_Input_TextEnteredHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Input_TextEnteredHandler__New_1(NULL, __this);
}

int List__Fuse_Input_TextEnteredHandler__IndexOf(List__Fuse_Input_TextEnteredHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_TextEnteredHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Input_TextEnteredHandler__Insert(List__Fuse_Input_TextEnteredHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Input_TextEnteredHandler* List__Fuse_Input_TextEnteredHandler__New_1(::uStatic* __this)
{
    List__Fuse_Input_TextEnteredHandler* inst = (List__Fuse_Input_TextEnteredHandler*)::uAllocObject(sizeof(List__Fuse_Input_TextEnteredHandler), List__Fuse_Input_TextEnteredHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Input_TextEnteredHandler* List__Fuse_Input_TextEnteredHandler__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Input_TextEnteredHandler* inst = (List__Fuse_Input_TextEnteredHandler*)::uAllocObject(sizeof(List__Fuse_Input_TextEnteredHandler), List__Fuse_Input_TextEnteredHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Input_TextEnteredHandler__Remove(List__Fuse_Input_TextEnteredHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Input_TextEnteredHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Input_TextEnteredHandler__RemoveAt(List__Fuse_Input_TextEnteredHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Input_TextEnteredHandler__set_Item(List__Fuse_Input_TextEnteredHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Fuse_Input_TextEnteredHandler__Sort(List__Fuse_Input_TextEnteredHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Input_TextEnteredHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Input_TextEnteredHandler__ToArray(List__Fuse_Input_TextEnteredHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Input::TextEnteredHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_iOS_StatusBarConfig__uType* List__Fuse_iOS_StatusBarConfig__typeof()
{
    static ::uStaticStrong<List__Fuse_iOS_StatusBarConfig__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_iOS_StatusBarConfig__uType*)::uAllocClassType(sizeof(List__Fuse_iOS_StatusBarConfig__uType), "Uno.Collections.List<Fuse.iOS.StatusBarConfig>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_iOS_StatusBarConfig__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_iOS_StatusBarConfig__typeof(), offsetof(List__Fuse_iOS_StatusBarConfig__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_iOS_StatusBarConfig, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_iOS_StatusBarConfig, _data), ::uGetArrayType(::app::Fuse::iOS::StatusBarConfig__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_iOS_StatusBarConfig, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_iOS_StatusBarConfig, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_iOS_StatusBarConfig__Add, 0, false, ::app::Fuse::iOS::StatusBarConfig__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_iOS_StatusBarConfig__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_iOS_StatusBarConfig__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_iOS_StatusBarConfig__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_iOS_StatusBarConfig__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::iOS::StatusBarConfig__typeof()),
        ::uNewFunction("get_Count", List__Fuse_iOS_StatusBarConfig__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_iOS_StatusBarConfig__get_Item, 0, false, ::app::Fuse::iOS::StatusBarConfig__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_iOS_StatusBarConfig__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_iOS_StatusBarConfig__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_iOS_StatusBarConfig__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::iOS::StatusBarConfig__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_iOS_StatusBarConfig__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::iOS::StatusBarConfig__typeof()),
        ::uNewFunction(".ctor", List__Fuse_iOS_StatusBarConfig__New_1, 0, true, List__Fuse_iOS_StatusBarConfig__typeof()),
        ::uNewFunction(".ctor", List__Fuse_iOS_StatusBarConfig__New_2, 0, true, List__Fuse_iOS_StatusBarConfig__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_iOS_StatusBarConfig__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::iOS::StatusBarConfig__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_iOS_StatusBarConfig__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_iOS_StatusBarConfig__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::iOS::StatusBarConfig__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_iOS_StatusBarConfig__Sort, 0, false, ::app::Uno::Comparison__Fuse_iOS_StatusBarConfig__typeof()),
        ::uNewFunction("ToArray", List__Fuse_iOS_StatusBarConfig__ToArray, 0, false, ::uGetArrayType(::app::Fuse::iOS::StatusBarConfig__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_iOS_StatusBarConfig__GetEnumerator_boxed(List__Fuse_iOS_StatusBarConfig* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_iOS_StatusBarConfig__typeof(), __this->GetEnumerator());
}

void List__Fuse_iOS_StatusBarConfig___ObjInit(List__Fuse_iOS_StatusBarConfig* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_iOS_StatusBarConfig___ObjInit_1(List__Fuse_iOS_StatusBarConfig* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::iOS::StatusBarConfig__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_iOS_StatusBarConfig__Add(List__Fuse_iOS_StatusBarConfig* __this, ::app::Fuse::iOS::StatusBarConfig* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::iOS::StatusBarConfig*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_iOS_StatusBarConfig__AddRange(List__Fuse_iOS_StatusBarConfig* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_iOS_StatusBarConfig::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::iOS::StatusBarConfig* i = ::app::Uno::Collections::IEnumerator__Fuse_iOS_StatusBarConfig::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_iOS_StatusBarConfig__BoundsCheck(List__Fuse_iOS_StatusBarConfig* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_iOS_StatusBarConfig__Clear(List__Fuse_iOS_StatusBarConfig* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_iOS_StatusBarConfig__Contains(List__Fuse_iOS_StatusBarConfig* __this, ::app::Fuse::iOS::StatusBarConfig* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_iOS_StatusBarConfig(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::iOS::StatusBarConfig*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_iOS_StatusBarConfig__EnsureCapacity(List__Fuse_iOS_StatusBarConfig* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::iOS::StatusBarConfig__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::iOS::StatusBarConfig__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::iOS::StatusBarConfig*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::iOS::StatusBarConfig*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_iOS_StatusBarConfig__get_Count(List__Fuse_iOS_StatusBarConfig* __this)
{
    return __this->_used;
}

::app::Fuse::iOS::StatusBarConfig* List__Fuse_iOS_StatusBarConfig__get_Item(List__Fuse_iOS_StatusBarConfig* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::iOS::StatusBarConfig*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_iOS_StatusBarConfig List__Fuse_iOS_StatusBarConfig__GetEnumerator(List__Fuse_iOS_StatusBarConfig* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_iOS_StatusBarConfig__New_1(NULL, __this);
}

int List__Fuse_iOS_StatusBarConfig__IndexOf(List__Fuse_iOS_StatusBarConfig* __this, ::app::Fuse::iOS::StatusBarConfig* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_iOS_StatusBarConfig(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::iOS::StatusBarConfig*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_iOS_StatusBarConfig__Insert(List__Fuse_iOS_StatusBarConfig* __this, int index, ::app::Fuse::iOS::StatusBarConfig* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::iOS::StatusBarConfig*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::iOS::StatusBarConfig*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::iOS::StatusBarConfig*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_iOS_StatusBarConfig* List__Fuse_iOS_StatusBarConfig__New_1(::uStatic* __this)
{
    List__Fuse_iOS_StatusBarConfig* inst = (List__Fuse_iOS_StatusBarConfig*)::uAllocObject(sizeof(List__Fuse_iOS_StatusBarConfig), List__Fuse_iOS_StatusBarConfig__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_iOS_StatusBarConfig* List__Fuse_iOS_StatusBarConfig__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_iOS_StatusBarConfig* inst = (List__Fuse_iOS_StatusBarConfig*)::uAllocObject(sizeof(List__Fuse_iOS_StatusBarConfig), List__Fuse_iOS_StatusBarConfig__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_iOS_StatusBarConfig__Remove(List__Fuse_iOS_StatusBarConfig* __this, ::app::Fuse::iOS::StatusBarConfig* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_iOS_StatusBarConfig(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::iOS::StatusBarConfig*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_iOS_StatusBarConfig__RemoveAt(List__Fuse_iOS_StatusBarConfig* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::iOS::StatusBarConfig*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::iOS::StatusBarConfig*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::iOS::StatusBarConfig*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_iOS_StatusBarConfig__set_Item(List__Fuse_iOS_StatusBarConfig* __this, int index, ::app::Fuse::iOS::StatusBarConfig* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::iOS::StatusBarConfig*>(index) = value;
    __this->_version++;
}

void List__Fuse_iOS_StatusBarConfig__Sort(List__Fuse_iOS_StatusBarConfig* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_iOS_StatusBarConfig(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_iOS_StatusBarConfig__ToArray(List__Fuse_iOS_StatusBarConfig* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::iOS::StatusBarConfig__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::iOS::StatusBarConfig*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::iOS::StatusBarConfig*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_IViewport__uType* List__Fuse_IViewport__typeof()
{
    static ::uStaticStrong<List__Fuse_IViewport__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_IViewport__uType*)::uAllocClassType(sizeof(List__Fuse_IViewport__uType), "Uno.Collections.List<Fuse.IViewport>", false, 3, 1, 0);

    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Fuse_IViewport__RemoveAt;
    type->__interface_0.__fp_get_Item = (::uObject*(*)(void*, int))List__Fuse_IViewport__get_Item;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_IViewport__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_IViewport__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_IViewport__typeof(), offsetof(List__Fuse_IViewport__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_IViewport__typeof(), offsetof(List__Fuse_IViewport__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_IViewport__typeof(), offsetof(List__Fuse_IViewport__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_IViewport, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_IViewport, _data), ::uGetArrayType(::app::Fuse::IViewport__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_IViewport, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_IViewport, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_IViewport__Add, 0, false, ::app::Fuse::IViewport__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_IViewport__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_IViewport__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_IViewport__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_IViewport__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::IViewport__typeof()),
        ::uNewFunction("get_Count", List__Fuse_IViewport__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_IViewport__get_Item, 0, false, ::app::Fuse::IViewport__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_IViewport__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_IViewport__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_IViewport__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::IViewport__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_IViewport__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::IViewport__typeof()),
        ::uNewFunction(".ctor", List__Fuse_IViewport__New_1, 0, true, List__Fuse_IViewport__typeof()),
        ::uNewFunction(".ctor", List__Fuse_IViewport__New_2, 0, true, List__Fuse_IViewport__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_IViewport__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::IViewport__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_IViewport__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_IViewport__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::IViewport__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_IViewport__Sort, 0, false, ::app::Uno::Comparison__Fuse_IViewport__typeof()),
        ::uNewFunction("ToArray", List__Fuse_IViewport__ToArray, 0, false, ::uGetArrayType(::app::Fuse::IViewport__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_IViewport__GetEnumerator_boxed(List__Fuse_IViewport* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_IViewport__typeof(), __this->GetEnumerator());
}

void List__Fuse_IViewport___ObjInit(List__Fuse_IViewport* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_IViewport___ObjInit_1(List__Fuse_IViewport* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::IViewport__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_IViewport__Add(List__Fuse_IViewport* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_IViewport__AddRange(List__Fuse_IViewport* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_IViewport::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Fuse_IViewport::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_IViewport__BoundsCheck(List__Fuse_IViewport* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_IViewport__Clear(List__Fuse_IViewport* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_IViewport__Contains(List__Fuse_IViewport* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_IViewport(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_IViewport__EnsureCapacity(List__Fuse_IViewport* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::IViewport__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::IViewport__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_IViewport__get_Count(List__Fuse_IViewport* __this)
{
    return __this->_used;
}

::uObject* List__Fuse_IViewport__get_Item(List__Fuse_IViewport* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_IViewport List__Fuse_IViewport__GetEnumerator(List__Fuse_IViewport* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_IViewport__New_1(NULL, __this);
}

int List__Fuse_IViewport__IndexOf(List__Fuse_IViewport* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_IViewport(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_IViewport__Insert(List__Fuse_IViewport* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_IViewport* List__Fuse_IViewport__New_1(::uStatic* __this)
{
    List__Fuse_IViewport* inst = (List__Fuse_IViewport*)::uAllocObject(sizeof(List__Fuse_IViewport), List__Fuse_IViewport__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_IViewport* List__Fuse_IViewport__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_IViewport* inst = (List__Fuse_IViewport*)::uAllocObject(sizeof(List__Fuse_IViewport), List__Fuse_IViewport__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_IViewport__Remove(List__Fuse_IViewport* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_IViewport(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_IViewport__RemoveAt(List__Fuse_IViewport* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_IViewport__set_Item(List__Fuse_IViewport* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Fuse_IViewport__Sort(List__Fuse_IViewport* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_IViewport(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_IViewport__ToArray(List__Fuse_IViewport* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::IViewport__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Layouts_Column__uType* List__Fuse_Layouts_Column__typeof()
{
    static ::uStaticStrong<List__Fuse_Layouts_Column__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Layouts_Column__uType*)::uAllocClassType(sizeof(List__Fuse_Layouts_Column__uType), "Uno.Collections.List<Fuse.Layouts.Column>", false, 3, 1, 0);

    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Fuse_Layouts_Column__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Fuse::Layouts::Column*(*)(void*, int))List__Fuse_Layouts_Column__get_Item;
    type->__interface_1.__fp_Clear = (void(*)(void*))List__Fuse_Layouts_Column__Clear;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Layouts::Column*))List__Fuse_Layouts_Column__Add;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Layouts_Column__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Layouts_Column__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Layouts_Column__typeof(), offsetof(List__Fuse_Layouts_Column__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Layouts_Column__typeof(), offsetof(List__Fuse_Layouts_Column__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Layouts_Column__typeof(), offsetof(List__Fuse_Layouts_Column__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Layouts_Column, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Layouts_Column, _data), ::uGetArrayType(::app::Fuse::Layouts::Column__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Layouts_Column, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Layouts_Column, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Layouts_Column__Add, 0, false, ::app::Fuse::Layouts::Column__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Layouts_Column__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Layouts_Column__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Layouts_Column__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Layouts_Column__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Layouts::Column__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Layouts_Column__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Layouts_Column__get_Item, 0, false, ::app::Fuse::Layouts::Column__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Layouts_Column__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_Column__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Layouts_Column__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Layouts::Column__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Layouts_Column__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Layouts::Column__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Layouts_Column__New_1, 0, true, List__Fuse_Layouts_Column__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Layouts_Column__New_2, 0, true, List__Fuse_Layouts_Column__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Layouts_Column__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Layouts::Column__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Layouts_Column__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Layouts_Column__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Layouts::Column__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Layouts_Column__Sort, 0, false, ::app::Uno::Comparison__Fuse_Layouts_Column__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Layouts_Column__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Layouts::Column__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Layouts_Column__GetEnumerator_boxed(List__Fuse_Layouts_Column* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_Column__typeof(), __this->GetEnumerator());
}

void List__Fuse_Layouts_Column___ObjInit(List__Fuse_Layouts_Column* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Layouts_Column___ObjInit_1(List__Fuse_Layouts_Column* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Layouts::Column__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Layouts_Column__Add(List__Fuse_Layouts_Column* __this, ::app::Fuse::Layouts::Column* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Column*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Layouts_Column__AddRange(List__Fuse_Layouts_Column* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Layouts_Column::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Layouts::Column* i = ::app::Uno::Collections::IEnumerator__Fuse_Layouts_Column::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Layouts_Column__BoundsCheck(List__Fuse_Layouts_Column* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Layouts_Column__Clear(List__Fuse_Layouts_Column* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Layouts_Column__Contains(List__Fuse_Layouts_Column* __this, ::app::Fuse::Layouts::Column* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Layouts_Column(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Column*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Layouts_Column__EnsureCapacity(List__Fuse_Layouts_Column* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Layouts::Column__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Layouts::Column__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Layouts::Column*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Column*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Layouts_Column__get_Count(List__Fuse_Layouts_Column* __this)
{
    return __this->_used;
}

::app::Fuse::Layouts::Column* List__Fuse_Layouts_Column__get_Item(List__Fuse_Layouts_Column* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Column*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_Column List__Fuse_Layouts_Column__GetEnumerator(List__Fuse_Layouts_Column* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_Column__New_1(NULL, __this);
}

int List__Fuse_Layouts_Column__IndexOf(List__Fuse_Layouts_Column* __this, ::app::Fuse::Layouts::Column* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Layouts_Column(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Column*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Layouts_Column__Insert(List__Fuse_Layouts_Column* __this, int index, ::app::Fuse::Layouts::Column* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Column*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Column*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Column*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Layouts_Column* List__Fuse_Layouts_Column__New_1(::uStatic* __this)
{
    List__Fuse_Layouts_Column* inst = (List__Fuse_Layouts_Column*)::uAllocObject(sizeof(List__Fuse_Layouts_Column), List__Fuse_Layouts_Column__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Layouts_Column* List__Fuse_Layouts_Column__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Layouts_Column* inst = (List__Fuse_Layouts_Column*)::uAllocObject(sizeof(List__Fuse_Layouts_Column), List__Fuse_Layouts_Column__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Layouts_Column__Remove(List__Fuse_Layouts_Column* __this, ::app::Fuse::Layouts::Column* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Layouts_Column(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Column*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Layouts_Column__RemoveAt(List__Fuse_Layouts_Column* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Column*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Column*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Column*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Layouts_Column__set_Item(List__Fuse_Layouts_Column* __this, int index, ::app::Fuse::Layouts::Column* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Column*>(index) = value;
    __this->_version++;
}

void List__Fuse_Layouts_Column__Sort(List__Fuse_Layouts_Column* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Layouts_Column(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Layouts_Column__ToArray(List__Fuse_Layouts_Column* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Layouts::Column__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Layouts::Column*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Column*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Layouts_DefinitionBase_ParseDataItem__uType* List__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof()
{
    static ::uStaticStrong<List__Fuse_Layouts_DefinitionBase_ParseDataItem__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Layouts_DefinitionBase_ParseDataItem__uType*)::uAllocClassType(sizeof(List__Fuse_Layouts_DefinitionBase_ParseDataItem__uType), "Uno.Collections.List<Fuse.Layouts.DefinitionBase_ParseDataItem>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Layouts_DefinitionBase_ParseDataItem__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof(), offsetof(List__Fuse_Layouts_DefinitionBase_ParseDataItem__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof(), offsetof(List__Fuse_Layouts_DefinitionBase_ParseDataItem__uType, __interface_1));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Layouts_DefinitionBase_ParseDataItem, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Layouts_DefinitionBase_ParseDataItem, _data), ::uGetArrayType(::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Layouts_DefinitionBase_ParseDataItem, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Layouts_DefinitionBase_ParseDataItem, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Layouts_DefinitionBase_ParseDataItem__Add, 0, false, ::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Layouts_DefinitionBase_ParseDataItem__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Layouts_DefinitionBase_ParseDataItem__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Layouts_DefinitionBase_ParseDataItem__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Layouts_DefinitionBase_ParseDataItem__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Layouts_DefinitionBase_ParseDataItem__get_Item, 0, false, ::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Layouts_DefinitionBase_ParseDataItem__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Layouts_DefinitionBase_ParseDataItem__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Layouts_DefinitionBase_ParseDataItem__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Layouts_DefinitionBase_ParseDataItem__New_1, 0, true, List__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Layouts_DefinitionBase_ParseDataItem__New_2, 0, true, List__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Layouts_DefinitionBase_ParseDataItem__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Layouts_DefinitionBase_ParseDataItem__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Layouts_DefinitionBase_ParseDataItem__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Layouts_DefinitionBase_ParseDataItem__Sort, 0, false, ::app::Uno::Comparison__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Layouts_DefinitionBase_ParseDataItem__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Layouts_DefinitionBase_ParseDataItem__GetEnumerator_boxed(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof(), __this->GetEnumerator());
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem___ObjInit(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem___ObjInit_1(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem__Add(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, ::app::Fuse::Layouts::DefinitionBase_ParseDataItem item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem__AddRange(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Layouts_DefinitionBase_ParseDataItem::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Layouts::DefinitionBase_ParseDataItem i = ::app::Uno::Collections::IEnumerator__Fuse_Layouts_DefinitionBase_ParseDataItem::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem__BoundsCheck(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem__Clear(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Layouts_DefinitionBase_ParseDataItem__Contains(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, ::app::Fuse::Layouts::DefinitionBase_ParseDataItem item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Layouts_DefinitionBase_ParseDataItem(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem__EnsureCapacity(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Layouts_DefinitionBase_ParseDataItem__get_Count(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this)
{
    return __this->_used;
}

::app::Fuse::Layouts::DefinitionBase_ParseDataItem List__Fuse_Layouts_DefinitionBase_ParseDataItem__get_Item(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_DefinitionBase_ParseDataItem List__Fuse_Layouts_DefinitionBase_ParseDataItem__GetEnumerator(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_DefinitionBase_ParseDataItem__New_1(NULL, __this);
}

int List__Fuse_Layouts_DefinitionBase_ParseDataItem__IndexOf(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, ::app::Fuse::Layouts::DefinitionBase_ParseDataItem item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Layouts_DefinitionBase_ParseDataItem(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem__Insert(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, int index, ::app::Fuse::Layouts::DefinitionBase_ParseDataItem item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Layouts_DefinitionBase_ParseDataItem* List__Fuse_Layouts_DefinitionBase_ParseDataItem__New_1(::uStatic* __this)
{
    List__Fuse_Layouts_DefinitionBase_ParseDataItem* inst = (List__Fuse_Layouts_DefinitionBase_ParseDataItem*)::uAllocObject(sizeof(List__Fuse_Layouts_DefinitionBase_ParseDataItem), List__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Layouts_DefinitionBase_ParseDataItem* List__Fuse_Layouts_DefinitionBase_ParseDataItem__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Layouts_DefinitionBase_ParseDataItem* inst = (List__Fuse_Layouts_DefinitionBase_ParseDataItem*)::uAllocObject(sizeof(List__Fuse_Layouts_DefinitionBase_ParseDataItem), List__Fuse_Layouts_DefinitionBase_ParseDataItem__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Layouts_DefinitionBase_ParseDataItem__Remove(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, ::app::Fuse::Layouts::DefinitionBase_ParseDataItem item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Layouts_DefinitionBase_ParseDataItem(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem__RemoveAt(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(__this->_used) = ::uDefault< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>();
    __this->_version++;
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem__set_Item(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, int index, ::app::Fuse::Layouts::DefinitionBase_ParseDataItem value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(index) = value;
    __this->_version++;
}

void List__Fuse_Layouts_DefinitionBase_ParseDataItem__Sort(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Layouts_DefinitionBase_ParseDataItem(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Layouts_DefinitionBase_ParseDataItem__ToArray(List__Fuse_Layouts_DefinitionBase_ParseDataItem* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Layouts::DefinitionBase_ParseDataItem__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::DefinitionBase_ParseDataItem>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Layouts_Row__uType* List__Fuse_Layouts_Row__typeof()
{
    static ::uStaticStrong<List__Fuse_Layouts_Row__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Layouts_Row__uType*)::uAllocClassType(sizeof(List__Fuse_Layouts_Row__uType), "Uno.Collections.List<Fuse.Layouts.Row>", false, 3, 1, 0);

    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Fuse_Layouts_Row__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Fuse::Layouts::Row*(*)(void*, int))List__Fuse_Layouts_Row__get_Item;
    type->__interface_1.__fp_Clear = (void(*)(void*))List__Fuse_Layouts_Row__Clear;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Layouts::Row*))List__Fuse_Layouts_Row__Add;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Layouts_Row__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Layouts_Row__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Layouts_Row__typeof(), offsetof(List__Fuse_Layouts_Row__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Layouts_Row__typeof(), offsetof(List__Fuse_Layouts_Row__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Layouts_Row__typeof(), offsetof(List__Fuse_Layouts_Row__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Layouts_Row, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Layouts_Row, _data), ::uGetArrayType(::app::Fuse::Layouts::Row__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Layouts_Row, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Layouts_Row, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Layouts_Row__Add, 0, false, ::app::Fuse::Layouts::Row__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Layouts_Row__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Layouts_Row__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Layouts_Row__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Layouts_Row__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Layouts::Row__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Layouts_Row__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Layouts_Row__get_Item, 0, false, ::app::Fuse::Layouts::Row__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Layouts_Row__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_Row__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Layouts_Row__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Layouts::Row__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Layouts_Row__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Layouts::Row__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Layouts_Row__New_1, 0, true, List__Fuse_Layouts_Row__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Layouts_Row__New_2, 0, true, List__Fuse_Layouts_Row__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Layouts_Row__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Layouts::Row__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Layouts_Row__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Layouts_Row__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Layouts::Row__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Layouts_Row__Sort, 0, false, ::app::Uno::Comparison__Fuse_Layouts_Row__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Layouts_Row__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Layouts::Row__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Layouts_Row__GetEnumerator_boxed(List__Fuse_Layouts_Row* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_Row__typeof(), __this->GetEnumerator());
}

void List__Fuse_Layouts_Row___ObjInit(List__Fuse_Layouts_Row* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Layouts_Row___ObjInit_1(List__Fuse_Layouts_Row* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Layouts::Row__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Layouts_Row__Add(List__Fuse_Layouts_Row* __this, ::app::Fuse::Layouts::Row* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Row*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Layouts_Row__AddRange(List__Fuse_Layouts_Row* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Layouts_Row::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Layouts::Row* i = ::app::Uno::Collections::IEnumerator__Fuse_Layouts_Row::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Layouts_Row__BoundsCheck(List__Fuse_Layouts_Row* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Layouts_Row__Clear(List__Fuse_Layouts_Row* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Layouts_Row__Contains(List__Fuse_Layouts_Row* __this, ::app::Fuse::Layouts::Row* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Layouts_Row(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Row*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Layouts_Row__EnsureCapacity(List__Fuse_Layouts_Row* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Layouts::Row__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Layouts::Row__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Layouts::Row*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Row*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Layouts_Row__get_Count(List__Fuse_Layouts_Row* __this)
{
    return __this->_used;
}

::app::Fuse::Layouts::Row* List__Fuse_Layouts_Row__get_Item(List__Fuse_Layouts_Row* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Row*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_Row List__Fuse_Layouts_Row__GetEnumerator(List__Fuse_Layouts_Row* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Layouts_Row__New_1(NULL, __this);
}

int List__Fuse_Layouts_Row__IndexOf(List__Fuse_Layouts_Row* __this, ::app::Fuse::Layouts::Row* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Layouts_Row(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Row*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Layouts_Row__Insert(List__Fuse_Layouts_Row* __this, int index, ::app::Fuse::Layouts::Row* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Row*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Row*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Row*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Layouts_Row* List__Fuse_Layouts_Row__New_1(::uStatic* __this)
{
    List__Fuse_Layouts_Row* inst = (List__Fuse_Layouts_Row*)::uAllocObject(sizeof(List__Fuse_Layouts_Row), List__Fuse_Layouts_Row__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Layouts_Row* List__Fuse_Layouts_Row__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Layouts_Row* inst = (List__Fuse_Layouts_Row*)::uAllocObject(sizeof(List__Fuse_Layouts_Row), List__Fuse_Layouts_Row__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Layouts_Row__Remove(List__Fuse_Layouts_Row* __this, ::app::Fuse::Layouts::Row* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Layouts_Row(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Row*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Layouts_Row__RemoveAt(List__Fuse_Layouts_Row* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Row*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Row*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Row*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Layouts_Row__set_Item(List__Fuse_Layouts_Row* __this, int index, ::app::Fuse::Layouts::Row* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Layouts::Row*>(index) = value;
    __this->_version++;
}

void List__Fuse_Layouts_Row__Sort(List__Fuse_Layouts_Row* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Layouts_Row(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Layouts_Row__ToArray(List__Fuse_Layouts_Row* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Layouts::Row__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Layouts::Row*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Layouts::Row*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Navigation_INavigationAnimator__uType* List__Fuse_Navigation_INavigationAnimator__typeof()
{
    static ::uStaticStrong<List__Fuse_Navigation_INavigationAnimator__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Navigation_INavigationAnimator__uType*)::uAllocClassType(sizeof(List__Fuse_Navigation_INavigationAnimator__uType), "Uno.Collections.List<Fuse.Navigation.INavigationAnimator>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::uObject*(*)(void*, int))List__Fuse_Navigation_INavigationAnimator__get_Item;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Navigation_INavigationAnimator__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Navigation_INavigationAnimator__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Navigation_INavigationAnimator__typeof(), offsetof(List__Fuse_Navigation_INavigationAnimator__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Navigation_INavigationAnimator__typeof(), offsetof(List__Fuse_Navigation_INavigationAnimator__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Navigation_INavigationAnimator__typeof(), offsetof(List__Fuse_Navigation_INavigationAnimator__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Navigation_INavigationAnimator, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Navigation_INavigationAnimator, _data), ::uGetArrayType(::app::Fuse::Navigation::INavigationAnimator__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Navigation_INavigationAnimator, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Navigation_INavigationAnimator, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Navigation_INavigationAnimator__Add, 0, false, ::app::Fuse::Navigation::INavigationAnimator__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Navigation_INavigationAnimator__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Navigation_INavigationAnimator__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Navigation_INavigationAnimator__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Navigation_INavigationAnimator__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Navigation::INavigationAnimator__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Navigation_INavigationAnimator__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Navigation_INavigationAnimator__get_Item, 0, false, ::app::Fuse::Navigation::INavigationAnimator__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Navigation_INavigationAnimator__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Navigation_INavigationAnimator__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Navigation_INavigationAnimator__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Navigation::INavigationAnimator__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Navigation_INavigationAnimator__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Navigation::INavigationAnimator__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Navigation_INavigationAnimator__New_1, 0, true, List__Fuse_Navigation_INavigationAnimator__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Navigation_INavigationAnimator__New_2, 0, true, List__Fuse_Navigation_INavigationAnimator__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Navigation_INavigationAnimator__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Navigation::INavigationAnimator__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Navigation_INavigationAnimator__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Navigation_INavigationAnimator__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Navigation::INavigationAnimator__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Navigation_INavigationAnimator__Sort, 0, false, ::app::Uno::Comparison__Fuse_Navigation_INavigationAnimator__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Navigation_INavigationAnimator__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Navigation::INavigationAnimator__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Navigation_INavigationAnimator__GetEnumerator_boxed(List__Fuse_Navigation_INavigationAnimator* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Navigation_INavigationAnimator__typeof(), __this->GetEnumerator());
}

void List__Fuse_Navigation_INavigationAnimator___ObjInit(List__Fuse_Navigation_INavigationAnimator* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Navigation_INavigationAnimator___ObjInit_1(List__Fuse_Navigation_INavigationAnimator* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Navigation::INavigationAnimator__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Navigation_INavigationAnimator__Add(List__Fuse_Navigation_INavigationAnimator* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Navigation_INavigationAnimator__AddRange(List__Fuse_Navigation_INavigationAnimator* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Navigation_INavigationAnimator::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Fuse_Navigation_INavigationAnimator::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Navigation_INavigationAnimator__BoundsCheck(List__Fuse_Navigation_INavigationAnimator* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Navigation_INavigationAnimator__Clear(List__Fuse_Navigation_INavigationAnimator* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Navigation_INavigationAnimator__Contains(List__Fuse_Navigation_INavigationAnimator* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Navigation_INavigationAnimator(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Navigation_INavigationAnimator__EnsureCapacity(List__Fuse_Navigation_INavigationAnimator* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Navigation::INavigationAnimator__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Navigation::INavigationAnimator__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Navigation_INavigationAnimator__get_Count(List__Fuse_Navigation_INavigationAnimator* __this)
{
    return __this->_used;
}

::uObject* List__Fuse_Navigation_INavigationAnimator__get_Item(List__Fuse_Navigation_INavigationAnimator* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Navigation_INavigationAnimator List__Fuse_Navigation_INavigationAnimator__GetEnumerator(List__Fuse_Navigation_INavigationAnimator* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Navigation_INavigationAnimator__New_1(NULL, __this);
}

int List__Fuse_Navigation_INavigationAnimator__IndexOf(List__Fuse_Navigation_INavigationAnimator* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Navigation_INavigationAnimator(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Navigation_INavigationAnimator__Insert(List__Fuse_Navigation_INavigationAnimator* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Navigation_INavigationAnimator* List__Fuse_Navigation_INavigationAnimator__New_1(::uStatic* __this)
{
    List__Fuse_Navigation_INavigationAnimator* inst = (List__Fuse_Navigation_INavigationAnimator*)::uAllocObject(sizeof(List__Fuse_Navigation_INavigationAnimator), List__Fuse_Navigation_INavigationAnimator__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Navigation_INavigationAnimator* List__Fuse_Navigation_INavigationAnimator__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Navigation_INavigationAnimator* inst = (List__Fuse_Navigation_INavigationAnimator*)::uAllocObject(sizeof(List__Fuse_Navigation_INavigationAnimator), List__Fuse_Navigation_INavigationAnimator__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Navigation_INavigationAnimator__Remove(List__Fuse_Navigation_INavigationAnimator* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Navigation_INavigationAnimator(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Navigation_INavigationAnimator__RemoveAt(List__Fuse_Navigation_INavigationAnimator* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Navigation_INavigationAnimator__set_Item(List__Fuse_Navigation_INavigationAnimator* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Fuse_Navigation_INavigationAnimator__Sort(List__Fuse_Navigation_INavigationAnimator* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Navigation_INavigationAnimator(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Navigation_INavigationAnimator__ToArray(List__Fuse_Navigation_INavigationAnimator* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Navigation::INavigationAnimator__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Navigation_IPageResourceBinding__uType* List__Fuse_Navigation_IPageResourceBinding__typeof()
{
    static ::uStaticStrong<List__Fuse_Navigation_IPageResourceBinding__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Navigation_IPageResourceBinding__uType*)::uAllocClassType(sizeof(List__Fuse_Navigation_IPageResourceBinding__uType), "Uno.Collections.List<Fuse.Navigation.IPageResourceBinding>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Navigation_IPageResourceBinding__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Navigation_IPageResourceBinding__typeof(), offsetof(List__Fuse_Navigation_IPageResourceBinding__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Navigation_IPageResourceBinding, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Navigation_IPageResourceBinding, _data), ::uGetArrayType(::app::Fuse::Navigation::IPageResourceBinding__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Navigation_IPageResourceBinding, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Navigation_IPageResourceBinding, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Navigation_IPageResourceBinding__Add, 0, false, ::app::Fuse::Navigation::IPageResourceBinding__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Navigation_IPageResourceBinding__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Navigation_IPageResourceBinding__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Navigation_IPageResourceBinding__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Navigation_IPageResourceBinding__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Navigation::IPageResourceBinding__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Navigation_IPageResourceBinding__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Navigation_IPageResourceBinding__get_Item, 0, false, ::app::Fuse::Navigation::IPageResourceBinding__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Navigation_IPageResourceBinding__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Navigation_IPageResourceBinding__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Navigation_IPageResourceBinding__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Navigation::IPageResourceBinding__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Navigation_IPageResourceBinding__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Navigation::IPageResourceBinding__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Navigation_IPageResourceBinding__New_1, 0, true, List__Fuse_Navigation_IPageResourceBinding__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Navigation_IPageResourceBinding__New_2, 0, true, List__Fuse_Navigation_IPageResourceBinding__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Navigation_IPageResourceBinding__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Navigation::IPageResourceBinding__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Navigation_IPageResourceBinding__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Navigation_IPageResourceBinding__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Navigation::IPageResourceBinding__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Navigation_IPageResourceBinding__Sort, 0, false, ::app::Uno::Comparison__Fuse_Navigation_IPageResourceBinding__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Navigation_IPageResourceBinding__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Navigation::IPageResourceBinding__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Navigation_IPageResourceBinding__GetEnumerator_boxed(List__Fuse_Navigation_IPageResourceBinding* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Navigation_IPageResourceBinding__typeof(), __this->GetEnumerator());
}

void List__Fuse_Navigation_IPageResourceBinding___ObjInit(List__Fuse_Navigation_IPageResourceBinding* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Navigation_IPageResourceBinding___ObjInit_1(List__Fuse_Navigation_IPageResourceBinding* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Navigation::IPageResourceBinding__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Navigation_IPageResourceBinding__Add(List__Fuse_Navigation_IPageResourceBinding* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Navigation_IPageResourceBinding__AddRange(List__Fuse_Navigation_IPageResourceBinding* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Navigation_IPageResourceBinding::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Fuse_Navigation_IPageResourceBinding::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Navigation_IPageResourceBinding__BoundsCheck(List__Fuse_Navigation_IPageResourceBinding* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Navigation_IPageResourceBinding__Clear(List__Fuse_Navigation_IPageResourceBinding* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Navigation_IPageResourceBinding__Contains(List__Fuse_Navigation_IPageResourceBinding* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Navigation_IPageResourceBinding(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Navigation_IPageResourceBinding__EnsureCapacity(List__Fuse_Navigation_IPageResourceBinding* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Navigation::IPageResourceBinding__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Navigation::IPageResourceBinding__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Navigation_IPageResourceBinding__get_Count(List__Fuse_Navigation_IPageResourceBinding* __this)
{
    return __this->_used;
}

::uObject* List__Fuse_Navigation_IPageResourceBinding__get_Item(List__Fuse_Navigation_IPageResourceBinding* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Navigation_IPageResourceBinding List__Fuse_Navigation_IPageResourceBinding__GetEnumerator(List__Fuse_Navigation_IPageResourceBinding* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Navigation_IPageResourceBinding__New_1(NULL, __this);
}

int List__Fuse_Navigation_IPageResourceBinding__IndexOf(List__Fuse_Navigation_IPageResourceBinding* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Navigation_IPageResourceBinding(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Navigation_IPageResourceBinding__Insert(List__Fuse_Navigation_IPageResourceBinding* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Navigation_IPageResourceBinding* List__Fuse_Navigation_IPageResourceBinding__New_1(::uStatic* __this)
{
    List__Fuse_Navigation_IPageResourceBinding* inst = (List__Fuse_Navigation_IPageResourceBinding*)::uAllocObject(sizeof(List__Fuse_Navigation_IPageResourceBinding), List__Fuse_Navigation_IPageResourceBinding__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Navigation_IPageResourceBinding* List__Fuse_Navigation_IPageResourceBinding__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Navigation_IPageResourceBinding* inst = (List__Fuse_Navigation_IPageResourceBinding*)::uAllocObject(sizeof(List__Fuse_Navigation_IPageResourceBinding), List__Fuse_Navigation_IPageResourceBinding__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Navigation_IPageResourceBinding__Remove(List__Fuse_Navigation_IPageResourceBinding* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Navigation_IPageResourceBinding(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Navigation_IPageResourceBinding__RemoveAt(List__Fuse_Navigation_IPageResourceBinding* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Navigation_IPageResourceBinding__set_Item(List__Fuse_Navigation_IPageResourceBinding* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Fuse_Navigation_IPageResourceBinding__Sort(List__Fuse_Navigation_IPageResourceBinding* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Navigation_IPageResourceBinding(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Navigation_IPageResourceBinding__ToArray(List__Fuse_Navigation_IPageResourceBinding* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Navigation::IPageResourceBinding__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Node__uType* List__Fuse_Node__typeof()
{
    static ::uStaticStrong<List__Fuse_Node__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Node__uType*)::uAllocClassType(sizeof(List__Fuse_Node__uType), "Uno.Collections.List<Fuse.Node>", false, 3, 1, 0);

    type->__interface_0.__fp_Insert = (void(*)(void*, int, ::app::Fuse::Node*))List__Fuse_Node__Insert;
    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Fuse_Node__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Fuse::Node*(*)(void*, int))List__Fuse_Node__get_Item;
    type->__interface_1.__fp_Clear = (void(*)(void*))List__Fuse_Node__Clear;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Node*))List__Fuse_Node__Add;
    type->__interface_1.__fp_Remove = (bool(*)(void*, ::app::Fuse::Node*))List__Fuse_Node__Remove;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Node__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Node__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Node__typeof(), offsetof(List__Fuse_Node__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Node__typeof(), offsetof(List__Fuse_Node__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Node__typeof(), offsetof(List__Fuse_Node__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Node, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Node, _data), ::uGetArrayType(::app::Fuse::Node__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Node, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Node, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Node__Add, 0, false, ::app::Fuse::Node__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Node__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Node__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Node__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Node__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Node__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Node__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Node__get_Item, 0, false, ::app::Fuse::Node__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Node__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Node__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Node__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Node__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Node__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Node__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Node__New_1, 0, true, List__Fuse_Node__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Node__New_2, 0, true, List__Fuse_Node__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Node__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Node__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Node__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Node__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Node__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Node__Sort, 0, false, ::app::Uno::Comparison__Fuse_Node__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Node__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Node__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Node__GetEnumerator_boxed(List__Fuse_Node* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Node__typeof(), __this->GetEnumerator());
}

void List__Fuse_Node___ObjInit(List__Fuse_Node* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Node___ObjInit_1(List__Fuse_Node* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Node__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Node__Add(List__Fuse_Node* __this, ::app::Fuse::Node* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Node*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Node__AddRange(List__Fuse_Node* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Node::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Node* i = ::app::Uno::Collections::IEnumerator__Fuse_Node::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Node__BoundsCheck(List__Fuse_Node* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Node__Clear(List__Fuse_Node* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Node__Contains(List__Fuse_Node* __this, ::app::Fuse::Node* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Node(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Node*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Node__EnsureCapacity(List__Fuse_Node* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Node__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Node__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Node*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Node*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Node__get_Count(List__Fuse_Node* __this)
{
    return __this->_used;
}

::app::Fuse::Node* List__Fuse_Node__get_Item(List__Fuse_Node* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Node*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Node List__Fuse_Node__GetEnumerator(List__Fuse_Node* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Node__New_1(NULL, __this);
}

int List__Fuse_Node__IndexOf(List__Fuse_Node* __this, ::app::Fuse::Node* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Node(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Node*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Node__Insert(List__Fuse_Node* __this, int index, ::app::Fuse::Node* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Node*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Node*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Node*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Node* List__Fuse_Node__New_1(::uStatic* __this)
{
    List__Fuse_Node* inst = (List__Fuse_Node*)::uAllocObject(sizeof(List__Fuse_Node), List__Fuse_Node__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Node* List__Fuse_Node__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Node* inst = (List__Fuse_Node*)::uAllocObject(sizeof(List__Fuse_Node), List__Fuse_Node__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Node__Remove(List__Fuse_Node* __this, ::app::Fuse::Node* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Node(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Node*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Node__RemoveAt(List__Fuse_Node* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Node*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Node*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Node*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Node__set_Item(List__Fuse_Node* __this, int index, ::app::Fuse::Node* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Node*>(index) = value;
    __this->_version++;
}

void List__Fuse_Node__Sort(List__Fuse_Node* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Node(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Node__ToArray(List__Fuse_Node* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Node__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Node*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Node*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Physics_Body__uType* List__Fuse_Physics_Body__typeof()
{
    static ::uStaticStrong<List__Fuse_Physics_Body__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Physics_Body__uType*)::uAllocClassType(sizeof(List__Fuse_Physics_Body__uType), "Uno.Collections.List<Fuse.Physics.Body>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Physics_Body__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Physics_Body__typeof(), offsetof(List__Fuse_Physics_Body__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Physics_Body, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Physics_Body, _data), ::uGetArrayType(::app::Fuse::Physics::Body__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Physics_Body, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Physics_Body, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Physics_Body__Add, 0, false, ::app::Fuse::Physics::Body__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Physics_Body__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Physics_Body__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Physics_Body__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Physics_Body__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Physics::Body__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Physics_Body__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Physics_Body__get_Item, 0, false, ::app::Fuse::Physics::Body__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Physics_Body__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Physics_Body__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Physics_Body__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Physics::Body__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Physics_Body__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Physics::Body__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Physics_Body__New_1, 0, true, List__Fuse_Physics_Body__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Physics_Body__New_2, 0, true, List__Fuse_Physics_Body__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Physics_Body__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Physics::Body__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Physics_Body__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Physics_Body__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Physics::Body__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Physics_Body__Sort, 0, false, ::app::Uno::Comparison__Fuse_Physics_Body__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Physics_Body__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Physics::Body__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Physics_Body__GetEnumerator_boxed(List__Fuse_Physics_Body* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Physics_Body__typeof(), __this->GetEnumerator());
}

void List__Fuse_Physics_Body___ObjInit(List__Fuse_Physics_Body* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Physics_Body___ObjInit_1(List__Fuse_Physics_Body* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Physics::Body__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Physics_Body__Add(List__Fuse_Physics_Body* __this, ::app::Fuse::Physics::Body* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Physics::Body*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Physics_Body__AddRange(List__Fuse_Physics_Body* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Physics_Body::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Physics::Body* i = ::app::Uno::Collections::IEnumerator__Fuse_Physics_Body::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Physics_Body__BoundsCheck(List__Fuse_Physics_Body* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Physics_Body__Clear(List__Fuse_Physics_Body* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Physics_Body__Contains(List__Fuse_Physics_Body* __this, ::app::Fuse::Physics::Body* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Physics_Body(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Physics::Body*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Physics_Body__EnsureCapacity(List__Fuse_Physics_Body* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Physics::Body__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Physics::Body__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Physics::Body*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Physics::Body*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Physics_Body__get_Count(List__Fuse_Physics_Body* __this)
{
    return __this->_used;
}

::app::Fuse::Physics::Body* List__Fuse_Physics_Body__get_Item(List__Fuse_Physics_Body* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Physics::Body*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Physics_Body List__Fuse_Physics_Body__GetEnumerator(List__Fuse_Physics_Body* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Physics_Body__New_1(NULL, __this);
}

int List__Fuse_Physics_Body__IndexOf(List__Fuse_Physics_Body* __this, ::app::Fuse::Physics::Body* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Physics_Body(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Physics::Body*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Physics_Body__Insert(List__Fuse_Physics_Body* __this, int index, ::app::Fuse::Physics::Body* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Physics::Body*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Physics::Body*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Physics::Body*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Physics_Body* List__Fuse_Physics_Body__New_1(::uStatic* __this)
{
    List__Fuse_Physics_Body* inst = (List__Fuse_Physics_Body*)::uAllocObject(sizeof(List__Fuse_Physics_Body), List__Fuse_Physics_Body__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Physics_Body* List__Fuse_Physics_Body__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Physics_Body* inst = (List__Fuse_Physics_Body*)::uAllocObject(sizeof(List__Fuse_Physics_Body), List__Fuse_Physics_Body__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Physics_Body__Remove(List__Fuse_Physics_Body* __this, ::app::Fuse::Physics::Body* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Physics_Body(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Physics::Body*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Physics_Body__RemoveAt(List__Fuse_Physics_Body* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Physics::Body*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Physics::Body*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Physics::Body*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Physics_Body__set_Item(List__Fuse_Physics_Body* __this, int index, ::app::Fuse::Physics::Body* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Physics::Body*>(index) = value;
    __this->_version++;
}

void List__Fuse_Physics_Body__Sort(List__Fuse_Physics_Body* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Physics_Body(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Physics_Body__ToArray(List__Fuse_Physics_Body* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Physics::Body__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Physics::Body*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Physics::Body*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Physics_IRule__uType* List__Fuse_Physics_IRule__typeof()
{
    static ::uStaticStrong<List__Fuse_Physics_IRule__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Physics_IRule__uType*)::uAllocClassType(sizeof(List__Fuse_Physics_IRule__uType), "Uno.Collections.List<Fuse.Physics.IRule>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Physics_IRule__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Physics_IRule__typeof(), offsetof(List__Fuse_Physics_IRule__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Physics_IRule, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Physics_IRule, _data), ::uGetArrayType(::app::Fuse::Physics::IRule__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Physics_IRule, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Physics_IRule, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Physics_IRule__Add, 0, false, ::app::Fuse::Physics::IRule__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Physics_IRule__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Physics_IRule__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Physics_IRule__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Physics_IRule__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Physics::IRule__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Physics_IRule__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Physics_IRule__get_Item, 0, false, ::app::Fuse::Physics::IRule__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Physics_IRule__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Physics_IRule__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Physics_IRule__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Physics::IRule__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Physics_IRule__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Physics::IRule__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Physics_IRule__New_1, 0, true, List__Fuse_Physics_IRule__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Physics_IRule__New_2, 0, true, List__Fuse_Physics_IRule__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Physics_IRule__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Physics::IRule__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Physics_IRule__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Physics_IRule__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Physics::IRule__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Physics_IRule__Sort, 0, false, ::app::Uno::Comparison__Fuse_Physics_IRule__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Physics_IRule__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Physics::IRule__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Physics_IRule__GetEnumerator_boxed(List__Fuse_Physics_IRule* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Physics_IRule__typeof(), __this->GetEnumerator());
}

void List__Fuse_Physics_IRule___ObjInit(List__Fuse_Physics_IRule* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Physics_IRule___ObjInit_1(List__Fuse_Physics_IRule* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Physics::IRule__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Physics_IRule__Add(List__Fuse_Physics_IRule* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Physics_IRule__AddRange(List__Fuse_Physics_IRule* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Physics_IRule::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Fuse_Physics_IRule::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Physics_IRule__BoundsCheck(List__Fuse_Physics_IRule* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Physics_IRule__Clear(List__Fuse_Physics_IRule* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Physics_IRule__Contains(List__Fuse_Physics_IRule* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Physics_IRule(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Physics_IRule__EnsureCapacity(List__Fuse_Physics_IRule* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Physics::IRule__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Physics::IRule__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Physics_IRule__get_Count(List__Fuse_Physics_IRule* __this)
{
    return __this->_used;
}

::uObject* List__Fuse_Physics_IRule__get_Item(List__Fuse_Physics_IRule* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Physics_IRule List__Fuse_Physics_IRule__GetEnumerator(List__Fuse_Physics_IRule* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Physics_IRule__New_1(NULL, __this);
}

int List__Fuse_Physics_IRule__IndexOf(List__Fuse_Physics_IRule* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Physics_IRule(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Physics_IRule__Insert(List__Fuse_Physics_IRule* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Physics_IRule* List__Fuse_Physics_IRule__New_1(::uStatic* __this)
{
    List__Fuse_Physics_IRule* inst = (List__Fuse_Physics_IRule*)::uAllocObject(sizeof(List__Fuse_Physics_IRule), List__Fuse_Physics_IRule__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Physics_IRule* List__Fuse_Physics_IRule__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Physics_IRule* inst = (List__Fuse_Physics_IRule*)::uAllocObject(sizeof(List__Fuse_Physics_IRule), List__Fuse_Physics_IRule__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Physics_IRule__Remove(List__Fuse_Physics_IRule* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Physics_IRule(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Physics_IRule__RemoveAt(List__Fuse_Physics_IRule* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Physics_IRule__set_Item(List__Fuse_Physics_IRule* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Fuse_Physics_IRule__Sort(List__Fuse_Physics_IRule* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Physics_IRule(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Physics_IRule__ToArray(List__Fuse_Physics_IRule* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Physics::IRule__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Reactive_Case__uType* List__Fuse_Reactive_Case__typeof()
{
    static ::uStaticStrong<List__Fuse_Reactive_Case__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Reactive_Case__uType*)::uAllocClassType(sizeof(List__Fuse_Reactive_Case__uType), "Uno.Collections.List<Fuse.Reactive.Case>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Reactive_Case__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Reactive_Case__typeof(), offsetof(List__Fuse_Reactive_Case__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Fuse_Reactive_Case__typeof(), offsetof(List__Fuse_Reactive_Case__uType, __interface_1));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Reactive_Case, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Reactive_Case, _data), ::uGetArrayType(::app::Fuse::Reactive::Case__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Reactive_Case, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Reactive_Case, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Reactive_Case__Add, 0, false, ::app::Fuse::Reactive::Case__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Reactive_Case__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Reactive_Case__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Reactive_Case__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Reactive_Case__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Reactive::Case__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Reactive_Case__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Reactive_Case__get_Item, 0, false, ::app::Fuse::Reactive::Case__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Reactive_Case__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_Case__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Reactive_Case__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Reactive::Case__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Reactive_Case__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Reactive::Case__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Reactive_Case__New_1, 0, true, List__Fuse_Reactive_Case__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Reactive_Case__New_2, 0, true, List__Fuse_Reactive_Case__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Reactive_Case__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Reactive::Case__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Reactive_Case__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Reactive_Case__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Reactive::Case__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Reactive_Case__Sort, 0, false, ::app::Uno::Comparison__Fuse_Reactive_Case__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Reactive_Case__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Reactive::Case__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Reactive_Case__GetEnumerator_boxed(List__Fuse_Reactive_Case* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_Case__typeof(), __this->GetEnumerator());
}

void List__Fuse_Reactive_Case___ObjInit(List__Fuse_Reactive_Case* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Reactive_Case___ObjInit_1(List__Fuse_Reactive_Case* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Reactive::Case__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Reactive_Case__Add(List__Fuse_Reactive_Case* __this, ::app::Fuse::Reactive::Case* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::Case*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Reactive_Case__AddRange(List__Fuse_Reactive_Case* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Reactive_Case::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Reactive::Case* i = ::app::Uno::Collections::IEnumerator__Fuse_Reactive_Case::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Reactive_Case__BoundsCheck(List__Fuse_Reactive_Case* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Reactive_Case__Clear(List__Fuse_Reactive_Case* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Reactive_Case__Contains(List__Fuse_Reactive_Case* __this, ::app::Fuse::Reactive::Case* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Reactive_Case(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::Case*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Reactive_Case__EnsureCapacity(List__Fuse_Reactive_Case* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Reactive::Case__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Reactive::Case__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Reactive::Case*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::Case*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Reactive_Case__get_Count(List__Fuse_Reactive_Case* __this)
{
    return __this->_used;
}

::app::Fuse::Reactive::Case* List__Fuse_Reactive_Case__get_Item(List__Fuse_Reactive_Case* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::Case*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_Case List__Fuse_Reactive_Case__GetEnumerator(List__Fuse_Reactive_Case* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_Case__New_1(NULL, __this);
}

int List__Fuse_Reactive_Case__IndexOf(List__Fuse_Reactive_Case* __this, ::app::Fuse::Reactive::Case* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Reactive_Case(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::Case*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Reactive_Case__Insert(List__Fuse_Reactive_Case* __this, int index, ::app::Fuse::Reactive::Case* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::Case*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::Case*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::Case*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Reactive_Case* List__Fuse_Reactive_Case__New_1(::uStatic* __this)
{
    List__Fuse_Reactive_Case* inst = (List__Fuse_Reactive_Case*)::uAllocObject(sizeof(List__Fuse_Reactive_Case), List__Fuse_Reactive_Case__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Reactive_Case* List__Fuse_Reactive_Case__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Reactive_Case* inst = (List__Fuse_Reactive_Case*)::uAllocObject(sizeof(List__Fuse_Reactive_Case), List__Fuse_Reactive_Case__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Reactive_Case__Remove(List__Fuse_Reactive_Case* __this, ::app::Fuse::Reactive::Case* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Reactive_Case(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::Case*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Reactive_Case__RemoveAt(List__Fuse_Reactive_Case* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::Case*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::Case*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::Case*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Reactive_Case__set_Item(List__Fuse_Reactive_Case* __this, int index, ::app::Fuse::Reactive::Case* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::Case*>(index) = value;
    __this->_version++;
}

void List__Fuse_Reactive_Case__Sort(List__Fuse_Reactive_Case* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Reactive_Case(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Reactive_Case__ToArray(List__Fuse_Reactive_Case* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Reactive::Case__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Reactive::Case*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::Case*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Reactive_FuseJS_Timer_Time__uType* List__Fuse_Reactive_FuseJS_Timer_Time__typeof()
{
    static ::uStaticStrong<List__Fuse_Reactive_FuseJS_Timer_Time__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Reactive_FuseJS_Timer_Time__uType*)::uAllocClassType(sizeof(List__Fuse_Reactive_FuseJS_Timer_Time__uType), "Uno.Collections.List<Fuse.Reactive.FuseJS.Timer_Time>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Reactive_FuseJS_Timer_Time__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Reactive_FuseJS_Timer_Time__typeof(), offsetof(List__Fuse_Reactive_FuseJS_Timer_Time__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Reactive_FuseJS_Timer_Time, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Reactive_FuseJS_Timer_Time, _data), ::uGetArrayType(::app::Fuse::Reactive::FuseJS::Timer_Time__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Reactive_FuseJS_Timer_Time, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Reactive_FuseJS_Timer_Time, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Reactive_FuseJS_Timer_Time__Add, 0, false, ::app::Fuse::Reactive::FuseJS::Timer_Time__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Reactive_FuseJS_Timer_Time__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Reactive_FuseJS_Timer_Time__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Reactive_FuseJS_Timer_Time__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Reactive_FuseJS_Timer_Time__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Reactive::FuseJS::Timer_Time__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Reactive_FuseJS_Timer_Time__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Reactive_FuseJS_Timer_Time__get_Item, 0, false, ::app::Fuse::Reactive::FuseJS::Timer_Time__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Reactive_FuseJS_Timer_Time__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_FuseJS_Timer_Time__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Reactive_FuseJS_Timer_Time__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Reactive::FuseJS::Timer_Time__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Reactive_FuseJS_Timer_Time__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Reactive::FuseJS::Timer_Time__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Reactive_FuseJS_Timer_Time__New_1, 0, true, List__Fuse_Reactive_FuseJS_Timer_Time__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Reactive_FuseJS_Timer_Time__New_2, 0, true, List__Fuse_Reactive_FuseJS_Timer_Time__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Reactive_FuseJS_Timer_Time__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Reactive::FuseJS::Timer_Time__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Reactive_FuseJS_Timer_Time__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Reactive_FuseJS_Timer_Time__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Reactive::FuseJS::Timer_Time__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Reactive_FuseJS_Timer_Time__Sort, 0, false, ::app::Uno::Comparison__Fuse_Reactive_FuseJS_Timer_Time__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Reactive_FuseJS_Timer_Time__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Reactive::FuseJS::Timer_Time__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Reactive_FuseJS_Timer_Time__GetEnumerator_boxed(List__Fuse_Reactive_FuseJS_Timer_Time* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_FuseJS_Timer_Time__typeof(), __this->GetEnumerator());
}

void List__Fuse_Reactive_FuseJS_Timer_Time___ObjInit(List__Fuse_Reactive_FuseJS_Timer_Time* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Reactive_FuseJS_Timer_Time___ObjInit_1(List__Fuse_Reactive_FuseJS_Timer_Time* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Reactive::FuseJS::Timer_Time__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Reactive_FuseJS_Timer_Time__Add(List__Fuse_Reactive_FuseJS_Timer_Time* __this, ::app::Fuse::Reactive::FuseJS::Timer_Time* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Reactive_FuseJS_Timer_Time__AddRange(List__Fuse_Reactive_FuseJS_Timer_Time* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Reactive_FuseJS_Timer_Time::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Reactive::FuseJS::Timer_Time* i = ::app::Uno::Collections::IEnumerator__Fuse_Reactive_FuseJS_Timer_Time::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Reactive_FuseJS_Timer_Time__BoundsCheck(List__Fuse_Reactive_FuseJS_Timer_Time* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Reactive_FuseJS_Timer_Time__Clear(List__Fuse_Reactive_FuseJS_Timer_Time* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Reactive_FuseJS_Timer_Time__Contains(List__Fuse_Reactive_FuseJS_Timer_Time* __this, ::app::Fuse::Reactive::FuseJS::Timer_Time* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Reactive_FuseJS_Timer_Time(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Reactive_FuseJS_Timer_Time__EnsureCapacity(List__Fuse_Reactive_FuseJS_Timer_Time* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Reactive::FuseJS::Timer_Time__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Reactive::FuseJS::Timer_Time__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Reactive_FuseJS_Timer_Time__get_Count(List__Fuse_Reactive_FuseJS_Timer_Time* __this)
{
    return __this->_used;
}

::app::Fuse::Reactive::FuseJS::Timer_Time* List__Fuse_Reactive_FuseJS_Timer_Time__get_Item(List__Fuse_Reactive_FuseJS_Timer_Time* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_FuseJS_Timer_Time List__Fuse_Reactive_FuseJS_Timer_Time__GetEnumerator(List__Fuse_Reactive_FuseJS_Timer_Time* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_FuseJS_Timer_Time__New_1(NULL, __this);
}

int List__Fuse_Reactive_FuseJS_Timer_Time__IndexOf(List__Fuse_Reactive_FuseJS_Timer_Time* __this, ::app::Fuse::Reactive::FuseJS::Timer_Time* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Reactive_FuseJS_Timer_Time(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Reactive_FuseJS_Timer_Time__Insert(List__Fuse_Reactive_FuseJS_Timer_Time* __this, int index, ::app::Fuse::Reactive::FuseJS::Timer_Time* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Reactive_FuseJS_Timer_Time* List__Fuse_Reactive_FuseJS_Timer_Time__New_1(::uStatic* __this)
{
    List__Fuse_Reactive_FuseJS_Timer_Time* inst = (List__Fuse_Reactive_FuseJS_Timer_Time*)::uAllocObject(sizeof(List__Fuse_Reactive_FuseJS_Timer_Time), List__Fuse_Reactive_FuseJS_Timer_Time__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Reactive_FuseJS_Timer_Time* List__Fuse_Reactive_FuseJS_Timer_Time__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Reactive_FuseJS_Timer_Time* inst = (List__Fuse_Reactive_FuseJS_Timer_Time*)::uAllocObject(sizeof(List__Fuse_Reactive_FuseJS_Timer_Time), List__Fuse_Reactive_FuseJS_Timer_Time__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Reactive_FuseJS_Timer_Time__Remove(List__Fuse_Reactive_FuseJS_Timer_Time* __this, ::app::Fuse::Reactive::FuseJS::Timer_Time* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Reactive_FuseJS_Timer_Time(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Reactive_FuseJS_Timer_Time__RemoveAt(List__Fuse_Reactive_FuseJS_Timer_Time* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Reactive_FuseJS_Timer_Time__set_Item(List__Fuse_Reactive_FuseJS_Timer_Time* __this, int index, ::app::Fuse::Reactive::FuseJS::Timer_Time* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(index) = value;
    __this->_version++;
}

void List__Fuse_Reactive_FuseJS_Timer_Time__Sort(List__Fuse_Reactive_FuseJS_Timer_Time* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Reactive_FuseJS_Timer_Time(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Reactive_FuseJS_Timer_Time__ToArray(List__Fuse_Reactive_FuseJS_Timer_Time* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Reactive::FuseJS::Timer_Time__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::FuseJS::Timer_Time*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Reactive_JavaScript__uType* List__Fuse_Reactive_JavaScript__typeof()
{
    static ::uStaticStrong<List__Fuse_Reactive_JavaScript__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Reactive_JavaScript__uType*)::uAllocClassType(sizeof(List__Fuse_Reactive_JavaScript__uType), "Uno.Collections.List<Fuse.Reactive.JavaScript>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Reactive_JavaScript__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Reactive_JavaScript__typeof(), offsetof(List__Fuse_Reactive_JavaScript__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Reactive_JavaScript, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Reactive_JavaScript, _data), ::uGetArrayType(::app::Fuse::Reactive::JavaScript__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Reactive_JavaScript, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Reactive_JavaScript, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Reactive_JavaScript__Add, 0, false, ::app::Fuse::Reactive::JavaScript__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Reactive_JavaScript__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Reactive_JavaScript__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Reactive_JavaScript__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Reactive_JavaScript__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Reactive::JavaScript__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Reactive_JavaScript__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Reactive_JavaScript__get_Item, 0, false, ::app::Fuse::Reactive::JavaScript__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Reactive_JavaScript__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_JavaScript__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Reactive_JavaScript__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Reactive::JavaScript__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Reactive_JavaScript__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Reactive::JavaScript__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Reactive_JavaScript__New_1, 0, true, List__Fuse_Reactive_JavaScript__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Reactive_JavaScript__New_2, 0, true, List__Fuse_Reactive_JavaScript__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Reactive_JavaScript__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Reactive::JavaScript__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Reactive_JavaScript__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Reactive_JavaScript__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Reactive::JavaScript__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Reactive_JavaScript__Sort, 0, false, ::app::Uno::Comparison__Fuse_Reactive_JavaScript__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Reactive_JavaScript__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Reactive::JavaScript__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Reactive_JavaScript__GetEnumerator_boxed(List__Fuse_Reactive_JavaScript* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_JavaScript__typeof(), __this->GetEnumerator());
}

void List__Fuse_Reactive_JavaScript___ObjInit(List__Fuse_Reactive_JavaScript* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Reactive_JavaScript___ObjInit_1(List__Fuse_Reactive_JavaScript* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Reactive::JavaScript__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Reactive_JavaScript__Add(List__Fuse_Reactive_JavaScript* __this, ::app::Fuse::Reactive::JavaScript* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::JavaScript*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Reactive_JavaScript__AddRange(List__Fuse_Reactive_JavaScript* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Reactive_JavaScript::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Reactive::JavaScript* i = ::app::Uno::Collections::IEnumerator__Fuse_Reactive_JavaScript::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Reactive_JavaScript__BoundsCheck(List__Fuse_Reactive_JavaScript* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Reactive_JavaScript__Clear(List__Fuse_Reactive_JavaScript* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Reactive_JavaScript__Contains(List__Fuse_Reactive_JavaScript* __this, ::app::Fuse::Reactive::JavaScript* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Reactive_JavaScript(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::JavaScript*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Reactive_JavaScript__EnsureCapacity(List__Fuse_Reactive_JavaScript* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Reactive::JavaScript__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Reactive::JavaScript__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Reactive::JavaScript*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::JavaScript*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Reactive_JavaScript__get_Count(List__Fuse_Reactive_JavaScript* __this)
{
    return __this->_used;
}

::app::Fuse::Reactive::JavaScript* List__Fuse_Reactive_JavaScript__get_Item(List__Fuse_Reactive_JavaScript* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::JavaScript*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_JavaScript List__Fuse_Reactive_JavaScript__GetEnumerator(List__Fuse_Reactive_JavaScript* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Reactive_JavaScript__New_1(NULL, __this);
}

int List__Fuse_Reactive_JavaScript__IndexOf(List__Fuse_Reactive_JavaScript* __this, ::app::Fuse::Reactive::JavaScript* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Reactive_JavaScript(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::JavaScript*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Reactive_JavaScript__Insert(List__Fuse_Reactive_JavaScript* __this, int index, ::app::Fuse::Reactive::JavaScript* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::JavaScript*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::JavaScript*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::JavaScript*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Reactive_JavaScript* List__Fuse_Reactive_JavaScript__New_1(::uStatic* __this)
{
    List__Fuse_Reactive_JavaScript* inst = (List__Fuse_Reactive_JavaScript*)::uAllocObject(sizeof(List__Fuse_Reactive_JavaScript), List__Fuse_Reactive_JavaScript__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Reactive_JavaScript* List__Fuse_Reactive_JavaScript__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Reactive_JavaScript* inst = (List__Fuse_Reactive_JavaScript*)::uAllocObject(sizeof(List__Fuse_Reactive_JavaScript), List__Fuse_Reactive_JavaScript__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Reactive_JavaScript__Remove(List__Fuse_Reactive_JavaScript* __this, ::app::Fuse::Reactive::JavaScript* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Reactive_JavaScript(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::JavaScript*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Reactive_JavaScript__RemoveAt(List__Fuse_Reactive_JavaScript* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::JavaScript*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::JavaScript*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::JavaScript*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Reactive_JavaScript__set_Item(List__Fuse_Reactive_JavaScript* __this, int index, ::app::Fuse::Reactive::JavaScript* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Reactive::JavaScript*>(index) = value;
    __this->_version++;
}

void List__Fuse_Reactive_JavaScript__Sort(List__Fuse_Reactive_JavaScript* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Reactive_JavaScript(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Reactive_JavaScript__ToArray(List__Fuse_Reactive_JavaScript* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Reactive::JavaScript__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Reactive::JavaScript*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Reactive::JavaScript*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_RenderTargetEntry__uType* List__Fuse_RenderTargetEntry__typeof()
{
    static ::uStaticStrong<List__Fuse_RenderTargetEntry__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_RenderTargetEntry__uType*)::uAllocClassType(sizeof(List__Fuse_RenderTargetEntry__uType), "Uno.Collections.List<Fuse.RenderTargetEntry>", false, 3, 1, 0);

    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Fuse_RenderTargetEntry__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Fuse::RenderTargetEntry*(*)(void*, int))List__Fuse_RenderTargetEntry__get_Item;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_RenderTargetEntry__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_RenderTargetEntry__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_RenderTargetEntry__typeof(), offsetof(List__Fuse_RenderTargetEntry__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_RenderTargetEntry__typeof(), offsetof(List__Fuse_RenderTargetEntry__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_RenderTargetEntry__typeof(), offsetof(List__Fuse_RenderTargetEntry__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_RenderTargetEntry, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_RenderTargetEntry, _data), ::uGetArrayType(::app::Fuse::RenderTargetEntry__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_RenderTargetEntry, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_RenderTargetEntry, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_RenderTargetEntry__Add, 0, false, ::app::Fuse::RenderTargetEntry__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_RenderTargetEntry__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_RenderTargetEntry__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_RenderTargetEntry__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_RenderTargetEntry__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::RenderTargetEntry__typeof()),
        ::uNewFunction("get_Count", List__Fuse_RenderTargetEntry__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_RenderTargetEntry__get_Item, 0, false, ::app::Fuse::RenderTargetEntry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_RenderTargetEntry__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_RenderTargetEntry__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_RenderTargetEntry__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::RenderTargetEntry__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_RenderTargetEntry__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::RenderTargetEntry__typeof()),
        ::uNewFunction(".ctor", List__Fuse_RenderTargetEntry__New_1, 0, true, List__Fuse_RenderTargetEntry__typeof()),
        ::uNewFunction(".ctor", List__Fuse_RenderTargetEntry__New_2, 0, true, List__Fuse_RenderTargetEntry__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_RenderTargetEntry__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::RenderTargetEntry__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_RenderTargetEntry__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_RenderTargetEntry__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::RenderTargetEntry__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_RenderTargetEntry__Sort, 0, false, ::app::Uno::Comparison__Fuse_RenderTargetEntry__typeof()),
        ::uNewFunction("ToArray", List__Fuse_RenderTargetEntry__ToArray, 0, false, ::uGetArrayType(::app::Fuse::RenderTargetEntry__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_RenderTargetEntry__GetEnumerator_boxed(List__Fuse_RenderTargetEntry* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_RenderTargetEntry__typeof(), __this->GetEnumerator());
}

void List__Fuse_RenderTargetEntry___ObjInit(List__Fuse_RenderTargetEntry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_RenderTargetEntry___ObjInit_1(List__Fuse_RenderTargetEntry* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::RenderTargetEntry__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_RenderTargetEntry__Add(List__Fuse_RenderTargetEntry* __this, ::app::Fuse::RenderTargetEntry* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::RenderTargetEntry*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_RenderTargetEntry__AddRange(List__Fuse_RenderTargetEntry* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_RenderTargetEntry::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::RenderTargetEntry* i = ::app::Uno::Collections::IEnumerator__Fuse_RenderTargetEntry::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_RenderTargetEntry__BoundsCheck(List__Fuse_RenderTargetEntry* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_RenderTargetEntry__Clear(List__Fuse_RenderTargetEntry* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_RenderTargetEntry__Contains(List__Fuse_RenderTargetEntry* __this, ::app::Fuse::RenderTargetEntry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_RenderTargetEntry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::RenderTargetEntry*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_RenderTargetEntry__EnsureCapacity(List__Fuse_RenderTargetEntry* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::RenderTargetEntry__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::RenderTargetEntry__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::RenderTargetEntry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::RenderTargetEntry*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_RenderTargetEntry__get_Count(List__Fuse_RenderTargetEntry* __this)
{
    return __this->_used;
}

::app::Fuse::RenderTargetEntry* List__Fuse_RenderTargetEntry__get_Item(List__Fuse_RenderTargetEntry* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::RenderTargetEntry*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_RenderTargetEntry List__Fuse_RenderTargetEntry__GetEnumerator(List__Fuse_RenderTargetEntry* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_RenderTargetEntry__New_1(NULL, __this);
}

int List__Fuse_RenderTargetEntry__IndexOf(List__Fuse_RenderTargetEntry* __this, ::app::Fuse::RenderTargetEntry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_RenderTargetEntry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::RenderTargetEntry*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_RenderTargetEntry__Insert(List__Fuse_RenderTargetEntry* __this, int index, ::app::Fuse::RenderTargetEntry* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::RenderTargetEntry*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::RenderTargetEntry*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::RenderTargetEntry*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_RenderTargetEntry* List__Fuse_RenderTargetEntry__New_1(::uStatic* __this)
{
    List__Fuse_RenderTargetEntry* inst = (List__Fuse_RenderTargetEntry*)::uAllocObject(sizeof(List__Fuse_RenderTargetEntry), List__Fuse_RenderTargetEntry__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_RenderTargetEntry* List__Fuse_RenderTargetEntry__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_RenderTargetEntry* inst = (List__Fuse_RenderTargetEntry*)::uAllocObject(sizeof(List__Fuse_RenderTargetEntry), List__Fuse_RenderTargetEntry__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_RenderTargetEntry__Remove(List__Fuse_RenderTargetEntry* __this, ::app::Fuse::RenderTargetEntry* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_RenderTargetEntry(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::RenderTargetEntry*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_RenderTargetEntry__RemoveAt(List__Fuse_RenderTargetEntry* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::RenderTargetEntry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::RenderTargetEntry*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::RenderTargetEntry*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_RenderTargetEntry__set_Item(List__Fuse_RenderTargetEntry* __this, int index, ::app::Fuse::RenderTargetEntry* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::RenderTargetEntry*>(index) = value;
    __this->_version++;
}

void List__Fuse_RenderTargetEntry__Sort(List__Fuse_RenderTargetEntry* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_RenderTargetEntry(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_RenderTargetEntry__ToArray(List__Fuse_RenderTargetEntry* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::RenderTargetEntry__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::RenderTargetEntry*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::RenderTargetEntry*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Resources_ImageSource__uType* List__Fuse_Resources_ImageSource__typeof()
{
    static ::uStaticStrong<List__Fuse_Resources_ImageSource__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Resources_ImageSource__uType*)::uAllocClassType(sizeof(List__Fuse_Resources_ImageSource__uType), "Uno.Collections.List<Fuse.Resources.ImageSource>", false, 3, 1, 0);

    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Resources::ImageSource*))List__Fuse_Resources_ImageSource__Add;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Resources_ImageSource__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Resources_ImageSource__typeof(), offsetof(List__Fuse_Resources_ImageSource__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Resources_ImageSource__typeof(), offsetof(List__Fuse_Resources_ImageSource__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Resources_ImageSource__typeof(), offsetof(List__Fuse_Resources_ImageSource__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Resources_ImageSource, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Resources_ImageSource, _data), ::uGetArrayType(::app::Fuse::Resources::ImageSource__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Resources_ImageSource, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Resources_ImageSource, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Resources_ImageSource__Add, 0, false, ::app::Fuse::Resources::ImageSource__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Resources_ImageSource__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Resources_ImageSource__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Resources_ImageSource__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Resources_ImageSource__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Resources::ImageSource__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Resources_ImageSource__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Resources_ImageSource__get_Item, 0, false, ::app::Fuse::Resources::ImageSource__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Resources_ImageSource__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Resources_ImageSource__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Resources_ImageSource__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Resources::ImageSource__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Resources_ImageSource__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Resources::ImageSource__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Resources_ImageSource__New_1, 0, true, List__Fuse_Resources_ImageSource__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Resources_ImageSource__New_2, 0, true, List__Fuse_Resources_ImageSource__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Resources_ImageSource__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Resources::ImageSource__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Resources_ImageSource__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Resources_ImageSource__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Resources::ImageSource__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Resources_ImageSource__Sort, 0, false, ::app::Uno::Comparison__Fuse_Resources_ImageSource__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Resources_ImageSource__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Resources::ImageSource__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Resources_ImageSource__GetEnumerator_boxed(List__Fuse_Resources_ImageSource* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Resources_ImageSource__typeof(), __this->GetEnumerator());
}

void List__Fuse_Resources_ImageSource___ObjInit(List__Fuse_Resources_ImageSource* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Resources_ImageSource___ObjInit_1(List__Fuse_Resources_ImageSource* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Resources::ImageSource__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Resources_ImageSource__Add(List__Fuse_Resources_ImageSource* __this, ::app::Fuse::Resources::ImageSource* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Resources::ImageSource*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Resources_ImageSource__AddRange(List__Fuse_Resources_ImageSource* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Resources_ImageSource::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Resources::ImageSource* i = ::app::Uno::Collections::IEnumerator__Fuse_Resources_ImageSource::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Resources_ImageSource__BoundsCheck(List__Fuse_Resources_ImageSource* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Resources_ImageSource__Clear(List__Fuse_Resources_ImageSource* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Resources_ImageSource__Contains(List__Fuse_Resources_ImageSource* __this, ::app::Fuse::Resources::ImageSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Resources_ImageSource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Resources::ImageSource*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Resources_ImageSource__EnsureCapacity(List__Fuse_Resources_ImageSource* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Resources::ImageSource__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Resources::ImageSource__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Resources::ImageSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Resources::ImageSource*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Resources_ImageSource__get_Count(List__Fuse_Resources_ImageSource* __this)
{
    return __this->_used;
}

::app::Fuse::Resources::ImageSource* List__Fuse_Resources_ImageSource__get_Item(List__Fuse_Resources_ImageSource* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Resources::ImageSource*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Resources_ImageSource List__Fuse_Resources_ImageSource__GetEnumerator(List__Fuse_Resources_ImageSource* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Resources_ImageSource__New_1(NULL, __this);
}

int List__Fuse_Resources_ImageSource__IndexOf(List__Fuse_Resources_ImageSource* __this, ::app::Fuse::Resources::ImageSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Resources_ImageSource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Resources::ImageSource*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Resources_ImageSource__Insert(List__Fuse_Resources_ImageSource* __this, int index, ::app::Fuse::Resources::ImageSource* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Resources::ImageSource*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Resources::ImageSource*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Resources::ImageSource*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Resources_ImageSource* List__Fuse_Resources_ImageSource__New_1(::uStatic* __this)
{
    List__Fuse_Resources_ImageSource* inst = (List__Fuse_Resources_ImageSource*)::uAllocObject(sizeof(List__Fuse_Resources_ImageSource), List__Fuse_Resources_ImageSource__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Resources_ImageSource* List__Fuse_Resources_ImageSource__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Resources_ImageSource* inst = (List__Fuse_Resources_ImageSource*)::uAllocObject(sizeof(List__Fuse_Resources_ImageSource), List__Fuse_Resources_ImageSource__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Resources_ImageSource__Remove(List__Fuse_Resources_ImageSource* __this, ::app::Fuse::Resources::ImageSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Resources_ImageSource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Resources::ImageSource*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Resources_ImageSource__RemoveAt(List__Fuse_Resources_ImageSource* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Resources::ImageSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Resources::ImageSource*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Resources::ImageSource*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Resources_ImageSource__set_Item(List__Fuse_Resources_ImageSource* __this, int index, ::app::Fuse::Resources::ImageSource* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Resources::ImageSource*>(index) = value;
    __this->_version++;
}

void List__Fuse_Resources_ImageSource__Sort(List__Fuse_Resources_ImageSource* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Resources_ImageSource(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Resources_ImageSource__ToArray(List__Fuse_Resources_ImageSource* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Resources::ImageSource__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Resources::ImageSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Resources::ImageSource*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Resources_IMemoryResource__uType* List__Fuse_Resources_IMemoryResource__typeof()
{
    static ::uStaticStrong<List__Fuse_Resources_IMemoryResource__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Resources_IMemoryResource__uType*)::uAllocClassType(sizeof(List__Fuse_Resources_IMemoryResource__uType), "Uno.Collections.List<Fuse.Resources.IMemoryResource>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Resources_IMemoryResource__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Resources_IMemoryResource__typeof(), offsetof(List__Fuse_Resources_IMemoryResource__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Resources_IMemoryResource, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Resources_IMemoryResource, _data), ::uGetArrayType(::app::Fuse::Resources::IMemoryResource__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Resources_IMemoryResource, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Resources_IMemoryResource, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Resources_IMemoryResource__Add, 0, false, ::app::Fuse::Resources::IMemoryResource__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Resources_IMemoryResource__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Resources_IMemoryResource__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Resources_IMemoryResource__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Resources_IMemoryResource__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Resources::IMemoryResource__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Resources_IMemoryResource__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Resources_IMemoryResource__get_Item, 0, false, ::app::Fuse::Resources::IMemoryResource__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Resources_IMemoryResource__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Resources_IMemoryResource__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Resources_IMemoryResource__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Resources::IMemoryResource__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Resources_IMemoryResource__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Resources::IMemoryResource__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Resources_IMemoryResource__New_1, 0, true, List__Fuse_Resources_IMemoryResource__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Resources_IMemoryResource__New_2, 0, true, List__Fuse_Resources_IMemoryResource__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Resources_IMemoryResource__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Resources::IMemoryResource__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Resources_IMemoryResource__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Resources_IMemoryResource__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Resources::IMemoryResource__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Resources_IMemoryResource__Sort, 0, false, ::app::Uno::Comparison__Fuse_Resources_IMemoryResource__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Resources_IMemoryResource__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Resources::IMemoryResource__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Resources_IMemoryResource__GetEnumerator_boxed(List__Fuse_Resources_IMemoryResource* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Resources_IMemoryResource__typeof(), __this->GetEnumerator());
}

void List__Fuse_Resources_IMemoryResource___ObjInit(List__Fuse_Resources_IMemoryResource* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Resources_IMemoryResource___ObjInit_1(List__Fuse_Resources_IMemoryResource* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Resources::IMemoryResource__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Resources_IMemoryResource__Add(List__Fuse_Resources_IMemoryResource* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Resources_IMemoryResource__AddRange(List__Fuse_Resources_IMemoryResource* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Resources_IMemoryResource::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Fuse_Resources_IMemoryResource::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Resources_IMemoryResource__BoundsCheck(List__Fuse_Resources_IMemoryResource* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Resources_IMemoryResource__Clear(List__Fuse_Resources_IMemoryResource* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Resources_IMemoryResource__Contains(List__Fuse_Resources_IMemoryResource* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Resources_IMemoryResource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Resources_IMemoryResource__EnsureCapacity(List__Fuse_Resources_IMemoryResource* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Resources::IMemoryResource__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Resources::IMemoryResource__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Resources_IMemoryResource__get_Count(List__Fuse_Resources_IMemoryResource* __this)
{
    return __this->_used;
}

::uObject* List__Fuse_Resources_IMemoryResource__get_Item(List__Fuse_Resources_IMemoryResource* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Resources_IMemoryResource List__Fuse_Resources_IMemoryResource__GetEnumerator(List__Fuse_Resources_IMemoryResource* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Resources_IMemoryResource__New_1(NULL, __this);
}

int List__Fuse_Resources_IMemoryResource__IndexOf(List__Fuse_Resources_IMemoryResource* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Resources_IMemoryResource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Resources_IMemoryResource__Insert(List__Fuse_Resources_IMemoryResource* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Resources_IMemoryResource* List__Fuse_Resources_IMemoryResource__New_1(::uStatic* __this)
{
    List__Fuse_Resources_IMemoryResource* inst = (List__Fuse_Resources_IMemoryResource*)::uAllocObject(sizeof(List__Fuse_Resources_IMemoryResource), List__Fuse_Resources_IMemoryResource__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Resources_IMemoryResource* List__Fuse_Resources_IMemoryResource__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Resources_IMemoryResource* inst = (List__Fuse_Resources_IMemoryResource*)::uAllocObject(sizeof(List__Fuse_Resources_IMemoryResource), List__Fuse_Resources_IMemoryResource__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Resources_IMemoryResource__Remove(List__Fuse_Resources_IMemoryResource* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Resources_IMemoryResource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Resources_IMemoryResource__RemoveAt(List__Fuse_Resources_IMemoryResource* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Resources_IMemoryResource__set_Item(List__Fuse_Resources_IMemoryResource* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Fuse_Resources_IMemoryResource__Sort(List__Fuse_Resources_IMemoryResource* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Resources_IMemoryResource(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Resources_IMemoryResource__ToArray(List__Fuse_Resources_IMemoryResource* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Resources::IMemoryResource__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Resources_ISoftDisposable__uType* List__Fuse_Resources_ISoftDisposable__typeof()
{
    static ::uStaticStrong<List__Fuse_Resources_ISoftDisposable__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Resources_ISoftDisposable__uType*)::uAllocClassType(sizeof(List__Fuse_Resources_ISoftDisposable__uType), "Uno.Collections.List<Fuse.Resources.ISoftDisposable>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Resources_ISoftDisposable__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Resources_ISoftDisposable__typeof(), offsetof(List__Fuse_Resources_ISoftDisposable__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Resources_ISoftDisposable, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Resources_ISoftDisposable, _data), ::uGetArrayType(::app::Fuse::Resources::ISoftDisposable__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Resources_ISoftDisposable, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Resources_ISoftDisposable, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Resources_ISoftDisposable__Add, 0, false, ::app::Fuse::Resources::ISoftDisposable__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Resources_ISoftDisposable__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Resources_ISoftDisposable__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Resources_ISoftDisposable__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Resources_ISoftDisposable__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Resources::ISoftDisposable__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Resources_ISoftDisposable__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Resources_ISoftDisposable__get_Item, 0, false, ::app::Fuse::Resources::ISoftDisposable__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Resources_ISoftDisposable__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Resources_ISoftDisposable__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Resources_ISoftDisposable__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Resources::ISoftDisposable__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Resources_ISoftDisposable__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Resources::ISoftDisposable__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Resources_ISoftDisposable__New_1, 0, true, List__Fuse_Resources_ISoftDisposable__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Resources_ISoftDisposable__New_2, 0, true, List__Fuse_Resources_ISoftDisposable__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Resources_ISoftDisposable__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Resources::ISoftDisposable__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Resources_ISoftDisposable__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Resources_ISoftDisposable__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Resources::ISoftDisposable__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Resources_ISoftDisposable__Sort, 0, false, ::app::Uno::Comparison__Fuse_Resources_ISoftDisposable__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Resources_ISoftDisposable__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Resources::ISoftDisposable__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Resources_ISoftDisposable__GetEnumerator_boxed(List__Fuse_Resources_ISoftDisposable* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Resources_ISoftDisposable__typeof(), __this->GetEnumerator());
}

void List__Fuse_Resources_ISoftDisposable___ObjInit(List__Fuse_Resources_ISoftDisposable* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Resources_ISoftDisposable___ObjInit_1(List__Fuse_Resources_ISoftDisposable* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Resources::ISoftDisposable__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Resources_ISoftDisposable__Add(List__Fuse_Resources_ISoftDisposable* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Resources_ISoftDisposable__AddRange(List__Fuse_Resources_ISoftDisposable* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Resources_ISoftDisposable::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Fuse_Resources_ISoftDisposable::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Resources_ISoftDisposable__BoundsCheck(List__Fuse_Resources_ISoftDisposable* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Resources_ISoftDisposable__Clear(List__Fuse_Resources_ISoftDisposable* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Resources_ISoftDisposable__Contains(List__Fuse_Resources_ISoftDisposable* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Resources_ISoftDisposable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Resources_ISoftDisposable__EnsureCapacity(List__Fuse_Resources_ISoftDisposable* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Resources::ISoftDisposable__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Resources::ISoftDisposable__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Resources_ISoftDisposable__get_Count(List__Fuse_Resources_ISoftDisposable* __this)
{
    return __this->_used;
}

::uObject* List__Fuse_Resources_ISoftDisposable__get_Item(List__Fuse_Resources_ISoftDisposable* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Resources_ISoftDisposable List__Fuse_Resources_ISoftDisposable__GetEnumerator(List__Fuse_Resources_ISoftDisposable* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Resources_ISoftDisposable__New_1(NULL, __this);
}

int List__Fuse_Resources_ISoftDisposable__IndexOf(List__Fuse_Resources_ISoftDisposable* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Resources_ISoftDisposable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Resources_ISoftDisposable__Insert(List__Fuse_Resources_ISoftDisposable* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Resources_ISoftDisposable* List__Fuse_Resources_ISoftDisposable__New_1(::uStatic* __this)
{
    List__Fuse_Resources_ISoftDisposable* inst = (List__Fuse_Resources_ISoftDisposable*)::uAllocObject(sizeof(List__Fuse_Resources_ISoftDisposable), List__Fuse_Resources_ISoftDisposable__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Resources_ISoftDisposable* List__Fuse_Resources_ISoftDisposable__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Resources_ISoftDisposable* inst = (List__Fuse_Resources_ISoftDisposable*)::uAllocObject(sizeof(List__Fuse_Resources_ISoftDisposable), List__Fuse_Resources_ISoftDisposable__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Resources_ISoftDisposable__Remove(List__Fuse_Resources_ISoftDisposable* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Resources_ISoftDisposable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Resources_ISoftDisposable__RemoveAt(List__Fuse_Resources_ISoftDisposable* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Resources_ISoftDisposable__set_Item(List__Fuse_Resources_ISoftDisposable* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Fuse_Resources_ISoftDisposable__Sort(List__Fuse_Resources_ISoftDisposable* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Resources_ISoftDisposable(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Resources_ISoftDisposable__ToArray(List__Fuse_Resources_ISoftDisposable* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Resources::ISoftDisposable__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Scripting_INameListener__uType* List__Fuse_Scripting_INameListener__typeof()
{
    static ::uStaticStrong<List__Fuse_Scripting_INameListener__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Scripting_INameListener__uType*)::uAllocClassType(sizeof(List__Fuse_Scripting_INameListener__uType), "Uno.Collections.List<Fuse.Scripting.INameListener>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Scripting_INameListener__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Scripting_INameListener__typeof(), offsetof(List__Fuse_Scripting_INameListener__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Scripting_INameListener, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Scripting_INameListener, _data), ::uGetArrayType(::app::Fuse::Scripting::INameListener__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Scripting_INameListener, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Scripting_INameListener, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Scripting_INameListener__Add, 0, false, ::app::Fuse::Scripting::INameListener__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Scripting_INameListener__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Scripting_INameListener__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Scripting_INameListener__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Scripting_INameListener__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Scripting::INameListener__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Scripting_INameListener__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Scripting_INameListener__get_Item, 0, false, ::app::Fuse::Scripting::INameListener__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Scripting_INameListener__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Scripting_INameListener__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Scripting_INameListener__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Scripting::INameListener__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Scripting_INameListener__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Scripting::INameListener__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Scripting_INameListener__New_1, 0, true, List__Fuse_Scripting_INameListener__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Scripting_INameListener__New_2, 0, true, List__Fuse_Scripting_INameListener__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Scripting_INameListener__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Scripting::INameListener__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Scripting_INameListener__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Scripting_INameListener__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Scripting::INameListener__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Scripting_INameListener__Sort, 0, false, ::app::Uno::Comparison__Fuse_Scripting_INameListener__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Scripting_INameListener__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Scripting::INameListener__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Scripting_INameListener__GetEnumerator_boxed(List__Fuse_Scripting_INameListener* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Scripting_INameListener__typeof(), __this->GetEnumerator());
}

void List__Fuse_Scripting_INameListener___ObjInit(List__Fuse_Scripting_INameListener* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Scripting_INameListener___ObjInit_1(List__Fuse_Scripting_INameListener* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Scripting::INameListener__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Scripting_INameListener__Add(List__Fuse_Scripting_INameListener* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Scripting_INameListener__AddRange(List__Fuse_Scripting_INameListener* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Scripting_INameListener::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Fuse_Scripting_INameListener::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Scripting_INameListener__BoundsCheck(List__Fuse_Scripting_INameListener* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Scripting_INameListener__Clear(List__Fuse_Scripting_INameListener* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Scripting_INameListener__Contains(List__Fuse_Scripting_INameListener* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Scripting_INameListener(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Scripting_INameListener__EnsureCapacity(List__Fuse_Scripting_INameListener* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Scripting::INameListener__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Scripting::INameListener__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Scripting_INameListener__get_Count(List__Fuse_Scripting_INameListener* __this)
{
    return __this->_used;
}

::uObject* List__Fuse_Scripting_INameListener__get_Item(List__Fuse_Scripting_INameListener* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Scripting_INameListener List__Fuse_Scripting_INameListener__GetEnumerator(List__Fuse_Scripting_INameListener* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Scripting_INameListener__New_1(NULL, __this);
}

int List__Fuse_Scripting_INameListener__IndexOf(List__Fuse_Scripting_INameListener* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Scripting_INameListener(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Scripting_INameListener__Insert(List__Fuse_Scripting_INameListener* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Scripting_INameListener* List__Fuse_Scripting_INameListener__New_1(::uStatic* __this)
{
    List__Fuse_Scripting_INameListener* inst = (List__Fuse_Scripting_INameListener*)::uAllocObject(sizeof(List__Fuse_Scripting_INameListener), List__Fuse_Scripting_INameListener__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Scripting_INameListener* List__Fuse_Scripting_INameListener__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Scripting_INameListener* inst = (List__Fuse_Scripting_INameListener*)::uAllocObject(sizeof(List__Fuse_Scripting_INameListener), List__Fuse_Scripting_INameListener__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Scripting_INameListener__Remove(List__Fuse_Scripting_INameListener* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Scripting_INameListener(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Scripting_INameListener__RemoveAt(List__Fuse_Scripting_INameListener* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Scripting_INameListener__set_Item(List__Fuse_Scripting_INameListener* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Fuse_Scripting_INameListener__Sort(List__Fuse_Scripting_INameListener* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Scripting_INameListener(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Scripting_INameListener__ToArray(List__Fuse_Scripting_INameListener* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Scripting::INameListener__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Scripting_NativeMember__uType* List__Fuse_Scripting_NativeMember__typeof()
{
    static ::uStaticStrong<List__Fuse_Scripting_NativeMember__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Scripting_NativeMember__uType*)::uAllocClassType(sizeof(List__Fuse_Scripting_NativeMember__uType), "Uno.Collections.List<Fuse.Scripting.NativeMember>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Scripting_NativeMember__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Scripting_NativeMember__typeof(), offsetof(List__Fuse_Scripting_NativeMember__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Scripting_NativeMember, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Scripting_NativeMember, _data), ::uGetArrayType(::app::Fuse::Scripting::NativeMember__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Scripting_NativeMember, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Scripting_NativeMember, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Scripting_NativeMember__Add, 0, false, ::app::Fuse::Scripting::NativeMember__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Scripting_NativeMember__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Scripting_NativeMember__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Scripting_NativeMember__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Scripting_NativeMember__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Scripting::NativeMember__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Scripting_NativeMember__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Scripting_NativeMember__get_Item, 0, false, ::app::Fuse::Scripting::NativeMember__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Scripting_NativeMember__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Scripting_NativeMember__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Scripting_NativeMember__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Scripting::NativeMember__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Scripting_NativeMember__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Scripting::NativeMember__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Scripting_NativeMember__New_1, 0, true, List__Fuse_Scripting_NativeMember__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Scripting_NativeMember__New_2, 0, true, List__Fuse_Scripting_NativeMember__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Scripting_NativeMember__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Scripting::NativeMember__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Scripting_NativeMember__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Scripting_NativeMember__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Scripting::NativeMember__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Scripting_NativeMember__Sort, 0, false, ::app::Uno::Comparison__Fuse_Scripting_NativeMember__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Scripting_NativeMember__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Scripting::NativeMember__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Scripting_NativeMember__GetEnumerator_boxed(List__Fuse_Scripting_NativeMember* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Scripting_NativeMember__typeof(), __this->GetEnumerator());
}

void List__Fuse_Scripting_NativeMember___ObjInit(List__Fuse_Scripting_NativeMember* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Scripting_NativeMember___ObjInit_1(List__Fuse_Scripting_NativeMember* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Scripting::NativeMember__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Scripting_NativeMember__Add(List__Fuse_Scripting_NativeMember* __this, ::app::Fuse::Scripting::NativeMember* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Scripting::NativeMember*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Scripting_NativeMember__AddRange(List__Fuse_Scripting_NativeMember* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Scripting_NativeMember::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Scripting::NativeMember* i = ::app::Uno::Collections::IEnumerator__Fuse_Scripting_NativeMember::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Scripting_NativeMember__BoundsCheck(List__Fuse_Scripting_NativeMember* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Scripting_NativeMember__Clear(List__Fuse_Scripting_NativeMember* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Scripting_NativeMember__Contains(List__Fuse_Scripting_NativeMember* __this, ::app::Fuse::Scripting::NativeMember* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Scripting_NativeMember(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Scripting::NativeMember*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Scripting_NativeMember__EnsureCapacity(List__Fuse_Scripting_NativeMember* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Scripting::NativeMember__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Scripting::NativeMember__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Scripting::NativeMember*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Scripting::NativeMember*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Scripting_NativeMember__get_Count(List__Fuse_Scripting_NativeMember* __this)
{
    return __this->_used;
}

::app::Fuse::Scripting::NativeMember* List__Fuse_Scripting_NativeMember__get_Item(List__Fuse_Scripting_NativeMember* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Scripting::NativeMember*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Scripting_NativeMember List__Fuse_Scripting_NativeMember__GetEnumerator(List__Fuse_Scripting_NativeMember* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Scripting_NativeMember__New_1(NULL, __this);
}

int List__Fuse_Scripting_NativeMember__IndexOf(List__Fuse_Scripting_NativeMember* __this, ::app::Fuse::Scripting::NativeMember* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Scripting_NativeMember(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Scripting::NativeMember*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Scripting_NativeMember__Insert(List__Fuse_Scripting_NativeMember* __this, int index, ::app::Fuse::Scripting::NativeMember* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Scripting::NativeMember*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Scripting::NativeMember*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Scripting::NativeMember*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Scripting_NativeMember* List__Fuse_Scripting_NativeMember__New_1(::uStatic* __this)
{
    List__Fuse_Scripting_NativeMember* inst = (List__Fuse_Scripting_NativeMember*)::uAllocObject(sizeof(List__Fuse_Scripting_NativeMember), List__Fuse_Scripting_NativeMember__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Scripting_NativeMember* List__Fuse_Scripting_NativeMember__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Scripting_NativeMember* inst = (List__Fuse_Scripting_NativeMember*)::uAllocObject(sizeof(List__Fuse_Scripting_NativeMember), List__Fuse_Scripting_NativeMember__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Scripting_NativeMember__Remove(List__Fuse_Scripting_NativeMember* __this, ::app::Fuse::Scripting::NativeMember* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Scripting_NativeMember(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Scripting::NativeMember*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Scripting_NativeMember__RemoveAt(List__Fuse_Scripting_NativeMember* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Scripting::NativeMember*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Scripting::NativeMember*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Scripting::NativeMember*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Scripting_NativeMember__set_Item(List__Fuse_Scripting_NativeMember* __this, int index, ::app::Fuse::Scripting::NativeMember* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Scripting::NativeMember*>(index) = value;
    __this->_version++;
}

void List__Fuse_Scripting_NativeMember__Sort(List__Fuse_Scripting_NativeMember* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Scripting_NativeMember(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Scripting_NativeMember__ToArray(List__Fuse_Scripting_NativeMember* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Scripting::NativeMember__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Scripting::NativeMember*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Scripting::NativeMember*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Stage__uType* List__Fuse_Stage__typeof()
{
    static ::uStaticStrong<List__Fuse_Stage__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Stage__uType*)::uAllocClassType(sizeof(List__Fuse_Stage__uType), "Uno.Collections.List<Fuse.Stage>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Stage__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_Stage__typeof(), offsetof(List__Fuse_Stage__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Stage, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Stage, _data), ::uGetArrayType(::app::Fuse::Stage__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Stage, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Stage, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Stage__Add, 0, false, ::app::Fuse::Stage__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Stage__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Stage__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Stage__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Stage__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Stage__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Stage__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Stage__get_Item, 0, false, ::app::Fuse::Stage__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Stage__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Stage__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Stage__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Stage__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Stage__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Stage__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Stage__New_1, 0, true, List__Fuse_Stage__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Stage__New_2, 0, true, List__Fuse_Stage__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Stage__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Stage__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Stage__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Stage__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Stage__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Stage__Sort, 0, false, ::app::Uno::Comparison__Fuse_Stage__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Stage__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Stage__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Stage__GetEnumerator_boxed(List__Fuse_Stage* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Stage__typeof(), __this->GetEnumerator());
}

void List__Fuse_Stage___ObjInit(List__Fuse_Stage* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Stage___ObjInit_1(List__Fuse_Stage* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Stage__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Stage__Add(List__Fuse_Stage* __this, ::app::Fuse::Stage* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Stage*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Stage__AddRange(List__Fuse_Stage* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Stage::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Stage* i = ::app::Uno::Collections::IEnumerator__Fuse_Stage::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Stage__BoundsCheck(List__Fuse_Stage* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Stage__Clear(List__Fuse_Stage* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Stage__Contains(List__Fuse_Stage* __this, ::app::Fuse::Stage* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Stage(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Stage*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Stage__EnsureCapacity(List__Fuse_Stage* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Stage__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Stage__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Stage*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Stage*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Stage__get_Count(List__Fuse_Stage* __this)
{
    return __this->_used;
}

::app::Fuse::Stage* List__Fuse_Stage__get_Item(List__Fuse_Stage* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Stage*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Stage List__Fuse_Stage__GetEnumerator(List__Fuse_Stage* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Stage__New_1(NULL, __this);
}

int List__Fuse_Stage__IndexOf(List__Fuse_Stage* __this, ::app::Fuse::Stage* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Stage(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Stage*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Stage__Insert(List__Fuse_Stage* __this, int index, ::app::Fuse::Stage* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Stage*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Stage*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Stage*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Stage* List__Fuse_Stage__New_1(::uStatic* __this)
{
    List__Fuse_Stage* inst = (List__Fuse_Stage*)::uAllocObject(sizeof(List__Fuse_Stage), List__Fuse_Stage__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Stage* List__Fuse_Stage__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Stage* inst = (List__Fuse_Stage*)::uAllocObject(sizeof(List__Fuse_Stage), List__Fuse_Stage__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Stage__Remove(List__Fuse_Stage* __this, ::app::Fuse::Stage* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Stage(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Stage*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Stage__RemoveAt(List__Fuse_Stage* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Stage*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Stage*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Stage*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Stage__set_Item(List__Fuse_Stage* __this, int index, ::app::Fuse::Stage* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Stage*>(index) = value;
    __this->_version++;
}

void List__Fuse_Stage__Sort(List__Fuse_Stage* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Stage(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Stage__ToArray(List__Fuse_Stage* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Stage__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Stage*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Stage*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Style__uType* List__Fuse_Style__typeof()
{
    static ::uStaticStrong<List__Fuse_Style__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Style__uType*)::uAllocClassType(sizeof(List__Fuse_Style__uType), "Uno.Collections.List<Fuse.Style>", false, 3, 1, 0);

    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Fuse_Style__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Fuse::Style*(*)(void*, int))List__Fuse_Style__get_Item;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Style*))List__Fuse_Style__Add;
    type->__interface_1.__fp_Remove = (bool(*)(void*, ::app::Fuse::Style*))List__Fuse_Style__Remove;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Style__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Style__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Style__typeof(), offsetof(List__Fuse_Style__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Style__typeof(), offsetof(List__Fuse_Style__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Style__typeof(), offsetof(List__Fuse_Style__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Style, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Style, _data), ::uGetArrayType(::app::Fuse::Style__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Style, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Style, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Style__Add, 0, false, ::app::Fuse::Style__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Style__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Style__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Style__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Style__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Style__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Style__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Style__get_Item, 0, false, ::app::Fuse::Style__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Style__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Style__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Style__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Style__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Style__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Style__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Style__New_1, 0, true, List__Fuse_Style__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Style__New_2, 0, true, List__Fuse_Style__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Style__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Style__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Style__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Style__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Style__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Style__Sort, 0, false, ::app::Uno::Comparison__Fuse_Style__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Style__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Style__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Style__GetEnumerator_boxed(List__Fuse_Style* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Style__typeof(), __this->GetEnumerator());
}

void List__Fuse_Style___ObjInit(List__Fuse_Style* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Style___ObjInit_1(List__Fuse_Style* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Style__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Style__Add(List__Fuse_Style* __this, ::app::Fuse::Style* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Style*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Style__AddRange(List__Fuse_Style* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Style::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Style* i = ::app::Uno::Collections::IEnumerator__Fuse_Style::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Style__BoundsCheck(List__Fuse_Style* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Style__Clear(List__Fuse_Style* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Style__Contains(List__Fuse_Style* __this, ::app::Fuse::Style* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Style(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Style*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Style__EnsureCapacity(List__Fuse_Style* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Style__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Style__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Style*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Style*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Style__get_Count(List__Fuse_Style* __this)
{
    return __this->_used;
}

::app::Fuse::Style* List__Fuse_Style__get_Item(List__Fuse_Style* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Style*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Style List__Fuse_Style__GetEnumerator(List__Fuse_Style* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Style__New_1(NULL, __this);
}

int List__Fuse_Style__IndexOf(List__Fuse_Style* __this, ::app::Fuse::Style* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Style(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Style*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Style__Insert(List__Fuse_Style* __this, int index, ::app::Fuse::Style* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Style*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Style*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Style*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Style* List__Fuse_Style__New_1(::uStatic* __this)
{
    List__Fuse_Style* inst = (List__Fuse_Style*)::uAllocObject(sizeof(List__Fuse_Style), List__Fuse_Style__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Style* List__Fuse_Style__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Style* inst = (List__Fuse_Style*)::uAllocObject(sizeof(List__Fuse_Style), List__Fuse_Style__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Style__Remove(List__Fuse_Style* __this, ::app::Fuse::Style* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Style(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Style*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Style__RemoveAt(List__Fuse_Style* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Style*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Style*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Style*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Style__set_Item(List__Fuse_Style* __this, int index, ::app::Fuse::Style* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Style*>(index) = value;
    __this->_version++;
}

void List__Fuse_Style__Sort(List__Fuse_Style* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Style(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Style__ToArray(List__Fuse_Style* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Style__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Style*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Style*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_StyleProperty__uType* List__Fuse_StyleProperty__typeof()
{
    static ::uStaticStrong<List__Fuse_StyleProperty__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_StyleProperty__uType*)::uAllocClassType(sizeof(List__Fuse_StyleProperty__uType), "Uno.Collections.List<Fuse.StyleProperty>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_StyleProperty__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_StyleProperty__typeof(), offsetof(List__Fuse_StyleProperty__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_StyleProperty, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_StyleProperty, _data), ::uGetArrayType(::app::Fuse::StyleProperty__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_StyleProperty, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_StyleProperty, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_StyleProperty__Add, 0, false, ::app::Fuse::StyleProperty__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_StyleProperty__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_StyleProperty__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_StyleProperty__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_StyleProperty__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::StyleProperty__typeof()),
        ::uNewFunction("get_Count", List__Fuse_StyleProperty__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_StyleProperty__get_Item, 0, false, ::app::Fuse::StyleProperty__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_StyleProperty__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_StyleProperty__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_StyleProperty__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::StyleProperty__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_StyleProperty__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::StyleProperty__typeof()),
        ::uNewFunction(".ctor", List__Fuse_StyleProperty__New_1, 0, true, List__Fuse_StyleProperty__typeof()),
        ::uNewFunction(".ctor", List__Fuse_StyleProperty__New_2, 0, true, List__Fuse_StyleProperty__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_StyleProperty__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::StyleProperty__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_StyleProperty__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_StyleProperty__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::StyleProperty__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_StyleProperty__Sort, 0, false, ::app::Uno::Comparison__Fuse_StyleProperty__typeof()),
        ::uNewFunction("ToArray", List__Fuse_StyleProperty__ToArray, 0, false, ::uGetArrayType(::app::Fuse::StyleProperty__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_StyleProperty__GetEnumerator_boxed(List__Fuse_StyleProperty* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_StyleProperty__typeof(), __this->GetEnumerator());
}

void List__Fuse_StyleProperty___ObjInit(List__Fuse_StyleProperty* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_StyleProperty___ObjInit_1(List__Fuse_StyleProperty* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::StyleProperty__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_StyleProperty__Add(List__Fuse_StyleProperty* __this, ::app::Fuse::StyleProperty* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::StyleProperty*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_StyleProperty__AddRange(List__Fuse_StyleProperty* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_StyleProperty::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::StyleProperty* i = ::app::Uno::Collections::IEnumerator__Fuse_StyleProperty::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_StyleProperty__BoundsCheck(List__Fuse_StyleProperty* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_StyleProperty__Clear(List__Fuse_StyleProperty* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_StyleProperty__Contains(List__Fuse_StyleProperty* __this, ::app::Fuse::StyleProperty* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_StyleProperty(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::StyleProperty*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_StyleProperty__EnsureCapacity(List__Fuse_StyleProperty* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::StyleProperty__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::StyleProperty__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::StyleProperty*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::StyleProperty*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_StyleProperty__get_Count(List__Fuse_StyleProperty* __this)
{
    return __this->_used;
}

::app::Fuse::StyleProperty* List__Fuse_StyleProperty__get_Item(List__Fuse_StyleProperty* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::StyleProperty*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_StyleProperty List__Fuse_StyleProperty__GetEnumerator(List__Fuse_StyleProperty* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_StyleProperty__New_1(NULL, __this);
}

int List__Fuse_StyleProperty__IndexOf(List__Fuse_StyleProperty* __this, ::app::Fuse::StyleProperty* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_StyleProperty(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::StyleProperty*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_StyleProperty__Insert(List__Fuse_StyleProperty* __this, int index, ::app::Fuse::StyleProperty* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::StyleProperty*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::StyleProperty*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::StyleProperty*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_StyleProperty* List__Fuse_StyleProperty__New_1(::uStatic* __this)
{
    List__Fuse_StyleProperty* inst = (List__Fuse_StyleProperty*)::uAllocObject(sizeof(List__Fuse_StyleProperty), List__Fuse_StyleProperty__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_StyleProperty* List__Fuse_StyleProperty__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_StyleProperty* inst = (List__Fuse_StyleProperty*)::uAllocObject(sizeof(List__Fuse_StyleProperty), List__Fuse_StyleProperty__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_StyleProperty__Remove(List__Fuse_StyleProperty* __this, ::app::Fuse::StyleProperty* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_StyleProperty(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::StyleProperty*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_StyleProperty__RemoveAt(List__Fuse_StyleProperty* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::StyleProperty*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::StyleProperty*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::StyleProperty*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_StyleProperty__set_Item(List__Fuse_StyleProperty* __this, int index, ::app::Fuse::StyleProperty* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::StyleProperty*>(index) = value;
    __this->_version++;
}

void List__Fuse_StyleProperty__Sort(List__Fuse_StyleProperty* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_StyleProperty(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_StyleProperty__ToArray(List__Fuse_StyleProperty* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::StyleProperty__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::StyleProperty*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::StyleProperty*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Transform__uType* List__Fuse_Transform__typeof()
{
    static ::uStaticStrong<List__Fuse_Transform__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Transform__uType*)::uAllocClassType(sizeof(List__Fuse_Transform__uType), "Uno.Collections.List<Fuse.Transform>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::app::Fuse::Transform*(*)(void*, int))List__Fuse_Transform__get_Item;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Transform*))List__Fuse_Transform__Add;
    type->__interface_1.__fp_Remove = (bool(*)(void*, ::app::Fuse::Transform*))List__Fuse_Transform__Remove;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Transform__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Transform__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Transform__typeof(), offsetof(List__Fuse_Transform__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Transform__typeof(), offsetof(List__Fuse_Transform__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Transform__typeof(), offsetof(List__Fuse_Transform__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Transform, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Transform, _data), ::uGetArrayType(::app::Fuse::Transform__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Transform, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Transform, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Transform__Add, 0, false, ::app::Fuse::Transform__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Transform__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Transform__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Transform__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Transform__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Transform__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Transform__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Transform__get_Item, 0, false, ::app::Fuse::Transform__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Transform__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Transform__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Transform__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Transform__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Transform__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Transform__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Transform__New_1, 0, true, List__Fuse_Transform__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Transform__New_2, 0, true, List__Fuse_Transform__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Transform__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Transform__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Transform__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Transform__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Transform__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Transform__Sort, 0, false, ::app::Uno::Comparison__Fuse_Transform__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Transform__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Transform__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Transform__GetEnumerator_boxed(List__Fuse_Transform* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Transform__typeof(), __this->GetEnumerator());
}

void List__Fuse_Transform___ObjInit(List__Fuse_Transform* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Transform___ObjInit_1(List__Fuse_Transform* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Transform__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Transform__Add(List__Fuse_Transform* __this, ::app::Fuse::Transform* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Transform*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Transform__AddRange(List__Fuse_Transform* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Transform::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Transform* i = ::app::Uno::Collections::IEnumerator__Fuse_Transform::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Transform__BoundsCheck(List__Fuse_Transform* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Transform__Clear(List__Fuse_Transform* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Transform__Contains(List__Fuse_Transform* __this, ::app::Fuse::Transform* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Transform(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Transform*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Transform__EnsureCapacity(List__Fuse_Transform* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Transform__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Transform__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Transform*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Transform*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Transform__get_Count(List__Fuse_Transform* __this)
{
    return __this->_used;
}

::app::Fuse::Transform* List__Fuse_Transform__get_Item(List__Fuse_Transform* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Transform*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Transform List__Fuse_Transform__GetEnumerator(List__Fuse_Transform* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Transform__New_1(NULL, __this);
}

int List__Fuse_Transform__IndexOf(List__Fuse_Transform* __this, ::app::Fuse::Transform* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Transform(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Transform*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Transform__Insert(List__Fuse_Transform* __this, int index, ::app::Fuse::Transform* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Transform*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Transform*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Transform*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Transform* List__Fuse_Transform__New_1(::uStatic* __this)
{
    List__Fuse_Transform* inst = (List__Fuse_Transform*)::uAllocObject(sizeof(List__Fuse_Transform), List__Fuse_Transform__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Transform* List__Fuse_Transform__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Transform* inst = (List__Fuse_Transform*)::uAllocObject(sizeof(List__Fuse_Transform), List__Fuse_Transform__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Transform__Remove(List__Fuse_Transform* __this, ::app::Fuse::Transform* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Transform(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Transform*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Transform__RemoveAt(List__Fuse_Transform* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Transform*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Transform*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Transform*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Transform__set_Item(List__Fuse_Transform* __this, int index, ::app::Fuse::Transform* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Transform*>(index) = value;
    __this->_version++;
}

void List__Fuse_Transform__Sort(List__Fuse_Transform* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Transform(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Transform__ToArray(List__Fuse_Transform* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Transform__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Transform*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Transform*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Triggers_Actions_TriggerAction__uType* List__Fuse_Triggers_Actions_TriggerAction__typeof()
{
    static ::uStaticStrong<List__Fuse_Triggers_Actions_TriggerAction__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Triggers_Actions_TriggerAction__uType*)::uAllocClassType(sizeof(List__Fuse_Triggers_Actions_TriggerAction__uType), "Uno.Collections.List<Fuse.Triggers.Actions.TriggerAction>", false, 3, 1, 0);

    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Triggers::Actions::TriggerAction*))List__Fuse_Triggers_Actions_TriggerAction__Add;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Triggers_Actions_TriggerAction__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Triggers_Actions_TriggerAction__typeof(), offsetof(List__Fuse_Triggers_Actions_TriggerAction__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Triggers_Actions_TriggerAction__typeof(), offsetof(List__Fuse_Triggers_Actions_TriggerAction__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Triggers_Actions_TriggerAction__typeof(), offsetof(List__Fuse_Triggers_Actions_TriggerAction__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Triggers_Actions_TriggerAction, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Triggers_Actions_TriggerAction, _data), ::uGetArrayType(::app::Fuse::Triggers::Actions::TriggerAction__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Triggers_Actions_TriggerAction, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Triggers_Actions_TriggerAction, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Triggers_Actions_TriggerAction__Add, 0, false, ::app::Fuse::Triggers::Actions::TriggerAction__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Triggers_Actions_TriggerAction__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Triggers_Actions_TriggerAction__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Triggers_Actions_TriggerAction__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Triggers_Actions_TriggerAction__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Triggers::Actions::TriggerAction__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Triggers_Actions_TriggerAction__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Triggers_Actions_TriggerAction__get_Item, 0, false, ::app::Fuse::Triggers::Actions::TriggerAction__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Triggers_Actions_TriggerAction__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Triggers_Actions_TriggerAction__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Triggers_Actions_TriggerAction__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Triggers::Actions::TriggerAction__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Triggers_Actions_TriggerAction__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Triggers::Actions::TriggerAction__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Triggers_Actions_TriggerAction__New_1, 0, true, List__Fuse_Triggers_Actions_TriggerAction__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Triggers_Actions_TriggerAction__New_2, 0, true, List__Fuse_Triggers_Actions_TriggerAction__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Triggers_Actions_TriggerAction__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Triggers::Actions::TriggerAction__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Triggers_Actions_TriggerAction__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Triggers_Actions_TriggerAction__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Triggers::Actions::TriggerAction__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Triggers_Actions_TriggerAction__Sort, 0, false, ::app::Uno::Comparison__Fuse_Triggers_Actions_TriggerAction__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Triggers_Actions_TriggerAction__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Triggers::Actions::TriggerAction__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Triggers_Actions_TriggerAction__GetEnumerator_boxed(List__Fuse_Triggers_Actions_TriggerAction* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Triggers_Actions_TriggerAction__typeof(), __this->GetEnumerator());
}

void List__Fuse_Triggers_Actions_TriggerAction___ObjInit(List__Fuse_Triggers_Actions_TriggerAction* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Triggers_Actions_TriggerAction___ObjInit_1(List__Fuse_Triggers_Actions_TriggerAction* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Triggers::Actions::TriggerAction__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Triggers_Actions_TriggerAction__Add(List__Fuse_Triggers_Actions_TriggerAction* __this, ::app::Fuse::Triggers::Actions::TriggerAction* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::Actions::TriggerAction*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Triggers_Actions_TriggerAction__AddRange(List__Fuse_Triggers_Actions_TriggerAction* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Triggers_Actions_TriggerAction::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Triggers::Actions::TriggerAction* i = ::app::Uno::Collections::IEnumerator__Fuse_Triggers_Actions_TriggerAction::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Triggers_Actions_TriggerAction__BoundsCheck(List__Fuse_Triggers_Actions_TriggerAction* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Triggers_Actions_TriggerAction__Clear(List__Fuse_Triggers_Actions_TriggerAction* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Triggers_Actions_TriggerAction__Contains(List__Fuse_Triggers_Actions_TriggerAction* __this, ::app::Fuse::Triggers::Actions::TriggerAction* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Triggers_Actions_TriggerAction(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::Actions::TriggerAction*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Triggers_Actions_TriggerAction__EnsureCapacity(List__Fuse_Triggers_Actions_TriggerAction* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Triggers::Actions::TriggerAction__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Triggers::Actions::TriggerAction__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Triggers::Actions::TriggerAction*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::Actions::TriggerAction*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Triggers_Actions_TriggerAction__get_Count(List__Fuse_Triggers_Actions_TriggerAction* __this)
{
    return __this->_used;
}

::app::Fuse::Triggers::Actions::TriggerAction* List__Fuse_Triggers_Actions_TriggerAction__get_Item(List__Fuse_Triggers_Actions_TriggerAction* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::Actions::TriggerAction*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Triggers_Actions_TriggerAction List__Fuse_Triggers_Actions_TriggerAction__GetEnumerator(List__Fuse_Triggers_Actions_TriggerAction* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Triggers_Actions_TriggerAction__New_1(NULL, __this);
}

int List__Fuse_Triggers_Actions_TriggerAction__IndexOf(List__Fuse_Triggers_Actions_TriggerAction* __this, ::app::Fuse::Triggers::Actions::TriggerAction* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Triggers_Actions_TriggerAction(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::Actions::TriggerAction*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Triggers_Actions_TriggerAction__Insert(List__Fuse_Triggers_Actions_TriggerAction* __this, int index, ::app::Fuse::Triggers::Actions::TriggerAction* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::Actions::TriggerAction*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::Actions::TriggerAction*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::Actions::TriggerAction*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Triggers_Actions_TriggerAction* List__Fuse_Triggers_Actions_TriggerAction__New_1(::uStatic* __this)
{
    List__Fuse_Triggers_Actions_TriggerAction* inst = (List__Fuse_Triggers_Actions_TriggerAction*)::uAllocObject(sizeof(List__Fuse_Triggers_Actions_TriggerAction), List__Fuse_Triggers_Actions_TriggerAction__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Triggers_Actions_TriggerAction* List__Fuse_Triggers_Actions_TriggerAction__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Triggers_Actions_TriggerAction* inst = (List__Fuse_Triggers_Actions_TriggerAction*)::uAllocObject(sizeof(List__Fuse_Triggers_Actions_TriggerAction), List__Fuse_Triggers_Actions_TriggerAction__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Triggers_Actions_TriggerAction__Remove(List__Fuse_Triggers_Actions_TriggerAction* __this, ::app::Fuse::Triggers::Actions::TriggerAction* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Triggers_Actions_TriggerAction(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::Actions::TriggerAction*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Triggers_Actions_TriggerAction__RemoveAt(List__Fuse_Triggers_Actions_TriggerAction* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::Actions::TriggerAction*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::Actions::TriggerAction*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::Actions::TriggerAction*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Triggers_Actions_TriggerAction__set_Item(List__Fuse_Triggers_Actions_TriggerAction* __this, int index, ::app::Fuse::Triggers::Actions::TriggerAction* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::Actions::TriggerAction*>(index) = value;
    __this->_version++;
}

void List__Fuse_Triggers_Actions_TriggerAction__Sort(List__Fuse_Triggers_Actions_TriggerAction* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Triggers_Actions_TriggerAction(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Triggers_Actions_TriggerAction__ToArray(List__Fuse_Triggers_Actions_TriggerAction* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Triggers::Actions::TriggerAction__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Triggers::Actions::TriggerAction*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::Actions::TriggerAction*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_Triggers_State__uType* List__Fuse_Triggers_State__typeof()
{
    static ::uStaticStrong<List__Fuse_Triggers_State__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_Triggers_State__uType*)::uAllocClassType(sizeof(List__Fuse_Triggers_State__uType), "Uno.Collections.List<Fuse.Triggers.State>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::app::Fuse::Triggers::State*(*)(void*, int))List__Fuse_Triggers_State__get_Item;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Fuse::Triggers::State*))List__Fuse_Triggers_State__Add;
    type->__interface_1.__fp_Remove = (bool(*)(void*, ::app::Fuse::Triggers::State*))List__Fuse_Triggers_State__Remove;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Fuse_Triggers_State__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_Triggers_State__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Fuse_Triggers_State__typeof(), offsetof(List__Fuse_Triggers_State__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Fuse_Triggers_State__typeof(), offsetof(List__Fuse_Triggers_State__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Fuse_Triggers_State__typeof(), offsetof(List__Fuse_Triggers_State__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_Triggers_State, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_Triggers_State, _data), ::uGetArrayType(::app::Fuse::Triggers::State__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_Triggers_State, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_Triggers_State, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_Triggers_State__Add, 0, false, ::app::Fuse::Triggers::State__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_Triggers_State__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_Triggers_State__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_Triggers_State__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_Triggers_State__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Triggers::State__typeof()),
        ::uNewFunction("get_Count", List__Fuse_Triggers_State__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_Triggers_State__get_Item, 0, false, ::app::Fuse::Triggers::State__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_Triggers_State__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_Triggers_State__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_Triggers_State__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Triggers::State__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_Triggers_State__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Triggers::State__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Triggers_State__New_1, 0, true, List__Fuse_Triggers_State__typeof()),
        ::uNewFunction(".ctor", List__Fuse_Triggers_State__New_2, 0, true, List__Fuse_Triggers_State__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_Triggers_State__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Triggers::State__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_Triggers_State__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_Triggers_State__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Triggers::State__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_Triggers_State__Sort, 0, false, ::app::Uno::Comparison__Fuse_Triggers_State__typeof()),
        ::uNewFunction("ToArray", List__Fuse_Triggers_State__ToArray, 0, false, ::uGetArrayType(::app::Fuse::Triggers::State__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_Triggers_State__GetEnumerator_boxed(List__Fuse_Triggers_State* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_Triggers_State__typeof(), __this->GetEnumerator());
}

void List__Fuse_Triggers_State___ObjInit(List__Fuse_Triggers_State* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_Triggers_State___ObjInit_1(List__Fuse_Triggers_State* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::Triggers::State__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_Triggers_State__Add(List__Fuse_Triggers_State* __this, ::app::Fuse::Triggers::State* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::State*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_Triggers_State__AddRange(List__Fuse_Triggers_State* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_Triggers_State::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::Triggers::State* i = ::app::Uno::Collections::IEnumerator__Fuse_Triggers_State::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_Triggers_State__BoundsCheck(List__Fuse_Triggers_State* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_Triggers_State__Clear(List__Fuse_Triggers_State* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_Triggers_State__Contains(List__Fuse_Triggers_State* __this, ::app::Fuse::Triggers::State* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Triggers_State(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::State*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_Triggers_State__EnsureCapacity(List__Fuse_Triggers_State* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::Triggers::State__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::Triggers::State__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::Triggers::State*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::State*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_Triggers_State__get_Count(List__Fuse_Triggers_State* __this)
{
    return __this->_used;
}

::app::Fuse::Triggers::State* List__Fuse_Triggers_State__get_Item(List__Fuse_Triggers_State* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::State*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_Triggers_State List__Fuse_Triggers_State__GetEnumerator(List__Fuse_Triggers_State* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_Triggers_State__New_1(NULL, __this);
}

int List__Fuse_Triggers_State__IndexOf(List__Fuse_Triggers_State* __this, ::app::Fuse::Triggers::State* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Triggers_State(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::State*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_Triggers_State__Insert(List__Fuse_Triggers_State* __this, int index, ::app::Fuse::Triggers::State* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::State*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::State*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::State*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_Triggers_State* List__Fuse_Triggers_State__New_1(::uStatic* __this)
{
    List__Fuse_Triggers_State* inst = (List__Fuse_Triggers_State*)::uAllocObject(sizeof(List__Fuse_Triggers_State), List__Fuse_Triggers_State__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_Triggers_State* List__Fuse_Triggers_State__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_Triggers_State* inst = (List__Fuse_Triggers_State*)::uAllocObject(sizeof(List__Fuse_Triggers_State), List__Fuse_Triggers_State__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_Triggers_State__Remove(List__Fuse_Triggers_State* __this, ::app::Fuse::Triggers::State* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_Triggers_State(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::State*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_Triggers_State__RemoveAt(List__Fuse_Triggers_State* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::State*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::State*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::State*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_Triggers_State__set_Item(List__Fuse_Triggers_State* __this, int index, ::app::Fuse::Triggers::State* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::Triggers::State*>(index) = value;
    __this->_version++;
}

void List__Fuse_Triggers_State__Sort(List__Fuse_Triggers_State* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_Triggers_State(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_Triggers_State__ToArray(List__Fuse_Triggers_State* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::Triggers::State__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::Triggers::State*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::Triggers::State*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Fuse_UpdateListener__uType* List__Fuse_UpdateListener__typeof()
{
    static ::uStaticStrong<List__Fuse_UpdateListener__uType*> type;
    if (type != NULL) return type;

    type = (List__Fuse_UpdateListener__uType*)::uAllocClassType(sizeof(List__Fuse_UpdateListener__uType), "Uno.Collections.List<Fuse.UpdateListener>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Fuse_UpdateListener__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Fuse_UpdateListener__typeof(), offsetof(List__Fuse_UpdateListener__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Fuse_UpdateListener, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Fuse_UpdateListener, _data), ::uGetArrayType(::app::Fuse::UpdateListener__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Fuse_UpdateListener, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Fuse_UpdateListener, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Fuse_UpdateListener__Add, 0, false, ::app::Fuse::UpdateListener__typeof()),
        ::uNewFunctionVoid("AddRange", List__Fuse_UpdateListener__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Fuse_UpdateListener__typeof()),
        ::uNewFunctionVoid("Clear", List__Fuse_UpdateListener__Clear, 0, false),
        ::uNewFunction("Contains", List__Fuse_UpdateListener__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::UpdateListener__typeof()),
        ::uNewFunction("get_Count", List__Fuse_UpdateListener__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Fuse_UpdateListener__get_Item, 0, false, ::app::Fuse::UpdateListener__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Fuse_UpdateListener__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Fuse_UpdateListener__typeof()),
        ::uNewFunction("IndexOf", List__Fuse_UpdateListener__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::UpdateListener__typeof()),
        ::uNewFunctionVoid("Insert", List__Fuse_UpdateListener__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::UpdateListener__typeof()),
        ::uNewFunction(".ctor", List__Fuse_UpdateListener__New_1, 0, true, List__Fuse_UpdateListener__typeof()),
        ::uNewFunction(".ctor", List__Fuse_UpdateListener__New_2, 0, true, List__Fuse_UpdateListener__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Fuse_UpdateListener__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::UpdateListener__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Fuse_UpdateListener__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Fuse_UpdateListener__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::UpdateListener__typeof()),
        ::uNewFunctionVoid("Sort", List__Fuse_UpdateListener__Sort, 0, false, ::app::Uno::Comparison__Fuse_UpdateListener__typeof()),
        ::uNewFunction("ToArray", List__Fuse_UpdateListener__ToArray, 0, false, ::uGetArrayType(::app::Fuse::UpdateListener__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Fuse_UpdateListener__GetEnumerator_boxed(List__Fuse_UpdateListener* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Fuse_UpdateListener__typeof(), __this->GetEnumerator());
}

void List__Fuse_UpdateListener___ObjInit(List__Fuse_UpdateListener* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Fuse_UpdateListener___ObjInit_1(List__Fuse_UpdateListener* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Fuse::UpdateListener__typeof(), capacity);
    __this->_used = 0;
}

void List__Fuse_UpdateListener__Add(List__Fuse_UpdateListener* __this, ::app::Fuse::UpdateListener* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::UpdateListener*>(__this->_used++) = item;
    __this->_version++;
}

void List__Fuse_UpdateListener__AddRange(List__Fuse_UpdateListener* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Fuse_UpdateListener::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Fuse::UpdateListener* i = ::app::Uno::Collections::IEnumerator__Fuse_UpdateListener::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Fuse_UpdateListener__BoundsCheck(List__Fuse_UpdateListener* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Fuse_UpdateListener__Clear(List__Fuse_UpdateListener* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Fuse_UpdateListener__Contains(List__Fuse_UpdateListener* __this, ::app::Fuse::UpdateListener* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_UpdateListener(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::UpdateListener*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Fuse_UpdateListener__EnsureCapacity(List__Fuse_UpdateListener* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Fuse::UpdateListener__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Fuse::UpdateListener__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Fuse::UpdateListener*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::UpdateListener*>(i);
        }

        __this->_data = newData;
    }
}

int List__Fuse_UpdateListener__get_Count(List__Fuse_UpdateListener* __this)
{
    return __this->_used;
}

::app::Fuse::UpdateListener* List__Fuse_UpdateListener__get_Item(List__Fuse_UpdateListener* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::UpdateListener*>(index);
}

::app::Uno::Collections::List1_Enumerator__Fuse_UpdateListener List__Fuse_UpdateListener__GetEnumerator(List__Fuse_UpdateListener* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Fuse_UpdateListener__New_1(NULL, __this);
}

int List__Fuse_UpdateListener__IndexOf(List__Fuse_UpdateListener* __this, ::app::Fuse::UpdateListener* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_UpdateListener(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::UpdateListener*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Fuse_UpdateListener__Insert(List__Fuse_UpdateListener* __this, int index, ::app::Fuse::UpdateListener* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::UpdateListener*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::UpdateListener*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::UpdateListener*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Fuse_UpdateListener* List__Fuse_UpdateListener__New_1(::uStatic* __this)
{
    List__Fuse_UpdateListener* inst = (List__Fuse_UpdateListener*)::uAllocObject(sizeof(List__Fuse_UpdateListener), List__Fuse_UpdateListener__typeof());
    inst->_ObjInit();
    return inst;
}

List__Fuse_UpdateListener* List__Fuse_UpdateListener__New_2(::uStatic* __this, int capacity)
{
    List__Fuse_UpdateListener* inst = (List__Fuse_UpdateListener*)::uAllocObject(sizeof(List__Fuse_UpdateListener), List__Fuse_UpdateListener__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Fuse_UpdateListener__Remove(List__Fuse_UpdateListener* __this, ::app::Fuse::UpdateListener* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Fuse_UpdateListener(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::UpdateListener*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Fuse_UpdateListener__RemoveAt(List__Fuse_UpdateListener* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::UpdateListener*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::UpdateListener*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::UpdateListener*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Fuse_UpdateListener__set_Item(List__Fuse_UpdateListener* __this, int index, ::app::Fuse::UpdateListener* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Fuse::UpdateListener*>(index) = value;
    __this->_version++;
}

void List__Fuse_UpdateListener__Sort(List__Fuse_UpdateListener* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Fuse_UpdateListener(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Fuse_UpdateListener__ToArray(List__Fuse_UpdateListener* __this)
{
    ::uArray* t = ::uNewArray(::app::Fuse::UpdateListener__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Fuse::UpdateListener*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Fuse::UpdateListener*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__int__uType* List__int__typeof()
{
    static ::uStaticStrong<List__int__uType*> type;
    if (type != NULL) return type;

    type = (List__int__uType*)::uAllocClassType(sizeof(List__int__uType), "Uno.Collections.List<int>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__int__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__int__typeof(), offsetof(List__int__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__int, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__int, _data), ::uGetArrayType(::app::Uno::Int__typeof())),
        ::uNewField("_used", NULL, offsetof(List__int, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__int, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__int__Add, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("AddRange", List__int__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__int__typeof()),
        ::uNewFunctionVoid("Clear", List__int__Clear, 0, false),
        ::uNewFunction("Contains", List__int__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Count", List__int__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__int__get_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__int__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__int__typeof()),
        ::uNewFunction("IndexOf", List__int__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("Insert", List__int__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction(".ctor", List__int__New_1, 0, true, List__int__typeof()),
        ::uNewFunction(".ctor", List__int__New_2, 0, true, List__int__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__int__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__int__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__int__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("Sort", List__int__Sort, 0, false, ::app::Uno::Comparison__int__typeof()),
        ::uNewFunction("ToArray", List__int__ToArray, 0, false, ::uGetArrayType(::app::Uno::Int__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__int__GetEnumerator_boxed(List__int* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__int__typeof(), __this->GetEnumerator());
}

void List__int___ObjInit(List__int* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__int___ObjInit_1(List__int* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Int__typeof(), capacity);
    __this->_used = 0;
}

void List__int__Add(List__int* __this, int item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< int>(__this->_used++) = item;
    __this->_version++;
}

void List__int__AddRange(List__int* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__int::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        int i = ::app::Uno::Collections::IEnumerator__int::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__int__BoundsCheck(List__int* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__int__Clear(List__int* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__int__Contains(List__int* __this, int item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< int>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__int__EnsureCapacity(List__int* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Int__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Int__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< int>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i);
        }

        __this->_data = newData;
    }
}

int List__int__get_Count(List__int* __this)
{
    return __this->_used;
}

int List__int__get_Item(List__int* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< int>(index);
}

::app::Uno::Collections::List1_Enumerator__int List__int__GetEnumerator(List__int* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__int__New_1(NULL, __this);
}

int List__int__IndexOf(List__int* __this, int item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< int>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__int__Insert(List__int* __this, int index, int item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< int>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< int>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__int* List__int__New_1(::uStatic* __this)
{
    List__int* inst = (List__int*)::uAllocObject(sizeof(List__int), List__int__typeof());
    inst->_ObjInit();
    return inst;
}

List__int* List__int__New_2(::uStatic* __this, int capacity)
{
    List__int* inst = (List__int*)::uAllocObject(sizeof(List__int), List__int__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__int__Remove(List__int* __this, int item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< int>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__int__RemoveAt(List__int* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< int>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< int>(__this->_used) = 0;
    __this->_version++;
}

void List__int__set_Item(List__int* __this, int index, int value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< int>(index) = value;
    __this->_version++;
}

void List__int__Sort(List__int* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__int(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__int__ToArray(List__int* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Int__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< int>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__int4__uType* List__int4__typeof()
{
    static ::uStaticStrong<List__int4__uType*> type;
    if (type != NULL) return type;

    type = (List__int4__uType*)::uAllocClassType(sizeof(List__int4__uType), "Uno.Collections.List<int4>", false, 3, 1, 0);

    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__int4__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Uno::Int4(*)(void*, int))List__int4__get_Item;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__int4__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__int4__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__int4__typeof(), offsetof(List__int4__uType, __interface_0),
        ::app::Uno::Collections::ICollection__int4__typeof(), offsetof(List__int4__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__int4__typeof(), offsetof(List__int4__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__int4, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__int4, _data), ::uGetArrayType(::app::Uno::Int4__typeof())),
        ::uNewField("_used", NULL, offsetof(List__int4, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__int4, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__int4__Add, 0, false, ::app::Uno::Int4__typeof()),
        ::uNewFunctionVoid("AddRange", List__int4__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__int4__typeof()),
        ::uNewFunctionVoid("Clear", List__int4__Clear, 0, false),
        ::uNewFunction("Contains", List__int4__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int4__typeof()),
        ::uNewFunction("get_Count", List__int4__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__int4__get_Item, 0, false, ::app::Uno::Int4__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__int4__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__int4__typeof()),
        ::uNewFunction("IndexOf", List__int4__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Int4__typeof()),
        ::uNewFunctionVoid("Insert", List__int4__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Int4__typeof()),
        ::uNewFunction(".ctor", List__int4__New_1, 0, true, List__int4__typeof()),
        ::uNewFunction(".ctor", List__int4__New_2, 0, true, List__int4__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__int4__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int4__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__int4__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__int4__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Int4__typeof()),
        ::uNewFunctionVoid("Sort", List__int4__Sort, 0, false, ::app::Uno::Comparison__int4__typeof()),
        ::uNewFunction("ToArray", List__int4__ToArray, 0, false, ::uGetArrayType(::app::Uno::Int4__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__int4__GetEnumerator_boxed(List__int4* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__int4__typeof(), __this->GetEnumerator());
}

void List__int4___ObjInit(List__int4* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__int4___ObjInit_1(List__int4* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Int4__typeof(), capacity);
    __this->_used = 0;
}

void List__int4__Add(List__int4* __this, ::app::Uno::Int4 item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(__this->_used++) = item;
    __this->_version++;
}

void List__int4__AddRange(List__int4* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__int4::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Int4 i = ::app::Uno::Collections::IEnumerator__int4::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__int4__BoundsCheck(List__int4* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__int4__Clear(List__int4* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__int4__Contains(List__int4* __this, ::app::Uno::Int4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__int4(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__int4__EnsureCapacity(List__int4* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Int4__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Int4__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Int4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(i);
        }

        __this->_data = newData;
    }
}

int List__int4__get_Count(List__int4* __this)
{
    return __this->_used;
}

::app::Uno::Int4 List__int4__get_Item(List__int4* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(index);
}

::app::Uno::Collections::List1_Enumerator__int4 List__int4__GetEnumerator(List__int4* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__int4__New_1(NULL, __this);
}

int List__int4__IndexOf(List__int4* __this, ::app::Uno::Int4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__int4(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__int4__Insert(List__int4* __this, int index, ::app::Uno::Int4 item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__int4* List__int4__New_1(::uStatic* __this)
{
    List__int4* inst = (List__int4*)::uAllocObject(sizeof(List__int4), List__int4__typeof());
    inst->_ObjInit();
    return inst;
}

List__int4* List__int4__New_2(::uStatic* __this, int capacity)
{
    List__int4* inst = (List__int4*)::uAllocObject(sizeof(List__int4), List__int4__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__int4__Remove(List__int4* __this, ::app::Uno::Int4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__int4(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__int4__RemoveAt(List__int4* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(__this->_used) = ::uDefault< ::app::Uno::Int4>();
    __this->_version++;
}

void List__int4__set_Item(List__int4* __this, int index, ::app::Uno::Int4 value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(index) = value;
    __this->_version++;
}

void List__int4__Sort(List__int4* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__int4(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__int4__ToArray(List__int4* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Int4__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Int4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Int4>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__object__uType* List__object__typeof()
{
    static ::uStaticStrong<List__object__uType*> type;
    if (type != NULL) return type;

    type = (List__object__uType*)::uAllocClassType(sizeof(List__object__uType), "Uno.Collections.List<object>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__object__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__object__typeof(), offsetof(List__object__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__object, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__object, _data), ::uGetArrayType(::uObject__typeof())),
        ::uNewField("_used", NULL, offsetof(List__object, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__object, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__object__Add, 0, false, ::uObject__typeof()),
        ::uNewFunctionVoid("AddRange", List__object__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__object__typeof()),
        ::uNewFunctionVoid("Clear", List__object__Clear, 0, false),
        ::uNewFunction("Contains", List__object__Contains, 0, false, ::app::Uno::Bool__typeof(), ::uObject__typeof()),
        ::uNewFunction("get_Count", List__object__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__object__get_Item, 0, false, ::uObject__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__object__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__object__typeof()),
        ::uNewFunction("IndexOf", List__object__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::uObject__typeof()),
        ::uNewFunctionVoid("Insert", List__object__Insert, 0, false, ::app::Uno::Int__typeof(), ::uObject__typeof()),
        ::uNewFunction(".ctor", List__object__New_1, 0, true, List__object__typeof()),
        ::uNewFunction(".ctor", List__object__New_2, 0, true, List__object__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__object__Remove, 0, false, ::app::Uno::Bool__typeof(), ::uObject__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__object__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__object__set_Item, 0, false, ::app::Uno::Int__typeof(), ::uObject__typeof()),
        ::uNewFunctionVoid("Sort", List__object__Sort, 0, false, ::app::Uno::Comparison__object__typeof()),
        ::uNewFunction("ToArray", List__object__ToArray, 0, false, ::uGetArrayType(::uObject__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__object__GetEnumerator_boxed(List__object* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__object__typeof(), __this->GetEnumerator());
}

void List__object___ObjInit(List__object* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__object___ObjInit_1(List__object* __this, int capacity)
{
    __this->_data = ::uNewArray(::uObject__typeof(), capacity);
    __this->_used = 0;
}

void List__object__Add(List__object* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__object__AddRange(List__object* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__object::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__object::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__object__BoundsCheck(List__object* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__object__Clear(List__object* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__object__Contains(List__object* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__object__EnsureCapacity(List__object* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::uObject__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::uObject__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__object__get_Count(List__object* __this)
{
    return __this->_used;
}

::uObject* List__object__get_Item(List__object* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__object List__object__GetEnumerator(List__object* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__object__New_1(NULL, __this);
}

int List__object__IndexOf(List__object* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__object__Insert(List__object* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__object* List__object__New_1(::uStatic* __this)
{
    List__object* inst = (List__object*)::uAllocObject(sizeof(List__object), List__object__typeof());
    inst->_ObjInit();
    return inst;
}

List__object* List__object__New_2(::uStatic* __this, int capacity)
{
    List__object* inst = (List__object*)::uAllocObject(sizeof(List__object), List__object__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__object__Remove(List__object* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__object__RemoveAt(List__object* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__object__set_Item(List__object* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__object__Sort(List__object* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__object(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__object__ToArray(List__object* __this)
{
    ::uArray* t = ::uNewArray(::uObject__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Outracks_Simulator_Bytecode_TypeName__uType* List__Outracks_Simulator_Bytecode_TypeName__typeof()
{
    static ::uStaticStrong<List__Outracks_Simulator_Bytecode_TypeName__uType*> type;
    if (type != NULL) return type;

    type = (List__Outracks_Simulator_Bytecode_TypeName__uType*)::uAllocClassType(sizeof(List__Outracks_Simulator_Bytecode_TypeName__uType), "Uno.Collections.List<Outracks.Simulator.Bytecode.TypeName>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Outracks_Simulator_Bytecode_TypeName__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Outracks_Simulator_Bytecode_TypeName__typeof(), offsetof(List__Outracks_Simulator_Bytecode_TypeName__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Outracks_Simulator_Bytecode_TypeName, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Outracks_Simulator_Bytecode_TypeName, _data), ::uGetArrayType(::app::Outracks::Simulator::Bytecode::TypeName__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Outracks_Simulator_Bytecode_TypeName, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Outracks_Simulator_Bytecode_TypeName, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Outracks_Simulator_Bytecode_TypeName__Add, 0, false, ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunctionVoid("AddRange", List__Outracks_Simulator_Bytecode_TypeName__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunctionVoid("Clear", List__Outracks_Simulator_Bytecode_TypeName__Clear, 0, false),
        ::uNewFunction("Contains", List__Outracks_Simulator_Bytecode_TypeName__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunction("get_Count", List__Outracks_Simulator_Bytecode_TypeName__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Outracks_Simulator_Bytecode_TypeName__get_Item, 0, false, ::app::Outracks::Simulator::Bytecode::TypeName__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Outracks_Simulator_Bytecode_TypeName__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction("IndexOf", List__Outracks_Simulator_Bytecode_TypeName__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunctionVoid("Insert", List__Outracks_Simulator_Bytecode_TypeName__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunction(".ctor", List__Outracks_Simulator_Bytecode_TypeName__New_1, 0, true, List__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction(".ctor", List__Outracks_Simulator_Bytecode_TypeName__New_2, 0, true, List__Outracks_Simulator_Bytecode_TypeName__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Outracks_Simulator_Bytecode_TypeName__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Outracks_Simulator_Bytecode_TypeName__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Outracks_Simulator_Bytecode_TypeName__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunctionVoid("Sort", List__Outracks_Simulator_Bytecode_TypeName__Sort, 0, false, ::app::Uno::Comparison__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction("ToArray", List__Outracks_Simulator_Bytecode_TypeName__ToArray, 0, false, ::uGetArrayType(::app::Outracks::Simulator::Bytecode::TypeName__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Outracks_Simulator_Bytecode_TypeName__GetEnumerator_boxed(List__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Bytecode_TypeName__typeof(), __this->GetEnumerator());
}

void List__Outracks_Simulator_Bytecode_TypeName___ObjInit(List__Outracks_Simulator_Bytecode_TypeName* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Outracks_Simulator_Bytecode_TypeName___ObjInit_1(List__Outracks_Simulator_Bytecode_TypeName* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Outracks::Simulator::Bytecode::TypeName__typeof(), capacity);
    __this->_used = 0;
}

void List__Outracks_Simulator_Bytecode_TypeName__Add(List__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Outracks::Simulator::Bytecode::TypeName* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Bytecode::TypeName*>(__this->_used++) = item;
    __this->_version++;
}

void List__Outracks_Simulator_Bytecode_TypeName__AddRange(List__Outracks_Simulator_Bytecode_TypeName* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Outracks_Simulator_Bytecode_TypeName::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Outracks::Simulator::Bytecode::TypeName* i = ::app::Uno::Collections::IEnumerator__Outracks_Simulator_Bytecode_TypeName::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Outracks_Simulator_Bytecode_TypeName__BoundsCheck(List__Outracks_Simulator_Bytecode_TypeName* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Outracks_Simulator_Bytecode_TypeName__Clear(List__Outracks_Simulator_Bytecode_TypeName* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Outracks_Simulator_Bytecode_TypeName__Contains(List__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Outracks::Simulator::Bytecode::TypeName* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Bytecode::TypeName*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Outracks_Simulator_Bytecode_TypeName__EnsureCapacity(List__Outracks_Simulator_Bytecode_TypeName* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Outracks::Simulator::Bytecode::TypeName__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Outracks::Simulator::Bytecode::TypeName__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Outracks::Simulator::Bytecode::TypeName*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Bytecode::TypeName*>(i);
        }

        __this->_data = newData;
    }
}

int List__Outracks_Simulator_Bytecode_TypeName__get_Count(List__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return __this->_used;
}

::app::Outracks::Simulator::Bytecode::TypeName* List__Outracks_Simulator_Bytecode_TypeName__get_Item(List__Outracks_Simulator_Bytecode_TypeName* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Bytecode::TypeName*>(index);
}

::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Bytecode_TypeName List__Outracks_Simulator_Bytecode_TypeName__GetEnumerator(List__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Bytecode_TypeName__New_1(NULL, __this);
}

int List__Outracks_Simulator_Bytecode_TypeName__IndexOf(List__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Outracks::Simulator::Bytecode::TypeName* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Bytecode::TypeName*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Outracks_Simulator_Bytecode_TypeName__Insert(List__Outracks_Simulator_Bytecode_TypeName* __this, int index, ::app::Outracks::Simulator::Bytecode::TypeName* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Bytecode::TypeName*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Bytecode::TypeName*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Bytecode::TypeName*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Outracks_Simulator_Bytecode_TypeName* List__Outracks_Simulator_Bytecode_TypeName__New_1(::uStatic* __this)
{
    List__Outracks_Simulator_Bytecode_TypeName* inst = (List__Outracks_Simulator_Bytecode_TypeName*)::uAllocObject(sizeof(List__Outracks_Simulator_Bytecode_TypeName), List__Outracks_Simulator_Bytecode_TypeName__typeof());
    inst->_ObjInit();
    return inst;
}

List__Outracks_Simulator_Bytecode_TypeName* List__Outracks_Simulator_Bytecode_TypeName__New_2(::uStatic* __this, int capacity)
{
    List__Outracks_Simulator_Bytecode_TypeName* inst = (List__Outracks_Simulator_Bytecode_TypeName*)::uAllocObject(sizeof(List__Outracks_Simulator_Bytecode_TypeName), List__Outracks_Simulator_Bytecode_TypeName__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Outracks_Simulator_Bytecode_TypeName__Remove(List__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Outracks::Simulator::Bytecode::TypeName* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Bytecode::TypeName*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Outracks_Simulator_Bytecode_TypeName__RemoveAt(List__Outracks_Simulator_Bytecode_TypeName* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Bytecode::TypeName*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Bytecode::TypeName*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Bytecode::TypeName*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Outracks_Simulator_Bytecode_TypeName__set_Item(List__Outracks_Simulator_Bytecode_TypeName* __this, int index, ::app::Outracks::Simulator::Bytecode::TypeName* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Bytecode::TypeName*>(index) = value;
    __this->_version++;
}

void List__Outracks_Simulator_Bytecode_TypeName__Sort(List__Outracks_Simulator_Bytecode_TypeName* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Outracks_Simulator_Bytecode_TypeName(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Outracks_Simulator_Bytecode_TypeName__ToArray(List__Outracks_Simulator_Bytecode_TypeName* __this)
{
    ::uArray* t = ::uNewArray(::app::Outracks::Simulator::Bytecode::TypeName__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Outracks::Simulator::Bytecode::TypeName*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Bytecode::TypeName*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___uType* List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___typeof()
{
    static ::uStaticStrong<List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___uType*> type;
    if (type != NULL) return type;

    type = (List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___uType*)::uAllocClassType(sizeof(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___uType), "Uno.Collections.List<Outracks.Simulator.Task<Outracks.Simulator.ISimulatorClient>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___typeof(), offsetof(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_, _data), ::uGetArrayType(::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Add, 0, false, ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof()),
        ::uNewFunctionVoid("AddRange", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___typeof()),
        ::uNewFunctionVoid("Clear", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Clear, 0, false),
        ::uNewFunction("Contains", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof()),
        ::uNewFunction("get_Count", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___get_Item, 0, false, ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___typeof()),
        ::uNewFunction("IndexOf", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof()),
        ::uNewFunctionVoid("Insert", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof()),
        ::uNewFunction(".ctor", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___New_1, 0, true, List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___typeof()),
        ::uNewFunction(".ctor", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___New_2, 0, true, List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof()),
        ::uNewFunctionVoid("Sort", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Sort, 0, false, ::app::Uno::Comparison__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___typeof()),
        ::uNewFunction("ToArray", List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___ToArray, 0, false, ::uGetArrayType(::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___GetEnumerator_boxed(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___typeof(), __this->GetEnumerator());
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient____ObjInit(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient____ObjInit_1(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof(), capacity);
    __this->_used = 0;
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Add(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(__this->_used++) = item;
    __this->_version++;
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___AddRange(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient* i = ::app::Uno::Collections::IEnumerator__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___BoundsCheck(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Clear(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Contains(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___EnsureCapacity(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i);
        }

        __this->_data = newData;
    }
}

int List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___get_Count(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this)
{
    return __this->_used;
}

::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient* List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___get_Item(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(index);
}

::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_ List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___GetEnumerator(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___New_1(NULL, __this);
}

int List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___IndexOf(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Insert(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, int index, ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___New_1(::uStatic* __this)
{
    List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* inst = (List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_*)::uAllocObject(sizeof(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_), List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___typeof());
    inst->_ObjInit();
    return inst;
}

List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___New_2(::uStatic* __this, int capacity)
{
    List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* inst = (List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_*)::uAllocObject(sizeof(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_), List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Remove(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___RemoveAt(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___set_Item(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, int index, ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(index) = value;
    __this->_version++;
}

void List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___Sort(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient___ToArray(List__Outracks_Simulator_Task_Outracks_Simulator_ISimulatorClient_* __this)
{
    ::uArray* t = ::uNewArray(::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Outracks_Simulator_ISimulatorClient*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____uType* List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____typeof()
{
    static ::uStaticStrong<List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____uType*> type;
    if (type != NULL) return type;

    type = (List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____uType*)::uAllocClassType(sizeof(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____uType), "Uno.Collections.List<Outracks.Simulator.Task<Uno.Net.IPEndPoint[]>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____typeof(), offsetof(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___, _data), ::uGetArrayType(::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof())),
        ::uNewField("_used", NULL, offsetof(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Add, 0, false, ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof()),
        ::uNewFunctionVoid("AddRange", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____typeof()),
        ::uNewFunctionVoid("Clear", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Clear, 0, false),
        ::uNewFunction("Contains", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof()),
        ::uNewFunction("get_Count", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____get_Item, 0, false, ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____typeof()),
        ::uNewFunction("IndexOf", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof()),
        ::uNewFunctionVoid("Insert", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof()),
        ::uNewFunction(".ctor", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____New_1, 0, true, List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____typeof()),
        ::uNewFunction(".ctor", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____New_2, 0, true, List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof()),
        ::uNewFunctionVoid("Sort", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Sort, 0, false, ::app::Uno::Comparison__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____typeof()),
        ::uNewFunction("ToArray", List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____ToArray, 0, false, ::uGetArrayType(::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____GetEnumerator_boxed(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____typeof(), __this->GetEnumerator());
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint______ObjInit(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint______ObjInit_1(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof(), capacity);
    __this->_used = 0;
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Add(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(__this->_used++) = item;
    __this->_version++;
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____AddRange(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Outracks_Simulator_Task_Uno_Net_IPEndPoint___::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__* i = ::app::Uno::Collections::IEnumerator__Outracks_Simulator_Task_Uno_Net_IPEndPoint___::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____BoundsCheck(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Clear(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Contains(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Outracks_Simulator_Task_Uno_Net_IPEndPoint___(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____EnsureCapacity(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i);
        }

        __this->_data = newData;
    }
}

int List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____get_Count(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this)
{
    return __this->_used;
}

::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__* List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____get_Item(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(index);
}

::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Task_Uno_Net_IPEndPoint___ List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____GetEnumerator(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____New_1(NULL, __this);
}

int List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____IndexOf(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Outracks_Simulator_Task_Uno_Net_IPEndPoint___(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Insert(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, int index, ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____New_1(::uStatic* __this)
{
    List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* inst = (List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___*)::uAllocObject(sizeof(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___), List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____typeof());
    inst->_ObjInit();
    return inst;
}

List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____New_2(::uStatic* __this, int capacity)
{
    List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* inst = (List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___*)::uAllocObject(sizeof(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___), List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Remove(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Outracks_Simulator_Task_Uno_Net_IPEndPoint___(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____RemoveAt(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____set_Item(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, int index, ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(index) = value;
    __this->_version++;
}

void List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____Sort(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Outracks_Simulator_Task_Uno_Net_IPEndPoint___(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Outracks_Simulator_Task_Uno_Net_IPEndPoint_____ToArray(List__Outracks_Simulator_Task_Uno_Net_IPEndPoint___* __this)
{
    ::uArray* t = ::uNewArray(::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint____typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Outracks::Simulator::Task__Uno_Net_IPEndPoint__*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__string__uType* List__string__typeof()
{
    static ::uStaticStrong<List__string__uType*> type;
    if (type != NULL) return type;

    type = (List__string__uType*)::uAllocClassType(sizeof(List__string__uType), "Uno.Collections.List<string>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__string__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__string__typeof(), offsetof(List__string__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__string, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__string, _data), ::uGetArrayType(::app::Uno::String__typeof())),
        ::uNewField("_used", NULL, offsetof(List__string, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__string, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__string__Add, 0, false, ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("AddRange", List__string__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__string__typeof()),
        ::uNewFunctionVoid("Clear", List__string__Clear, 0, false),
        ::uNewFunction("Contains", List__string__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", List__string__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__string__get_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__string__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__string__typeof()),
        ::uNewFunction("IndexOf", List__string__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("Insert", List__string__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction(".ctor", List__string__New_1, 0, true, List__string__typeof()),
        ::uNewFunction(".ctor", List__string__New_2, 0, true, List__string__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__string__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__string__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__string__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("Sort", List__string__Sort, 0, false, ::app::Uno::Comparison__string__typeof()),
        ::uNewFunction("ToArray", List__string__ToArray, 0, false, ::uGetArrayType(::app::Uno::String__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__string__GetEnumerator_boxed(List__string* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__string__typeof(), __this->GetEnumerator());
}

void List__string___ObjInit(List__string* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__string___ObjInit_1(List__string* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::String__typeof(), capacity);
    __this->_used = 0;
}

void List__string__Add(List__string* __this, ::uString* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uString*>(__this->_used++) = item;
    __this->_version++;
}

void List__string__AddRange(List__string* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__string::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uString* i = ::app::Uno::Collections::IEnumerator__string::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__string__BoundsCheck(List__string* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__string__Clear(List__string* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__string__Contains(List__string* __this, ::uString* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uString*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__string__EnsureCapacity(List__string* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::String__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::String__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uString*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uString*>(i);
        }

        __this->_data = newData;
    }
}

int List__string__get_Count(List__string* __this)
{
    return __this->_used;
}

::uString* List__string__get_Item(List__string* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uString*>(index);
}

::app::Uno::Collections::List1_Enumerator__string List__string__GetEnumerator(List__string* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__string__New_1(NULL, __this);
}

int List__string__IndexOf(List__string* __this, ::uString* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uString*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__string__Insert(List__string* __this, int index, ::uString* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uString*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uString*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uString*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__string* List__string__New_1(::uStatic* __this)
{
    List__string* inst = (List__string*)::uAllocObject(sizeof(List__string), List__string__typeof());
    inst->_ObjInit();
    return inst;
}

List__string* List__string__New_2(::uStatic* __this, int capacity)
{
    List__string* inst = (List__string*)::uAllocObject(sizeof(List__string), List__string__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__string__Remove(List__string* __this, ::uString* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uString*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__string__RemoveAt(List__string* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uString*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uString*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uString*>(__this->_used) = NULL;
    __this->_version++;
}

void List__string__set_Item(List__string* __this, int index, ::uString* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uString*>(index) = value;
    __this->_version++;
}

void List__string__Sort(List__string* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__string(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__string__ToArray(List__string* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::String__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uString*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uString*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Action__uType* List__Uno_Action__typeof()
{
    static ::uStaticStrong<List__Uno_Action__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Action__uType*)::uAllocClassType(sizeof(List__Uno_Action__uType), "Uno.Collections.List<Uno.Action>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Action__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Action__typeof(), offsetof(List__Uno_Action__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Action, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Action, _data), ::uGetArrayType(::app::Uno::Action__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Action, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Action, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Action__Add, 0, false, ::app::Uno::Action__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Action__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Action__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Action__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Action__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Action__typeof()),
        ::uNewFunction("get_Count", List__Uno_Action__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Action__get_Item, 0, false, ::app::Uno::Action__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Action__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Action__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Action__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Action__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Action__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Action__typeof()),
        ::uNewFunction(".ctor", List__Uno_Action__New_1, 0, true, List__Uno_Action__typeof()),
        ::uNewFunction(".ctor", List__Uno_Action__New_2, 0, true, List__Uno_Action__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Action__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Action__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Action__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Action__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Action__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Action__Sort, 0, false, ::app::Uno::Comparison__Uno_Action__typeof()),
        ::uNewFunction("ToArray", List__Uno_Action__ToArray, 0, false, ::uGetArrayType(::app::Uno::Action__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Action__GetEnumerator_boxed(List__Uno_Action* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Action__typeof(), __this->GetEnumerator());
}

void List__Uno_Action___ObjInit(List__Uno_Action* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Action___ObjInit_1(List__Uno_Action* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Action__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Action__Add(List__Uno_Action* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Action__AddRange(List__Uno_Action* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Action::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Uno_Action::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Action__BoundsCheck(List__Uno_Action* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Action__Clear(List__Uno_Action* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Action__Contains(List__Uno_Action* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Action(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Action__EnsureCapacity(List__Uno_Action* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Action__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Action__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Action__get_Count(List__Uno_Action* __this)
{
    return __this->_used;
}

::uDelegate* List__Uno_Action__get_Item(List__Uno_Action* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Action List__Uno_Action__GetEnumerator(List__Uno_Action* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Action__New_1(NULL, __this);
}

int List__Uno_Action__IndexOf(List__Uno_Action* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Action(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Action__Insert(List__Uno_Action* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Action* List__Uno_Action__New_1(::uStatic* __this)
{
    List__Uno_Action* inst = (List__Uno_Action*)::uAllocObject(sizeof(List__Uno_Action), List__Uno_Action__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Action* List__Uno_Action__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Action* inst = (List__Uno_Action*)::uAllocObject(sizeof(List__Uno_Action), List__Uno_Action__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Action__Remove(List__Uno_Action* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Action(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Action__RemoveAt(List__Uno_Action* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Action__set_Item(List__Uno_Action* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Uno_Action__Sort(List__Uno_Action* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Action(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Action__ToArray(List__Uno_Action* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Action__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_CharPunctuationChecker_PunctuationRange__uType* List__Uno_CharPunctuationChecker_PunctuationRange__typeof()
{
    static ::uStaticStrong<List__Uno_CharPunctuationChecker_PunctuationRange__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_CharPunctuationChecker_PunctuationRange__uType*)::uAllocClassType(sizeof(List__Uno_CharPunctuationChecker_PunctuationRange__uType), "Uno.Collections.List<Uno.CharPunctuationChecker_PunctuationRange>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_CharPunctuationChecker_PunctuationRange__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_CharPunctuationChecker_PunctuationRange__typeof(), offsetof(List__Uno_CharPunctuationChecker_PunctuationRange__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_CharPunctuationChecker_PunctuationRange, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_CharPunctuationChecker_PunctuationRange, _data), ::uGetArrayType(::app::Uno::CharPunctuationChecker_PunctuationRange__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_CharPunctuationChecker_PunctuationRange, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_CharPunctuationChecker_PunctuationRange, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_CharPunctuationChecker_PunctuationRange__Add, 0, false, ::app::Uno::CharPunctuationChecker_PunctuationRange__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_CharPunctuationChecker_PunctuationRange__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_CharPunctuationChecker_PunctuationRange__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_CharPunctuationChecker_PunctuationRange__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_CharPunctuationChecker_PunctuationRange__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::CharPunctuationChecker_PunctuationRange__typeof()),
        ::uNewFunction("get_Count", List__Uno_CharPunctuationChecker_PunctuationRange__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_CharPunctuationChecker_PunctuationRange__get_Item, 0, false, ::app::Uno::CharPunctuationChecker_PunctuationRange__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_CharPunctuationChecker_PunctuationRange__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_CharPunctuationChecker_PunctuationRange__typeof()),
        ::uNewFunction("IndexOf", List__Uno_CharPunctuationChecker_PunctuationRange__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::CharPunctuationChecker_PunctuationRange__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_CharPunctuationChecker_PunctuationRange__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::CharPunctuationChecker_PunctuationRange__typeof()),
        ::uNewFunction(".ctor", List__Uno_CharPunctuationChecker_PunctuationRange__New_1, 0, true, List__Uno_CharPunctuationChecker_PunctuationRange__typeof()),
        ::uNewFunction(".ctor", List__Uno_CharPunctuationChecker_PunctuationRange__New_2, 0, true, List__Uno_CharPunctuationChecker_PunctuationRange__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_CharPunctuationChecker_PunctuationRange__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::CharPunctuationChecker_PunctuationRange__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_CharPunctuationChecker_PunctuationRange__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_CharPunctuationChecker_PunctuationRange__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::CharPunctuationChecker_PunctuationRange__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_CharPunctuationChecker_PunctuationRange__Sort, 0, false, ::app::Uno::Comparison__Uno_CharPunctuationChecker_PunctuationRange__typeof()),
        ::uNewFunction("ToArray", List__Uno_CharPunctuationChecker_PunctuationRange__ToArray, 0, false, ::uGetArrayType(::app::Uno::CharPunctuationChecker_PunctuationRange__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_CharPunctuationChecker_PunctuationRange__GetEnumerator_boxed(List__Uno_CharPunctuationChecker_PunctuationRange* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_CharPunctuationChecker_PunctuationRange__typeof(), __this->GetEnumerator());
}

void List__Uno_CharPunctuationChecker_PunctuationRange___ObjInit(List__Uno_CharPunctuationChecker_PunctuationRange* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_CharPunctuationChecker_PunctuationRange___ObjInit_1(List__Uno_CharPunctuationChecker_PunctuationRange* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::CharPunctuationChecker_PunctuationRange__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_CharPunctuationChecker_PunctuationRange__Add(List__Uno_CharPunctuationChecker_PunctuationRange* __this, ::app::Uno::CharPunctuationChecker_PunctuationRange* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_CharPunctuationChecker_PunctuationRange__AddRange(List__Uno_CharPunctuationChecker_PunctuationRange* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_CharPunctuationChecker_PunctuationRange::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::CharPunctuationChecker_PunctuationRange* i = ::app::Uno::Collections::IEnumerator__Uno_CharPunctuationChecker_PunctuationRange::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_CharPunctuationChecker_PunctuationRange__BoundsCheck(List__Uno_CharPunctuationChecker_PunctuationRange* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_CharPunctuationChecker_PunctuationRange__Clear(List__Uno_CharPunctuationChecker_PunctuationRange* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_CharPunctuationChecker_PunctuationRange__Contains(List__Uno_CharPunctuationChecker_PunctuationRange* __this, ::app::Uno::CharPunctuationChecker_PunctuationRange* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_CharPunctuationChecker_PunctuationRange(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_CharPunctuationChecker_PunctuationRange__EnsureCapacity(List__Uno_CharPunctuationChecker_PunctuationRange* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::CharPunctuationChecker_PunctuationRange__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::CharPunctuationChecker_PunctuationRange__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_CharPunctuationChecker_PunctuationRange__get_Count(List__Uno_CharPunctuationChecker_PunctuationRange* __this)
{
    return __this->_used;
}

::app::Uno::CharPunctuationChecker_PunctuationRange* List__Uno_CharPunctuationChecker_PunctuationRange__get_Item(List__Uno_CharPunctuationChecker_PunctuationRange* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_CharPunctuationChecker_PunctuationRange List__Uno_CharPunctuationChecker_PunctuationRange__GetEnumerator(List__Uno_CharPunctuationChecker_PunctuationRange* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_CharPunctuationChecker_PunctuationRange__New_1(NULL, __this);
}

int List__Uno_CharPunctuationChecker_PunctuationRange__IndexOf(List__Uno_CharPunctuationChecker_PunctuationRange* __this, ::app::Uno::CharPunctuationChecker_PunctuationRange* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_CharPunctuationChecker_PunctuationRange(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_CharPunctuationChecker_PunctuationRange__Insert(List__Uno_CharPunctuationChecker_PunctuationRange* __this, int index, ::app::Uno::CharPunctuationChecker_PunctuationRange* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_CharPunctuationChecker_PunctuationRange* List__Uno_CharPunctuationChecker_PunctuationRange__New_1(::uStatic* __this)
{
    List__Uno_CharPunctuationChecker_PunctuationRange* inst = (List__Uno_CharPunctuationChecker_PunctuationRange*)::uAllocObject(sizeof(List__Uno_CharPunctuationChecker_PunctuationRange), List__Uno_CharPunctuationChecker_PunctuationRange__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_CharPunctuationChecker_PunctuationRange* List__Uno_CharPunctuationChecker_PunctuationRange__New_2(::uStatic* __this, int capacity)
{
    List__Uno_CharPunctuationChecker_PunctuationRange* inst = (List__Uno_CharPunctuationChecker_PunctuationRange*)::uAllocObject(sizeof(List__Uno_CharPunctuationChecker_PunctuationRange), List__Uno_CharPunctuationChecker_PunctuationRange__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_CharPunctuationChecker_PunctuationRange__Remove(List__Uno_CharPunctuationChecker_PunctuationRange* __this, ::app::Uno::CharPunctuationChecker_PunctuationRange* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_CharPunctuationChecker_PunctuationRange(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_CharPunctuationChecker_PunctuationRange__RemoveAt(List__Uno_CharPunctuationChecker_PunctuationRange* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_CharPunctuationChecker_PunctuationRange__set_Item(List__Uno_CharPunctuationChecker_PunctuationRange* __this, int index, ::app::Uno::CharPunctuationChecker_PunctuationRange* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(index) = value;
    __this->_version++;
}

void List__Uno_CharPunctuationChecker_PunctuationRange__Sort(List__Uno_CharPunctuationChecker_PunctuationRange* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_CharPunctuationChecker_PunctuationRange(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_CharPunctuationChecker_PunctuationRange__ToArray(List__Uno_CharPunctuationChecker_PunctuationRange* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::CharPunctuationChecker_PunctuationRange__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::CharPunctuationChecker_PunctuationRange*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___uType* List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___typeof()
{
    static ::uStaticStrong<List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___uType*)::uAllocClassType(sizeof(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___uType), "Uno.Collections.List<Uno.Collections.ConcurrentCollection1_ModItem<Fuse.Animations.IMixerMaster>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___typeof(), offsetof(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_, _data), ::uGetArrayType(::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Add, 0, false, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof()),
        ::uNewFunction("get_Count", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___get_Item, 0, false, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___typeof()),
        ::uNewFunction("IndexOf", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof()),
        ::uNewFunction(".ctor", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___New_1, 0, true, List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___typeof()),
        ::uNewFunction(".ctor", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___New_2, 0, true, List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Sort, 0, false, ::app::Uno::Comparison__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___typeof()),
        ::uNewFunction("ToArray", List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___ToArray, 0, false, ::uGetArrayType(::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___GetEnumerator_boxed(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___typeof(), __this->GetEnumerator());
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster____ObjInit(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster____ObjInit_1(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Add(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___AddRange(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster i = ::app::Uno::Collections::IEnumerator__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___BoundsCheck(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Clear(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Contains(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___EnsureCapacity(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___get_Count(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this)
{
    return __this->_used;
}

::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___get_Item(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_ List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___GetEnumerator(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___New_1(NULL, __this);
}

int List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___IndexOf(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Insert(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, int index, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___New_1(::uStatic* __this)
{
    List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* inst = (List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_*)::uAllocObject(sizeof(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_), List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___New_2(::uStatic* __this, int capacity)
{
    List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* inst = (List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_*)::uAllocObject(sizeof(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_), List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Remove(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___RemoveAt(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(__this->_used) = ::uDefault< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>();
    __this->_version++;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___set_Item(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, int index, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(index) = value;
    __this->_version++;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___Sort(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster___ToArray(List__Uno_Collections_ConcurrentCollection1_ModItem_Fuse_Animations_IMixerMaster_* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Fuse_Animations_IMixerMaster>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___uType* List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___typeof()
{
    static ::uStaticStrong<List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___uType*)::uAllocClassType(sizeof(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___uType), "Uno.Collections.List<Uno.Collections.ConcurrentCollection1_ModItem<Uno.EventHandler>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___typeof(), offsetof(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_, _data), ::uGetArrayType(::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Add, 0, false, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof()),
        ::uNewFunction("get_Count", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___get_Item, 0, false, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___typeof()),
        ::uNewFunction("IndexOf", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof()),
        ::uNewFunction(".ctor", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___New_1, 0, true, List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___typeof()),
        ::uNewFunction(".ctor", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___New_2, 0, true, List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Sort, 0, false, ::app::Uno::Comparison__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___typeof()),
        ::uNewFunction("ToArray", List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___ToArray, 0, false, ::uGetArrayType(::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___GetEnumerator_boxed(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___typeof(), __this->GetEnumerator());
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler____ObjInit(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler____ObjInit_1(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Add(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___AddRange(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler i = ::app::Uno::Collections::IEnumerator__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___BoundsCheck(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Clear(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Contains(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___EnsureCapacity(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___get_Count(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this)
{
    return __this->_used;
}

::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___get_Item(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_ List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___GetEnumerator(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___New_1(NULL, __this);
}

int List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___IndexOf(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Insert(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, int index, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___New_1(::uStatic* __this)
{
    List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* inst = (List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_*)::uAllocObject(sizeof(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_), List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___New_2(::uStatic* __this, int capacity)
{
    List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* inst = (List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_*)::uAllocObject(sizeof(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_), List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Remove(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___RemoveAt(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(__this->_used) = ::uDefault< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>();
    __this->_version++;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___set_Item(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, int index, ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(index) = value;
    __this->_version++;
}

void List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___Sort(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler___ToArray(List__Uno_Collections_ConcurrentCollection1_ModItem_Uno_EventHandler_* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::ConcurrentCollection1_ModItem__Uno_EventHandler>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___uType* List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof()
{
    static ::uStaticStrong<List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___uType*)::uAllocClassType(sizeof(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___uType), "Uno.Collections.List<Uno.Collections.Dictionary<Outracks.Simulator.Bytecode.TypeName,Uno.Type>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof(), offsetof(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_, _data), ::uGetArrayType(::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Add, 0, false, ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunction("get_Count", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___get_Item, 0, false, ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof()),
        ::uNewFunction("IndexOf", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunction(".ctor", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___New_1, 0, true, List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof()),
        ::uNewFunction(".ctor", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___New_2, 0, true, List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Sort, 0, false, ::app::Uno::Comparison__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof()),
        ::uNewFunction("ToArray", List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___ToArray, 0, false, ::uGetArrayType(::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___GetEnumerator_boxed(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof(), __this->GetEnumerator());
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type____ObjInit(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type____ObjInit_1(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Add(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___AddRange(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* i = ::app::Uno::Collections::IEnumerator__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___BoundsCheck(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Clear(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Contains(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___EnsureCapacity(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___get_Count(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this)
{
    return __this->_used;
}

::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___get_Item(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_ List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___GetEnumerator(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___New_1(NULL, __this);
}

int List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___IndexOf(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Insert(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, int index, ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___New_1(::uStatic* __this)
{
    List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* inst = (List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_*)::uAllocObject(sizeof(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_), List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___New_2(::uStatic* __this, int capacity)
{
    List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* inst = (List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_*)::uAllocObject(sizeof(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_), List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Remove(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___RemoveAt(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___set_Item(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, int index, ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(index) = value;
    __this->_version++;
}

void List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___Sort(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type___ToArray(List__Uno_Collections_Dictionary_Outracks_Simulator_Bytecode_TypeName_Uno_Type_* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Collections::Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Models_ModelDrawable__uType* List__Uno_Content_Models_ModelDrawable__typeof()
{
    static ::uStaticStrong<List__Uno_Content_Models_ModelDrawable__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Models_ModelDrawable__uType*)::uAllocClassType(sizeof(List__Uno_Content_Models_ModelDrawable__uType), "Uno.Collections.List<Uno.Content.Models.ModelDrawable>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Models_ModelDrawable__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelDrawable__typeof(), offsetof(List__Uno_Content_Models_ModelDrawable__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Models_ModelDrawable, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Models_ModelDrawable, _data), ::uGetArrayType(::app::Uno::Content::Models::ModelDrawable__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Models_ModelDrawable, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Models_ModelDrawable, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Models_ModelDrawable__Add, 0, false, ::app::Uno::Content::Models::ModelDrawable__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Models_ModelDrawable__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelDrawable__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Models_ModelDrawable__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Models_ModelDrawable__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::ModelDrawable__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Models_ModelDrawable__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Models_ModelDrawable__get_Item, 0, false, ::app::Uno::Content::Models::ModelDrawable__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Models_ModelDrawable__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelDrawable__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Models_ModelDrawable__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelDrawable__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Models_ModelDrawable__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelDrawable__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_ModelDrawable__New_1, 0, true, List__Uno_Content_Models_ModelDrawable__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_ModelDrawable__New_2, 0, true, List__Uno_Content_Models_ModelDrawable__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Models_ModelDrawable__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::ModelDrawable__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Models_ModelDrawable__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Models_ModelDrawable__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelDrawable__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Models_ModelDrawable__Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Models_ModelDrawable__typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Models_ModelDrawable__ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Models::ModelDrawable__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Models_ModelDrawable__GetEnumerator_boxed(List__Uno_Content_Models_ModelDrawable* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelDrawable__typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Models_ModelDrawable___ObjInit(List__Uno_Content_Models_ModelDrawable* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Models_ModelDrawable___ObjInit_1(List__Uno_Content_Models_ModelDrawable* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Models::ModelDrawable__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Models_ModelDrawable__Add(List__Uno_Content_Models_ModelDrawable* __this, ::app::Uno::Content::Models::ModelDrawable* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelDrawable*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Models_ModelDrawable__AddRange(List__Uno_Content_Models_ModelDrawable* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelDrawable::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Models::ModelDrawable* i = ::app::Uno::Collections::IEnumerator__Uno_Content_Models_ModelDrawable::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Models_ModelDrawable__BoundsCheck(List__Uno_Content_Models_ModelDrawable* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Models_ModelDrawable__Clear(List__Uno_Content_Models_ModelDrawable* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Models_ModelDrawable__Contains(List__Uno_Content_Models_ModelDrawable* __this, ::app::Uno::Content::Models::ModelDrawable* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelDrawable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelDrawable*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_ModelDrawable__EnsureCapacity(List__Uno_Content_Models_ModelDrawable* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Models::ModelDrawable__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Models::ModelDrawable__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Content::Models::ModelDrawable*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelDrawable*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Models_ModelDrawable__get_Count(List__Uno_Content_Models_ModelDrawable* __this)
{
    return __this->_used;
}

::app::Uno::Content::Models::ModelDrawable* List__Uno_Content_Models_ModelDrawable__get_Item(List__Uno_Content_Models_ModelDrawable* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelDrawable*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelDrawable List__Uno_Content_Models_ModelDrawable__GetEnumerator(List__Uno_Content_Models_ModelDrawable* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelDrawable__New_1(NULL, __this);
}

int List__Uno_Content_Models_ModelDrawable__IndexOf(List__Uno_Content_Models_ModelDrawable* __this, ::app::Uno::Content::Models::ModelDrawable* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelDrawable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelDrawable*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Models_ModelDrawable__Insert(List__Uno_Content_Models_ModelDrawable* __this, int index, ::app::Uno::Content::Models::ModelDrawable* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelDrawable*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelDrawable*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelDrawable*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Models_ModelDrawable* List__Uno_Content_Models_ModelDrawable__New_1(::uStatic* __this)
{
    List__Uno_Content_Models_ModelDrawable* inst = (List__Uno_Content_Models_ModelDrawable*)::uAllocObject(sizeof(List__Uno_Content_Models_ModelDrawable), List__Uno_Content_Models_ModelDrawable__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Models_ModelDrawable* List__Uno_Content_Models_ModelDrawable__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Models_ModelDrawable* inst = (List__Uno_Content_Models_ModelDrawable*)::uAllocObject(sizeof(List__Uno_Content_Models_ModelDrawable), List__Uno_Content_Models_ModelDrawable__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Models_ModelDrawable__Remove(List__Uno_Content_Models_ModelDrawable* __this, ::app::Uno::Content::Models::ModelDrawable* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelDrawable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelDrawable*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_ModelDrawable__RemoveAt(List__Uno_Content_Models_ModelDrawable* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelDrawable*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelDrawable*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelDrawable*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Content_Models_ModelDrawable__set_Item(List__Uno_Content_Models_ModelDrawable* __this, int index, ::app::Uno::Content::Models::ModelDrawable* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelDrawable*>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Models_ModelDrawable__Sort(List__Uno_Content_Models_ModelDrawable* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Models_ModelDrawable(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Models_ModelDrawable__ToArray(List__Uno_Content_Models_ModelDrawable* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Models::ModelDrawable__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Content::Models::ModelDrawable*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelDrawable*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Models_ModelNode__uType* List__Uno_Content_Models_ModelNode__typeof()
{
    static ::uStaticStrong<List__Uno_Content_Models_ModelNode__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Models_ModelNode__uType*)::uAllocClassType(sizeof(List__Uno_Content_Models_ModelNode__uType), "Uno.Collections.List<Uno.Content.Models.ModelNode>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Models_ModelNode__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelNode__typeof(), offsetof(List__Uno_Content_Models_ModelNode__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Models_ModelNode, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Models_ModelNode, _data), ::uGetArrayType(::app::Uno::Content::Models::ModelNode__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Models_ModelNode, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Models_ModelNode, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Models_ModelNode__Add, 0, false, ::app::Uno::Content::Models::ModelNode__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Models_ModelNode__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelNode__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Models_ModelNode__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Models_ModelNode__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::ModelNode__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Models_ModelNode__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Models_ModelNode__get_Item, 0, false, ::app::Uno::Content::Models::ModelNode__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Models_ModelNode__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelNode__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Models_ModelNode__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelNode__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Models_ModelNode__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelNode__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_ModelNode__New_1, 0, true, List__Uno_Content_Models_ModelNode__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_ModelNode__New_2, 0, true, List__Uno_Content_Models_ModelNode__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Models_ModelNode__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::ModelNode__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Models_ModelNode__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Models_ModelNode__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelNode__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Models_ModelNode__Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Models_ModelNode__typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Models_ModelNode__ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Models::ModelNode__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Models_ModelNode__GetEnumerator_boxed(List__Uno_Content_Models_ModelNode* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelNode__typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Models_ModelNode___ObjInit(List__Uno_Content_Models_ModelNode* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Models_ModelNode___ObjInit_1(List__Uno_Content_Models_ModelNode* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Models::ModelNode__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Models_ModelNode__Add(List__Uno_Content_Models_ModelNode* __this, ::app::Uno::Content::Models::ModelNode* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelNode*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Models_ModelNode__AddRange(List__Uno_Content_Models_ModelNode* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelNode::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Models::ModelNode* i = ::app::Uno::Collections::IEnumerator__Uno_Content_Models_ModelNode::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Models_ModelNode__BoundsCheck(List__Uno_Content_Models_ModelNode* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Models_ModelNode__Clear(List__Uno_Content_Models_ModelNode* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Models_ModelNode__Contains(List__Uno_Content_Models_ModelNode* __this, ::app::Uno::Content::Models::ModelNode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelNode(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelNode*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_ModelNode__EnsureCapacity(List__Uno_Content_Models_ModelNode* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Models::ModelNode__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Models::ModelNode__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Content::Models::ModelNode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelNode*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Models_ModelNode__get_Count(List__Uno_Content_Models_ModelNode* __this)
{
    return __this->_used;
}

::app::Uno::Content::Models::ModelNode* List__Uno_Content_Models_ModelNode__get_Item(List__Uno_Content_Models_ModelNode* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelNode*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelNode List__Uno_Content_Models_ModelNode__GetEnumerator(List__Uno_Content_Models_ModelNode* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelNode__New_1(NULL, __this);
}

int List__Uno_Content_Models_ModelNode__IndexOf(List__Uno_Content_Models_ModelNode* __this, ::app::Uno::Content::Models::ModelNode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelNode(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelNode*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Models_ModelNode__Insert(List__Uno_Content_Models_ModelNode* __this, int index, ::app::Uno::Content::Models::ModelNode* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelNode*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelNode*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelNode*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Models_ModelNode* List__Uno_Content_Models_ModelNode__New_1(::uStatic* __this)
{
    List__Uno_Content_Models_ModelNode* inst = (List__Uno_Content_Models_ModelNode*)::uAllocObject(sizeof(List__Uno_Content_Models_ModelNode), List__Uno_Content_Models_ModelNode__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Models_ModelNode* List__Uno_Content_Models_ModelNode__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Models_ModelNode* inst = (List__Uno_Content_Models_ModelNode*)::uAllocObject(sizeof(List__Uno_Content_Models_ModelNode), List__Uno_Content_Models_ModelNode__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Models_ModelNode__Remove(List__Uno_Content_Models_ModelNode* __this, ::app::Uno::Content::Models::ModelNode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelNode(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelNode*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_ModelNode__RemoveAt(List__Uno_Content_Models_ModelNode* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelNode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelNode*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelNode*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Content_Models_ModelNode__set_Item(List__Uno_Content_Models_ModelNode* __this, int index, ::app::Uno::Content::Models::ModelNode* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelNode*>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Models_ModelNode__Sort(List__Uno_Content_Models_ModelNode* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Models_ModelNode(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Models_ModelNode__ToArray(List__Uno_Content_Models_ModelNode* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Models::ModelNode__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Content::Models::ModelNode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelNode*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Models_ModelParameter_float4x4___uType* List__Uno_Content_Models_ModelParameter_float4x4___typeof()
{
    static ::uStaticStrong<List__Uno_Content_Models_ModelParameter_float4x4___uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Models_ModelParameter_float4x4___uType*)::uAllocClassType(sizeof(List__Uno_Content_Models_ModelParameter_float4x4___uType), "Uno.Collections.List<Uno.Content.Models.ModelParameter<float4x4>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Models_ModelParameter_float4x4___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelParameter_float4x4___typeof(), offsetof(List__Uno_Content_Models_ModelParameter_float4x4___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Models_ModelParameter_float4x4_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Models_ModelParameter_float4x4_, _data), ::uGetArrayType(::app::Uno::Content::Models::ModelParameter__float4x4__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Models_ModelParameter_float4x4_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Models_ModelParameter_float4x4_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Models_ModelParameter_float4x4___Add, 0, false, ::app::Uno::Content::Models::ModelParameter__float4x4__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Models_ModelParameter_float4x4___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelParameter_float4x4___typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Models_ModelParameter_float4x4___Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Models_ModelParameter_float4x4___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::ModelParameter__float4x4__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Models_ModelParameter_float4x4___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Models_ModelParameter_float4x4___get_Item, 0, false, ::app::Uno::Content::Models::ModelParameter__float4x4__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Models_ModelParameter_float4x4___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelParameter_float4x4___typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Models_ModelParameter_float4x4___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelParameter__float4x4__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Models_ModelParameter_float4x4___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelParameter__float4x4__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_ModelParameter_float4x4___New_1, 0, true, List__Uno_Content_Models_ModelParameter_float4x4___typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_ModelParameter_float4x4___New_2, 0, true, List__Uno_Content_Models_ModelParameter_float4x4___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Models_ModelParameter_float4x4___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::ModelParameter__float4x4__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Models_ModelParameter_float4x4___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Models_ModelParameter_float4x4___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelParameter__float4x4__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Models_ModelParameter_float4x4___Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Models_ModelParameter_float4x4___typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Models_ModelParameter_float4x4___ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Models::ModelParameter__float4x4__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Models_ModelParameter_float4x4___GetEnumerator_boxed(List__Uno_Content_Models_ModelParameter_float4x4_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelParameter_float4x4___typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Models_ModelParameter_float4x4____ObjInit(List__Uno_Content_Models_ModelParameter_float4x4_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Models_ModelParameter_float4x4____ObjInit_1(List__Uno_Content_Models_ModelParameter_float4x4_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Models::ModelParameter__float4x4__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Models_ModelParameter_float4x4___Add(List__Uno_Content_Models_ModelParameter_float4x4_* __this, ::app::Uno::Content::Models::ModelParameter__float4x4* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelParameter__float4x4*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Models_ModelParameter_float4x4___AddRange(List__Uno_Content_Models_ModelParameter_float4x4_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelParameter_float4x4_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Models::ModelParameter__float4x4* i = ::app::Uno::Collections::IEnumerator__Uno_Content_Models_ModelParameter_float4x4_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Models_ModelParameter_float4x4___BoundsCheck(List__Uno_Content_Models_ModelParameter_float4x4_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Models_ModelParameter_float4x4___Clear(List__Uno_Content_Models_ModelParameter_float4x4_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Models_ModelParameter_float4x4___Contains(List__Uno_Content_Models_ModelParameter_float4x4_* __this, ::app::Uno::Content::Models::ModelParameter__float4x4* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelParameter_float4x4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_ModelParameter_float4x4___EnsureCapacity(List__Uno_Content_Models_ModelParameter_float4x4_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Models::ModelParameter__float4x4__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Models::ModelParameter__float4x4__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Models_ModelParameter_float4x4___get_Count(List__Uno_Content_Models_ModelParameter_float4x4_* __this)
{
    return __this->_used;
}

::app::Uno::Content::Models::ModelParameter__float4x4* List__Uno_Content_Models_ModelParameter_float4x4___get_Item(List__Uno_Content_Models_ModelParameter_float4x4_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelParameter__float4x4*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelParameter_float4x4_ List__Uno_Content_Models_ModelParameter_float4x4___GetEnumerator(List__Uno_Content_Models_ModelParameter_float4x4_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelParameter_float4x4___New_1(NULL, __this);
}

int List__Uno_Content_Models_ModelParameter_float4x4___IndexOf(List__Uno_Content_Models_ModelParameter_float4x4_* __this, ::app::Uno::Content::Models::ModelParameter__float4x4* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelParameter_float4x4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Models_ModelParameter_float4x4___Insert(List__Uno_Content_Models_ModelParameter_float4x4_* __this, int index, ::app::Uno::Content::Models::ModelParameter__float4x4* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelParameter__float4x4*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Models_ModelParameter_float4x4_* List__Uno_Content_Models_ModelParameter_float4x4___New_1(::uStatic* __this)
{
    List__Uno_Content_Models_ModelParameter_float4x4_* inst = (List__Uno_Content_Models_ModelParameter_float4x4_*)::uAllocObject(sizeof(List__Uno_Content_Models_ModelParameter_float4x4_), List__Uno_Content_Models_ModelParameter_float4x4___typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Models_ModelParameter_float4x4_* List__Uno_Content_Models_ModelParameter_float4x4___New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Models_ModelParameter_float4x4_* inst = (List__Uno_Content_Models_ModelParameter_float4x4_*)::uAllocObject(sizeof(List__Uno_Content_Models_ModelParameter_float4x4_), List__Uno_Content_Models_ModelParameter_float4x4___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Models_ModelParameter_float4x4___Remove(List__Uno_Content_Models_ModelParameter_float4x4_* __this, ::app::Uno::Content::Models::ModelParameter__float4x4* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelParameter_float4x4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_ModelParameter_float4x4___RemoveAt(List__Uno_Content_Models_ModelParameter_float4x4_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelParameter__float4x4*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Content_Models_ModelParameter_float4x4___set_Item(List__Uno_Content_Models_ModelParameter_float4x4_* __this, int index, ::app::Uno::Content::Models::ModelParameter__float4x4* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelParameter__float4x4*>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Models_ModelParameter_float4x4___Sort(List__Uno_Content_Models_ModelParameter_float4x4_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Models_ModelParameter_float4x4_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Models_ModelParameter_float4x4___ToArray(List__Uno_Content_Models_ModelParameter_float4x4_* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Models::ModelParameter__float4x4__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelParameter__float4x4*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Models_ModelSkin__uType* List__Uno_Content_Models_ModelSkin__typeof()
{
    static ::uStaticStrong<List__Uno_Content_Models_ModelSkin__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Models_ModelSkin__uType*)::uAllocClassType(sizeof(List__Uno_Content_Models_ModelSkin__uType), "Uno.Collections.List<Uno.Content.Models.ModelSkin>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Models_ModelSkin__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelSkin__typeof(), offsetof(List__Uno_Content_Models_ModelSkin__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Models_ModelSkin, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Models_ModelSkin, _data), ::uGetArrayType(::app::Uno::Content::Models::ModelSkin__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Models_ModelSkin, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Models_ModelSkin, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Models_ModelSkin__Add, 0, false, ::app::Uno::Content::Models::ModelSkin__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Models_ModelSkin__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelSkin__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Models_ModelSkin__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Models_ModelSkin__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::ModelSkin__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Models_ModelSkin__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Models_ModelSkin__get_Item, 0, false, ::app::Uno::Content::Models::ModelSkin__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Models_ModelSkin__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelSkin__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Models_ModelSkin__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelSkin__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Models_ModelSkin__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelSkin__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_ModelSkin__New_1, 0, true, List__Uno_Content_Models_ModelSkin__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_ModelSkin__New_2, 0, true, List__Uno_Content_Models_ModelSkin__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Models_ModelSkin__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::ModelSkin__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Models_ModelSkin__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Models_ModelSkin__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::ModelSkin__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Models_ModelSkin__Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Models_ModelSkin__typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Models_ModelSkin__ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Models::ModelSkin__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Models_ModelSkin__GetEnumerator_boxed(List__Uno_Content_Models_ModelSkin* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelSkin__typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Models_ModelSkin___ObjInit(List__Uno_Content_Models_ModelSkin* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Models_ModelSkin___ObjInit_1(List__Uno_Content_Models_ModelSkin* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Models::ModelSkin__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Models_ModelSkin__Add(List__Uno_Content_Models_ModelSkin* __this, ::app::Uno::Content::Models::ModelSkin* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelSkin*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Models_ModelSkin__AddRange(List__Uno_Content_Models_ModelSkin* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Models_ModelSkin::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Models::ModelSkin* i = ::app::Uno::Collections::IEnumerator__Uno_Content_Models_ModelSkin::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Models_ModelSkin__BoundsCheck(List__Uno_Content_Models_ModelSkin* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Models_ModelSkin__Clear(List__Uno_Content_Models_ModelSkin* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Models_ModelSkin__Contains(List__Uno_Content_Models_ModelSkin* __this, ::app::Uno::Content::Models::ModelSkin* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelSkin(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelSkin*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_ModelSkin__EnsureCapacity(List__Uno_Content_Models_ModelSkin* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Models::ModelSkin__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Models::ModelSkin__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Content::Models::ModelSkin*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelSkin*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Models_ModelSkin__get_Count(List__Uno_Content_Models_ModelSkin* __this)
{
    return __this->_used;
}

::app::Uno::Content::Models::ModelSkin* List__Uno_Content_Models_ModelSkin__get_Item(List__Uno_Content_Models_ModelSkin* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelSkin*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelSkin List__Uno_Content_Models_ModelSkin__GetEnumerator(List__Uno_Content_Models_ModelSkin* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_ModelSkin__New_1(NULL, __this);
}

int List__Uno_Content_Models_ModelSkin__IndexOf(List__Uno_Content_Models_ModelSkin* __this, ::app::Uno::Content::Models::ModelSkin* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelSkin(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelSkin*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Models_ModelSkin__Insert(List__Uno_Content_Models_ModelSkin* __this, int index, ::app::Uno::Content::Models::ModelSkin* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelSkin*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelSkin*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelSkin*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Models_ModelSkin* List__Uno_Content_Models_ModelSkin__New_1(::uStatic* __this)
{
    List__Uno_Content_Models_ModelSkin* inst = (List__Uno_Content_Models_ModelSkin*)::uAllocObject(sizeof(List__Uno_Content_Models_ModelSkin), List__Uno_Content_Models_ModelSkin__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Models_ModelSkin* List__Uno_Content_Models_ModelSkin__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Models_ModelSkin* inst = (List__Uno_Content_Models_ModelSkin*)::uAllocObject(sizeof(List__Uno_Content_Models_ModelSkin), List__Uno_Content_Models_ModelSkin__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Models_ModelSkin__Remove(List__Uno_Content_Models_ModelSkin* __this, ::app::Uno::Content::Models::ModelSkin* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_ModelSkin(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelSkin*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_ModelSkin__RemoveAt(List__Uno_Content_Models_ModelSkin* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelSkin*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelSkin*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelSkin*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Content_Models_ModelSkin__set_Item(List__Uno_Content_Models_ModelSkin* __this, int index, ::app::Uno::Content::Models::ModelSkin* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::ModelSkin*>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Models_ModelSkin__Sort(List__Uno_Content_Models_ModelSkin* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Models_ModelSkin(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Models_ModelSkin__ToArray(List__Uno_Content_Models_ModelSkin* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Models::ModelSkin__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Content::Models::ModelSkin*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::ModelSkin*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Models_SkinBone__uType* List__Uno_Content_Models_SkinBone__typeof()
{
    static ::uStaticStrong<List__Uno_Content_Models_SkinBone__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Models_SkinBone__uType*)::uAllocClassType(sizeof(List__Uno_Content_Models_SkinBone__uType), "Uno.Collections.List<Uno.Content.Models.SkinBone>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Models_SkinBone__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Models_SkinBone__typeof(), offsetof(List__Uno_Content_Models_SkinBone__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Models_SkinBone, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Models_SkinBone, _data), ::uGetArrayType(::app::Uno::Content::Models::SkinBone__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Models_SkinBone, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Models_SkinBone, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Models_SkinBone__Add, 0, false, ::app::Uno::Content::Models::SkinBone__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Models_SkinBone__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Models_SkinBone__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Models_SkinBone__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Models_SkinBone__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::SkinBone__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Models_SkinBone__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Models_SkinBone__get_Item, 0, false, ::app::Uno::Content::Models::SkinBone__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Models_SkinBone__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_SkinBone__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Models_SkinBone__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::SkinBone__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Models_SkinBone__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::SkinBone__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_SkinBone__New_1, 0, true, List__Uno_Content_Models_SkinBone__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_SkinBone__New_2, 0, true, List__Uno_Content_Models_SkinBone__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Models_SkinBone__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::SkinBone__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Models_SkinBone__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Models_SkinBone__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::SkinBone__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Models_SkinBone__Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Models_SkinBone__typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Models_SkinBone__ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Models::SkinBone__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Models_SkinBone__GetEnumerator_boxed(List__Uno_Content_Models_SkinBone* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_SkinBone__typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Models_SkinBone___ObjInit(List__Uno_Content_Models_SkinBone* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Models_SkinBone___ObjInit_1(List__Uno_Content_Models_SkinBone* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Models::SkinBone__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Models_SkinBone__Add(List__Uno_Content_Models_SkinBone* __this, ::app::Uno::Content::Models::SkinBone* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinBone*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Models_SkinBone__AddRange(List__Uno_Content_Models_SkinBone* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Models_SkinBone::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Models::SkinBone* i = ::app::Uno::Collections::IEnumerator__Uno_Content_Models_SkinBone::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Models_SkinBone__BoundsCheck(List__Uno_Content_Models_SkinBone* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Models_SkinBone__Clear(List__Uno_Content_Models_SkinBone* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Models_SkinBone__Contains(List__Uno_Content_Models_SkinBone* __this, ::app::Uno::Content::Models::SkinBone* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_SkinBone(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinBone*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_SkinBone__EnsureCapacity(List__Uno_Content_Models_SkinBone* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Models::SkinBone__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Models::SkinBone__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Content::Models::SkinBone*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinBone*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Models_SkinBone__get_Count(List__Uno_Content_Models_SkinBone* __this)
{
    return __this->_used;
}

::app::Uno::Content::Models::SkinBone* List__Uno_Content_Models_SkinBone__get_Item(List__Uno_Content_Models_SkinBone* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinBone*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_SkinBone List__Uno_Content_Models_SkinBone__GetEnumerator(List__Uno_Content_Models_SkinBone* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_SkinBone__New_1(NULL, __this);
}

int List__Uno_Content_Models_SkinBone__IndexOf(List__Uno_Content_Models_SkinBone* __this, ::app::Uno::Content::Models::SkinBone* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_SkinBone(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinBone*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Models_SkinBone__Insert(List__Uno_Content_Models_SkinBone* __this, int index, ::app::Uno::Content::Models::SkinBone* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinBone*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinBone*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinBone*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Models_SkinBone* List__Uno_Content_Models_SkinBone__New_1(::uStatic* __this)
{
    List__Uno_Content_Models_SkinBone* inst = (List__Uno_Content_Models_SkinBone*)::uAllocObject(sizeof(List__Uno_Content_Models_SkinBone), List__Uno_Content_Models_SkinBone__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Models_SkinBone* List__Uno_Content_Models_SkinBone__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Models_SkinBone* inst = (List__Uno_Content_Models_SkinBone*)::uAllocObject(sizeof(List__Uno_Content_Models_SkinBone), List__Uno_Content_Models_SkinBone__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Models_SkinBone__Remove(List__Uno_Content_Models_SkinBone* __this, ::app::Uno::Content::Models::SkinBone* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_SkinBone(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinBone*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_SkinBone__RemoveAt(List__Uno_Content_Models_SkinBone* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinBone*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinBone*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinBone*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Content_Models_SkinBone__set_Item(List__Uno_Content_Models_SkinBone* __this, int index, ::app::Uno::Content::Models::SkinBone* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinBone*>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Models_SkinBone__Sort(List__Uno_Content_Models_SkinBone* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Models_SkinBone(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Models_SkinBone__ToArray(List__Uno_Content_Models_SkinBone* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Models::SkinBone__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Content::Models::SkinBone*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinBone*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Models_SkinDrawable__uType* List__Uno_Content_Models_SkinDrawable__typeof()
{
    static ::uStaticStrong<List__Uno_Content_Models_SkinDrawable__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Models_SkinDrawable__uType*)::uAllocClassType(sizeof(List__Uno_Content_Models_SkinDrawable__uType), "Uno.Collections.List<Uno.Content.Models.SkinDrawable>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Models_SkinDrawable__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Models_SkinDrawable__typeof(), offsetof(List__Uno_Content_Models_SkinDrawable__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Models_SkinDrawable, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Models_SkinDrawable, _data), ::uGetArrayType(::app::Uno::Content::Models::SkinDrawable__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Models_SkinDrawable, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Models_SkinDrawable, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Models_SkinDrawable__Add, 0, false, ::app::Uno::Content::Models::SkinDrawable__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Models_SkinDrawable__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Models_SkinDrawable__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Models_SkinDrawable__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Models_SkinDrawable__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::SkinDrawable__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Models_SkinDrawable__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Models_SkinDrawable__get_Item, 0, false, ::app::Uno::Content::Models::SkinDrawable__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Models_SkinDrawable__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_SkinDrawable__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Models_SkinDrawable__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::SkinDrawable__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Models_SkinDrawable__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::SkinDrawable__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_SkinDrawable__New_1, 0, true, List__Uno_Content_Models_SkinDrawable__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_SkinDrawable__New_2, 0, true, List__Uno_Content_Models_SkinDrawable__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Models_SkinDrawable__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::SkinDrawable__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Models_SkinDrawable__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Models_SkinDrawable__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::SkinDrawable__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Models_SkinDrawable__Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Models_SkinDrawable__typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Models_SkinDrawable__ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Models::SkinDrawable__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Models_SkinDrawable__GetEnumerator_boxed(List__Uno_Content_Models_SkinDrawable* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_SkinDrawable__typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Models_SkinDrawable___ObjInit(List__Uno_Content_Models_SkinDrawable* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Models_SkinDrawable___ObjInit_1(List__Uno_Content_Models_SkinDrawable* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Models::SkinDrawable__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Models_SkinDrawable__Add(List__Uno_Content_Models_SkinDrawable* __this, ::app::Uno::Content::Models::SkinDrawable* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinDrawable*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Models_SkinDrawable__AddRange(List__Uno_Content_Models_SkinDrawable* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Models_SkinDrawable::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Models::SkinDrawable* i = ::app::Uno::Collections::IEnumerator__Uno_Content_Models_SkinDrawable::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Models_SkinDrawable__BoundsCheck(List__Uno_Content_Models_SkinDrawable* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Models_SkinDrawable__Clear(List__Uno_Content_Models_SkinDrawable* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Models_SkinDrawable__Contains(List__Uno_Content_Models_SkinDrawable* __this, ::app::Uno::Content::Models::SkinDrawable* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_SkinDrawable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinDrawable*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_SkinDrawable__EnsureCapacity(List__Uno_Content_Models_SkinDrawable* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Models::SkinDrawable__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Models::SkinDrawable__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Content::Models::SkinDrawable*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinDrawable*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Models_SkinDrawable__get_Count(List__Uno_Content_Models_SkinDrawable* __this)
{
    return __this->_used;
}

::app::Uno::Content::Models::SkinDrawable* List__Uno_Content_Models_SkinDrawable__get_Item(List__Uno_Content_Models_SkinDrawable* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinDrawable*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_SkinDrawable List__Uno_Content_Models_SkinDrawable__GetEnumerator(List__Uno_Content_Models_SkinDrawable* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_SkinDrawable__New_1(NULL, __this);
}

int List__Uno_Content_Models_SkinDrawable__IndexOf(List__Uno_Content_Models_SkinDrawable* __this, ::app::Uno::Content::Models::SkinDrawable* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_SkinDrawable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinDrawable*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Models_SkinDrawable__Insert(List__Uno_Content_Models_SkinDrawable* __this, int index, ::app::Uno::Content::Models::SkinDrawable* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinDrawable*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinDrawable*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinDrawable*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Models_SkinDrawable* List__Uno_Content_Models_SkinDrawable__New_1(::uStatic* __this)
{
    List__Uno_Content_Models_SkinDrawable* inst = (List__Uno_Content_Models_SkinDrawable*)::uAllocObject(sizeof(List__Uno_Content_Models_SkinDrawable), List__Uno_Content_Models_SkinDrawable__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Models_SkinDrawable* List__Uno_Content_Models_SkinDrawable__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Models_SkinDrawable* inst = (List__Uno_Content_Models_SkinDrawable*)::uAllocObject(sizeof(List__Uno_Content_Models_SkinDrawable), List__Uno_Content_Models_SkinDrawable__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Models_SkinDrawable__Remove(List__Uno_Content_Models_SkinDrawable* __this, ::app::Uno::Content::Models::SkinDrawable* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_SkinDrawable(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinDrawable*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_SkinDrawable__RemoveAt(List__Uno_Content_Models_SkinDrawable* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinDrawable*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinDrawable*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinDrawable*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Content_Models_SkinDrawable__set_Item(List__Uno_Content_Models_SkinDrawable* __this, int index, ::app::Uno::Content::Models::SkinDrawable* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::SkinDrawable*>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Models_SkinDrawable__Sort(List__Uno_Content_Models_SkinDrawable* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Models_SkinDrawable(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Models_SkinDrawable__ToArray(List__Uno_Content_Models_SkinDrawable* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Models::SkinDrawable__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Content::Models::SkinDrawable*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::SkinDrawable*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Models_VertexInfluence__uType* List__Uno_Content_Models_VertexInfluence__typeof()
{
    static ::uStaticStrong<List__Uno_Content_Models_VertexInfluence__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Models_VertexInfluence__uType*)::uAllocClassType(sizeof(List__Uno_Content_Models_VertexInfluence__uType), "Uno.Collections.List<Uno.Content.Models.VertexInfluence>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Models_VertexInfluence__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Models_VertexInfluence__typeof(), offsetof(List__Uno_Content_Models_VertexInfluence__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Models_VertexInfluence, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Models_VertexInfluence, _data), ::uGetArrayType(::app::Uno::Content::Models::VertexInfluence__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Models_VertexInfluence, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Models_VertexInfluence, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Models_VertexInfluence__Add, 0, false, ::app::Uno::Content::Models::VertexInfluence__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Models_VertexInfluence__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Models_VertexInfluence__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Models_VertexInfluence__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Models_VertexInfluence__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::VertexInfluence__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Models_VertexInfluence__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Models_VertexInfluence__get_Item, 0, false, ::app::Uno::Content::Models::VertexInfluence__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Models_VertexInfluence__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_VertexInfluence__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Models_VertexInfluence__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::VertexInfluence__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Models_VertexInfluence__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::VertexInfluence__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_VertexInfluence__New_1, 0, true, List__Uno_Content_Models_VertexInfluence__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Models_VertexInfluence__New_2, 0, true, List__Uno_Content_Models_VertexInfluence__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Models_VertexInfluence__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Models::VertexInfluence__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Models_VertexInfluence__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Models_VertexInfluence__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Models::VertexInfluence__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Models_VertexInfluence__Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Models_VertexInfluence__typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Models_VertexInfluence__ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Models::VertexInfluence__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Models_VertexInfluence__GetEnumerator_boxed(List__Uno_Content_Models_VertexInfluence* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_VertexInfluence__typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Models_VertexInfluence___ObjInit(List__Uno_Content_Models_VertexInfluence* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Models_VertexInfluence___ObjInit_1(List__Uno_Content_Models_VertexInfluence* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Models::VertexInfluence__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Models_VertexInfluence__Add(List__Uno_Content_Models_VertexInfluence* __this, ::app::Uno::Content::Models::VertexInfluence* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::VertexInfluence*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Models_VertexInfluence__AddRange(List__Uno_Content_Models_VertexInfluence* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Models_VertexInfluence::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Models::VertexInfluence* i = ::app::Uno::Collections::IEnumerator__Uno_Content_Models_VertexInfluence::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Models_VertexInfluence__BoundsCheck(List__Uno_Content_Models_VertexInfluence* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Models_VertexInfluence__Clear(List__Uno_Content_Models_VertexInfluence* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Models_VertexInfluence__Contains(List__Uno_Content_Models_VertexInfluence* __this, ::app::Uno::Content::Models::VertexInfluence* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_VertexInfluence(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::VertexInfluence*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_VertexInfluence__EnsureCapacity(List__Uno_Content_Models_VertexInfluence* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Models::VertexInfluence__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Models::VertexInfluence__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Content::Models::VertexInfluence*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::VertexInfluence*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Models_VertexInfluence__get_Count(List__Uno_Content_Models_VertexInfluence* __this)
{
    return __this->_used;
}

::app::Uno::Content::Models::VertexInfluence* List__Uno_Content_Models_VertexInfluence__get_Item(List__Uno_Content_Models_VertexInfluence* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::VertexInfluence*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_VertexInfluence List__Uno_Content_Models_VertexInfluence__GetEnumerator(List__Uno_Content_Models_VertexInfluence* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Models_VertexInfluence__New_1(NULL, __this);
}

int List__Uno_Content_Models_VertexInfluence__IndexOf(List__Uno_Content_Models_VertexInfluence* __this, ::app::Uno::Content::Models::VertexInfluence* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_VertexInfluence(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::VertexInfluence*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Models_VertexInfluence__Insert(List__Uno_Content_Models_VertexInfluence* __this, int index, ::app::Uno::Content::Models::VertexInfluence* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::VertexInfluence*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::VertexInfluence*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::VertexInfluence*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Models_VertexInfluence* List__Uno_Content_Models_VertexInfluence__New_1(::uStatic* __this)
{
    List__Uno_Content_Models_VertexInfluence* inst = (List__Uno_Content_Models_VertexInfluence*)::uAllocObject(sizeof(List__Uno_Content_Models_VertexInfluence), List__Uno_Content_Models_VertexInfluence__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Models_VertexInfluence* List__Uno_Content_Models_VertexInfluence__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Models_VertexInfluence* inst = (List__Uno_Content_Models_VertexInfluence*)::uAllocObject(sizeof(List__Uno_Content_Models_VertexInfluence), List__Uno_Content_Models_VertexInfluence__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Models_VertexInfluence__Remove(List__Uno_Content_Models_VertexInfluence* __this, ::app::Uno::Content::Models::VertexInfluence* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Models_VertexInfluence(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::VertexInfluence*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Models_VertexInfluence__RemoveAt(List__Uno_Content_Models_VertexInfluence* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::VertexInfluence*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::VertexInfluence*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::VertexInfluence*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Content_Models_VertexInfluence__set_Item(List__Uno_Content_Models_VertexInfluence* __this, int index, ::app::Uno::Content::Models::VertexInfluence* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Content::Models::VertexInfluence*>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Models_VertexInfluence__Sort(List__Uno_Content_Models_VertexInfluence* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Models_VertexInfluence(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Models_VertexInfluence__ToArray(List__Uno_Content_Models_VertexInfluence* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Models::VertexInfluence__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Content::Models::VertexInfluence*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Models::VertexInfluence*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___uType* List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___typeof()
{
    static ::uStaticStrong<List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___uType*)::uAllocClassType(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___uType), "Uno.Collections.List<Uno.Content.Splines.KeyframedSpline2_Key<float,float>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float_float___typeof(), offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_, _data), ::uGetArrayType(::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Add, 0, false, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float_float___typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___get_Item, 0, false, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float_float___typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___New_1, 0, true, List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___New_2, 0, true, List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Splines_KeyframedSpline2_Key_float_float___typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___GetEnumerator_boxed(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float_float___typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float____ObjInit(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float____ObjInit_1(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Add(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___AddRange(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float_float_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float i = ::app::Uno::Collections::IEnumerator__Uno_Content_Splines_KeyframedSpline2_Key_float_float_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___BoundsCheck(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Clear(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Contains(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float_float_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___EnsureCapacity(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___get_Count(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this)
{
    return __this->_used;
}

::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___get_Item(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float_float_ List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___GetEnumerator(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float_float___New_1(NULL, __this);
}

int List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___IndexOf(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float_float_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Insert(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, int index, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___New_1(::uStatic* __this)
{
    List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* inst = (List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_*)::uAllocObject(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_), List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* inst = (List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_*)::uAllocObject(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_), List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Remove(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float_float_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___RemoveAt(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(__this->_used) = ::uDefault< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>();
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___set_Item(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, int index, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___Sort(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Splines_KeyframedSpline2_Key_float_float_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Splines_KeyframedSpline2_Key_float_float___ToArray(List__Uno_Content_Splines_KeyframedSpline2_Key_float_float_* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float__float>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___uType* List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___typeof()
{
    static ::uStaticStrong<List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___uType*)::uAllocClassType(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___uType), "Uno.Collections.List<Uno.Content.Splines.KeyframedSpline2_Key<float2,float2>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___typeof(), offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_, _data), ::uGetArrayType(::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Add, 0, false, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___get_Item, 0, false, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___New_1, 0, true, List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___New_2, 0, true, List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___GetEnumerator_boxed(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2____ObjInit(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2____ObjInit_1(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Add(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2 item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___AddRange(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2 i = ::app::Uno::Collections::IEnumerator__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___BoundsCheck(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Clear(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Contains(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___EnsureCapacity(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___get_Count(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this)
{
    return __this->_used;
}

::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2 List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___get_Item(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_ List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___GetEnumerator(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___New_1(NULL, __this);
}

int List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___IndexOf(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Insert(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, int index, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2 item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___New_1(::uStatic* __this)
{
    List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* inst = (List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_*)::uAllocObject(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_), List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* inst = (List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_*)::uAllocObject(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_), List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Remove(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___RemoveAt(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(__this->_used) = ::uDefault< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>();
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___set_Item(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, int index, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2 value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___Sort(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2___ToArray(List__Uno_Content_Splines_KeyframedSpline2_Key_float2_float2_* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float2__float2>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___uType* List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___typeof()
{
    static ::uStaticStrong<List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___uType*)::uAllocClassType(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___uType), "Uno.Collections.List<Uno.Content.Splines.KeyframedSpline2_Key<float3,float3>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___typeof(), offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_, _data), ::uGetArrayType(::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Add, 0, false, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___get_Item, 0, false, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___New_1, 0, true, List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___New_2, 0, true, List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___GetEnumerator_boxed(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3____ObjInit(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3____ObjInit_1(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Add(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3 item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___AddRange(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3 i = ::app::Uno::Collections::IEnumerator__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___BoundsCheck(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Clear(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Contains(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___EnsureCapacity(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___get_Count(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this)
{
    return __this->_used;
}

::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3 List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___get_Item(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_ List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___GetEnumerator(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___New_1(NULL, __this);
}

int List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___IndexOf(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Insert(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, int index, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3 item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___New_1(::uStatic* __this)
{
    List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* inst = (List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_*)::uAllocObject(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_), List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* inst = (List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_*)::uAllocObject(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_), List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Remove(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___RemoveAt(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(__this->_used) = ::uDefault< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>();
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___set_Item(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, int index, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3 value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___Sort(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3___ToArray(List__Uno_Content_Splines_KeyframedSpline2_Key_float3_float3_* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float3__float3>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___uType* List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___typeof()
{
    static ::uStaticStrong<List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___uType*)::uAllocClassType(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___uType), "Uno.Collections.List<Uno.Content.Splines.KeyframedSpline2_Key<float4,float4>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___typeof(), offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_, _data), ::uGetArrayType(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Add, 0, false, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___get_Item, 0, false, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___New_1, 0, true, List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___New_2, 0, true, List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___GetEnumerator_boxed(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4____ObjInit(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4____ObjInit_1(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Add(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4 item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___AddRange(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4 i = ::app::Uno::Collections::IEnumerator__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___BoundsCheck(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Clear(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Contains(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___EnsureCapacity(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___get_Count(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this)
{
    return __this->_used;
}

::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4 List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___get_Item(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_ List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___GetEnumerator(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___New_1(NULL, __this);
}

int List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___IndexOf(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Insert(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, int index, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4 item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___New_1(::uStatic* __this)
{
    List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* inst = (List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_*)::uAllocObject(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_), List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* inst = (List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_*)::uAllocObject(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_), List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Remove(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___RemoveAt(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(__this->_used) = ::uDefault< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>();
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___set_Item(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, int index, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4 value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___Sort(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4___ToArray(List__Uno_Content_Splines_KeyframedSpline2_Key_float4_float4_* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4__float4>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___uType* List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___typeof()
{
    static ::uStaticStrong<List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___uType*)::uAllocClassType(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___uType), "Uno.Collections.List<Uno.Content.Splines.KeyframedSpline2_Key<float4x4,float4x4>>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___typeof(), offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_, _data), ::uGetArrayType(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Add, 0, false, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof()),
        ::uNewFunction("get_Count", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___get_Item, 0, false, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___typeof()),
        ::uNewFunction("IndexOf", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___New_1, 0, true, List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___typeof()),
        ::uNewFunction(".ctor", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___New_2, 0, true, List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Sort, 0, false, ::app::Uno::Comparison__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___typeof()),
        ::uNewFunction("ToArray", List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___ToArray, 0, false, ::uGetArrayType(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___GetEnumerator_boxed(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___typeof(), __this->GetEnumerator());
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4____ObjInit(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4____ObjInit_1(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Add(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4 item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___AddRange(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4 i = ::app::Uno::Collections::IEnumerator__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___BoundsCheck(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Clear(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Contains(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___EnsureCapacity(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___get_Count(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this)
{
    return __this->_used;
}

::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4 List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___get_Item(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_ List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___GetEnumerator(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___New_1(NULL, __this);
}

int List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___IndexOf(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Insert(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, int index, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4 item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___New_1(::uStatic* __this)
{
    List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* inst = (List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_*)::uAllocObject(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_), List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___New_2(::uStatic* __this, int capacity)
{
    List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* inst = (List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_*)::uAllocObject(sizeof(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_), List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Remove(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4 item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___RemoveAt(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(__this->_used) = ::uDefault< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>();
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___set_Item(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, int index, ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4 value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(index) = value;
    __this->_version++;
}

void List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___Sort(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4___ToArray(List__Uno_Content_Splines_KeyframedSpline2_Key_float4x4_float4x4_* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Content::Splines::KeyframedSpline2_Key__float4x4__float4x4>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Data_Json_Value__uType* List__Uno_Data_Json_Value__typeof()
{
    static ::uStaticStrong<List__Uno_Data_Json_Value__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Data_Json_Value__uType*)::uAllocClassType(sizeof(List__Uno_Data_Json_Value__uType), "Uno.Collections.List<Uno.Data.Json.Value>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Data_Json_Value__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Data_Json_Value__typeof(), offsetof(List__Uno_Data_Json_Value__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Data_Json_Value, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Data_Json_Value, _data), ::uGetArrayType(::app::Uno::Data::Json::Value__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Data_Json_Value, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Data_Json_Value, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Data_Json_Value__Add, 0, false, ::app::Uno::Data::Json::Value__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Data_Json_Value__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Data_Json_Value__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Data_Json_Value__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Data_Json_Value__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Data::Json::Value__typeof()),
        ::uNewFunction("get_Count", List__Uno_Data_Json_Value__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Data_Json_Value__get_Item, 0, false, ::app::Uno::Data::Json::Value__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Data_Json_Value__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Data_Json_Value__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Data_Json_Value__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Json::Value__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Data_Json_Value__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Json::Value__typeof()),
        ::uNewFunction(".ctor", List__Uno_Data_Json_Value__New_1, 0, true, List__Uno_Data_Json_Value__typeof()),
        ::uNewFunction(".ctor", List__Uno_Data_Json_Value__New_2, 0, true, List__Uno_Data_Json_Value__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Data_Json_Value__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Data::Json::Value__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Data_Json_Value__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Data_Json_Value__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Json::Value__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Data_Json_Value__Sort, 0, false, ::app::Uno::Comparison__Uno_Data_Json_Value__typeof()),
        ::uNewFunction("ToArray", List__Uno_Data_Json_Value__ToArray, 0, false, ::uGetArrayType(::app::Uno::Data::Json::Value__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Data_Json_Value__GetEnumerator_boxed(List__Uno_Data_Json_Value* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Data_Json_Value__typeof(), __this->GetEnumerator());
}

void List__Uno_Data_Json_Value___ObjInit(List__Uno_Data_Json_Value* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Data_Json_Value___ObjInit_1(List__Uno_Data_Json_Value* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Data::Json::Value__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Data_Json_Value__Add(List__Uno_Data_Json_Value* __this, ::app::Uno::Data::Json::Value* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Json::Value*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Data_Json_Value__AddRange(List__Uno_Data_Json_Value* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Data_Json_Value::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Data::Json::Value* i = ::app::Uno::Collections::IEnumerator__Uno_Data_Json_Value::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Data_Json_Value__BoundsCheck(List__Uno_Data_Json_Value* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Data_Json_Value__Clear(List__Uno_Data_Json_Value* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Data_Json_Value__Contains(List__Uno_Data_Json_Value* __this, ::app::Uno::Data::Json::Value* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Json_Value(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Json::Value*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Data_Json_Value__EnsureCapacity(List__Uno_Data_Json_Value* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Data::Json::Value__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Data::Json::Value__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Data::Json::Value*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Json::Value*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Data_Json_Value__get_Count(List__Uno_Data_Json_Value* __this)
{
    return __this->_used;
}

::app::Uno::Data::Json::Value* List__Uno_Data_Json_Value__get_Item(List__Uno_Data_Json_Value* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Json::Value*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Data_Json_Value List__Uno_Data_Json_Value__GetEnumerator(List__Uno_Data_Json_Value* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Data_Json_Value__New_1(NULL, __this);
}

int List__Uno_Data_Json_Value__IndexOf(List__Uno_Data_Json_Value* __this, ::app::Uno::Data::Json::Value* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Json_Value(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Json::Value*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Data_Json_Value__Insert(List__Uno_Data_Json_Value* __this, int index, ::app::Uno::Data::Json::Value* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Json::Value*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Json::Value*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Json::Value*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Data_Json_Value* List__Uno_Data_Json_Value__New_1(::uStatic* __this)
{
    List__Uno_Data_Json_Value* inst = (List__Uno_Data_Json_Value*)::uAllocObject(sizeof(List__Uno_Data_Json_Value), List__Uno_Data_Json_Value__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Data_Json_Value* List__Uno_Data_Json_Value__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Data_Json_Value* inst = (List__Uno_Data_Json_Value*)::uAllocObject(sizeof(List__Uno_Data_Json_Value), List__Uno_Data_Json_Value__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Data_Json_Value__Remove(List__Uno_Data_Json_Value* __this, ::app::Uno::Data::Json::Value* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Json_Value(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Json::Value*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Data_Json_Value__RemoveAt(List__Uno_Data_Json_Value* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Json::Value*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Json::Value*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Json::Value*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Data_Json_Value__set_Item(List__Uno_Data_Json_Value* __this, int index, ::app::Uno::Data::Json::Value* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Json::Value*>(index) = value;
    __this->_version++;
}

void List__Uno_Data_Json_Value__Sort(List__Uno_Data_Json_Value* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Data_Json_Value(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Data_Json_Value__ToArray(List__Uno_Data_Json_Value* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Data::Json::Value__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Data::Json::Value*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Json::Value*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Data_Xml_XmlAttribute__uType* List__Uno_Data_Xml_XmlAttribute__typeof()
{
    static ::uStaticStrong<List__Uno_Data_Xml_XmlAttribute__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Data_Xml_XmlAttribute__uType*)::uAllocClassType(sizeof(List__Uno_Data_Xml_XmlAttribute__uType), "Uno.Collections.List<Uno.Data.Xml.XmlAttribute>", false, 3, 1, 0);

    type->__interface_0.__fp_Insert = (void(*)(void*, int, ::app::Uno::Data::Xml::XmlAttribute*))List__Uno_Data_Xml_XmlAttribute__Insert;
    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Uno_Data_Xml_XmlAttribute__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Uno::Data::Xml::XmlAttribute*(*)(void*, int))List__Uno_Data_Xml_XmlAttribute__get_Item;
    type->__interface_1.__fp_Clear = (void(*)(void*))List__Uno_Data_Xml_XmlAttribute__Clear;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Uno::Data::Xml::XmlAttribute*))List__Uno_Data_Xml_XmlAttribute__Add;
    type->__interface_1.__fp_Remove = (bool(*)(void*, ::app::Uno::Data::Xml::XmlAttribute*))List__Uno_Data_Xml_XmlAttribute__Remove;
    type->__interface_1.__fp_Contains = (bool(*)(void*, ::app::Uno::Data::Xml::XmlAttribute*))List__Uno_Data_Xml_XmlAttribute__Contains;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Uno_Data_Xml_XmlAttribute__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Data_Xml_XmlAttribute__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Uno_Data_Xml_XmlAttribute__typeof(), offsetof(List__Uno_Data_Xml_XmlAttribute__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Uno_Data_Xml_XmlAttribute__typeof(), offsetof(List__Uno_Data_Xml_XmlAttribute__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlAttribute__typeof(), offsetof(List__Uno_Data_Xml_XmlAttribute__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Data_Xml_XmlAttribute, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Data_Xml_XmlAttribute, _data), ::uGetArrayType(::app::Uno::Data::Xml::XmlAttribute__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Data_Xml_XmlAttribute, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Data_Xml_XmlAttribute, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Data_Xml_XmlAttribute__Add, 0, false, ::app::Uno::Data::Xml::XmlAttribute__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Data_Xml_XmlAttribute__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlAttribute__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Data_Xml_XmlAttribute__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Data_Xml_XmlAttribute__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Data::Xml::XmlAttribute__typeof()),
        ::uNewFunction("get_Count", List__Uno_Data_Xml_XmlAttribute__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Data_Xml_XmlAttribute__get_Item, 0, false, ::app::Uno::Data::Xml::XmlAttribute__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Data_Xml_XmlAttribute__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlAttribute__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Data_Xml_XmlAttribute__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlAttribute__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Data_Xml_XmlAttribute__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlAttribute__typeof()),
        ::uNewFunction(".ctor", List__Uno_Data_Xml_XmlAttribute__New_1, 0, true, List__Uno_Data_Xml_XmlAttribute__typeof()),
        ::uNewFunction(".ctor", List__Uno_Data_Xml_XmlAttribute__New_2, 0, true, List__Uno_Data_Xml_XmlAttribute__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Data_Xml_XmlAttribute__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Data::Xml::XmlAttribute__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Data_Xml_XmlAttribute__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Data_Xml_XmlAttribute__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlAttribute__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Data_Xml_XmlAttribute__Sort, 0, false, ::app::Uno::Comparison__Uno_Data_Xml_XmlAttribute__typeof()),
        ::uNewFunction("ToArray", List__Uno_Data_Xml_XmlAttribute__ToArray, 0, false, ::uGetArrayType(::app::Uno::Data::Xml::XmlAttribute__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Data_Xml_XmlAttribute__GetEnumerator_boxed(List__Uno_Data_Xml_XmlAttribute* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlAttribute__typeof(), __this->GetEnumerator());
}

void List__Uno_Data_Xml_XmlAttribute___ObjInit(List__Uno_Data_Xml_XmlAttribute* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Data_Xml_XmlAttribute___ObjInit_1(List__Uno_Data_Xml_XmlAttribute* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Data::Xml::XmlAttribute__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Data_Xml_XmlAttribute__Add(List__Uno_Data_Xml_XmlAttribute* __this, ::app::Uno::Data::Xml::XmlAttribute* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttribute*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlAttribute__AddRange(List__Uno_Data_Xml_XmlAttribute* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlAttribute::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Data::Xml::XmlAttribute* i = ::app::Uno::Collections::IEnumerator__Uno_Data_Xml_XmlAttribute::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Data_Xml_XmlAttribute__BoundsCheck(List__Uno_Data_Xml_XmlAttribute* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Data_Xml_XmlAttribute__Clear(List__Uno_Data_Xml_XmlAttribute* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Data_Xml_XmlAttribute__Contains(List__Uno_Data_Xml_XmlAttribute* __this, ::app::Uno::Data::Xml::XmlAttribute* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlAttribute(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttribute*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Data_Xml_XmlAttribute__EnsureCapacity(List__Uno_Data_Xml_XmlAttribute* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Data::Xml::XmlAttribute__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Data::Xml::XmlAttribute__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Data::Xml::XmlAttribute*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttribute*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Data_Xml_XmlAttribute__get_Count(List__Uno_Data_Xml_XmlAttribute* __this)
{
    return __this->_used;
}

::app::Uno::Data::Xml::XmlAttribute* List__Uno_Data_Xml_XmlAttribute__get_Item(List__Uno_Data_Xml_XmlAttribute* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttribute*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlAttribute List__Uno_Data_Xml_XmlAttribute__GetEnumerator(List__Uno_Data_Xml_XmlAttribute* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlAttribute__New_1(NULL, __this);
}

int List__Uno_Data_Xml_XmlAttribute__IndexOf(List__Uno_Data_Xml_XmlAttribute* __this, ::app::Uno::Data::Xml::XmlAttribute* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlAttribute(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttribute*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Data_Xml_XmlAttribute__Insert(List__Uno_Data_Xml_XmlAttribute* __this, int index, ::app::Uno::Data::Xml::XmlAttribute* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttribute*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttribute*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttribute*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Data_Xml_XmlAttribute* List__Uno_Data_Xml_XmlAttribute__New_1(::uStatic* __this)
{
    List__Uno_Data_Xml_XmlAttribute* inst = (List__Uno_Data_Xml_XmlAttribute*)::uAllocObject(sizeof(List__Uno_Data_Xml_XmlAttribute), List__Uno_Data_Xml_XmlAttribute__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Data_Xml_XmlAttribute* List__Uno_Data_Xml_XmlAttribute__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Data_Xml_XmlAttribute* inst = (List__Uno_Data_Xml_XmlAttribute*)::uAllocObject(sizeof(List__Uno_Data_Xml_XmlAttribute), List__Uno_Data_Xml_XmlAttribute__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Data_Xml_XmlAttribute__Remove(List__Uno_Data_Xml_XmlAttribute* __this, ::app::Uno::Data::Xml::XmlAttribute* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlAttribute(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttribute*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Data_Xml_XmlAttribute__RemoveAt(List__Uno_Data_Xml_XmlAttribute* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttribute*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttribute*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttribute*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlAttribute__set_Item(List__Uno_Data_Xml_XmlAttribute* __this, int index, ::app::Uno::Data::Xml::XmlAttribute* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttribute*>(index) = value;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlAttribute__Sort(List__Uno_Data_Xml_XmlAttribute* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Data_Xml_XmlAttribute(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Data_Xml_XmlAttribute__ToArray(List__Uno_Data_Xml_XmlAttribute* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Data::Xml::XmlAttribute__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Data::Xml::XmlAttribute*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttribute*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Data_Xml_XmlAttributeHandle__uType* List__Uno_Data_Xml_XmlAttributeHandle__typeof()
{
    static ::uStaticStrong<List__Uno_Data_Xml_XmlAttributeHandle__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Data_Xml_XmlAttributeHandle__uType*)::uAllocClassType(sizeof(List__Uno_Data_Xml_XmlAttributeHandle__uType), "Uno.Collections.List<Uno.Data.Xml.XmlAttributeHandle>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Data_Xml_XmlAttributeHandle__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlAttributeHandle__typeof(), offsetof(List__Uno_Data_Xml_XmlAttributeHandle__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Data_Xml_XmlAttributeHandle, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Data_Xml_XmlAttributeHandle, _data), ::uGetArrayType(::app::Uno::Data::Xml::XmlAttributeHandle__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Data_Xml_XmlAttributeHandle, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Data_Xml_XmlAttributeHandle, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Data_Xml_XmlAttributeHandle__Add, 0, false, ::app::Uno::Data::Xml::XmlAttributeHandle__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Data_Xml_XmlAttributeHandle__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlAttributeHandle__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Data_Xml_XmlAttributeHandle__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Data_Xml_XmlAttributeHandle__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Data::Xml::XmlAttributeHandle__typeof()),
        ::uNewFunction("get_Count", List__Uno_Data_Xml_XmlAttributeHandle__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Data_Xml_XmlAttributeHandle__get_Item, 0, false, ::app::Uno::Data::Xml::XmlAttributeHandle__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Data_Xml_XmlAttributeHandle__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlAttributeHandle__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Data_Xml_XmlAttributeHandle__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlAttributeHandle__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Data_Xml_XmlAttributeHandle__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlAttributeHandle__typeof()),
        ::uNewFunction(".ctor", List__Uno_Data_Xml_XmlAttributeHandle__New_1, 0, true, List__Uno_Data_Xml_XmlAttributeHandle__typeof()),
        ::uNewFunction(".ctor", List__Uno_Data_Xml_XmlAttributeHandle__New_2, 0, true, List__Uno_Data_Xml_XmlAttributeHandle__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Data_Xml_XmlAttributeHandle__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Data::Xml::XmlAttributeHandle__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Data_Xml_XmlAttributeHandle__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Data_Xml_XmlAttributeHandle__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlAttributeHandle__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Data_Xml_XmlAttributeHandle__Sort, 0, false, ::app::Uno::Comparison__Uno_Data_Xml_XmlAttributeHandle__typeof()),
        ::uNewFunction("ToArray", List__Uno_Data_Xml_XmlAttributeHandle__ToArray, 0, false, ::uGetArrayType(::app::Uno::Data::Xml::XmlAttributeHandle__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Data_Xml_XmlAttributeHandle__GetEnumerator_boxed(List__Uno_Data_Xml_XmlAttributeHandle* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlAttributeHandle__typeof(), __this->GetEnumerator());
}

void List__Uno_Data_Xml_XmlAttributeHandle___ObjInit(List__Uno_Data_Xml_XmlAttributeHandle* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Data_Xml_XmlAttributeHandle___ObjInit_1(List__Uno_Data_Xml_XmlAttributeHandle* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Data::Xml::XmlAttributeHandle__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Data_Xml_XmlAttributeHandle__Add(List__Uno_Data_Xml_XmlAttributeHandle* __this, ::app::Uno::Data::Xml::XmlAttributeHandle* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttributeHandle*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlAttributeHandle__AddRange(List__Uno_Data_Xml_XmlAttributeHandle* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlAttributeHandle::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Data::Xml::XmlAttributeHandle* i = ::app::Uno::Collections::IEnumerator__Uno_Data_Xml_XmlAttributeHandle::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Data_Xml_XmlAttributeHandle__BoundsCheck(List__Uno_Data_Xml_XmlAttributeHandle* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Data_Xml_XmlAttributeHandle__Clear(List__Uno_Data_Xml_XmlAttributeHandle* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Data_Xml_XmlAttributeHandle__Contains(List__Uno_Data_Xml_XmlAttributeHandle* __this, ::app::Uno::Data::Xml::XmlAttributeHandle* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlAttributeHandle(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Data_Xml_XmlAttributeHandle__EnsureCapacity(List__Uno_Data_Xml_XmlAttributeHandle* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Data::Xml::XmlAttributeHandle__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Data::Xml::XmlAttributeHandle__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Data_Xml_XmlAttributeHandle__get_Count(List__Uno_Data_Xml_XmlAttributeHandle* __this)
{
    return __this->_used;
}

::app::Uno::Data::Xml::XmlAttributeHandle* List__Uno_Data_Xml_XmlAttributeHandle__get_Item(List__Uno_Data_Xml_XmlAttributeHandle* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttributeHandle*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlAttributeHandle List__Uno_Data_Xml_XmlAttributeHandle__GetEnumerator(List__Uno_Data_Xml_XmlAttributeHandle* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlAttributeHandle__New_1(NULL, __this);
}

int List__Uno_Data_Xml_XmlAttributeHandle__IndexOf(List__Uno_Data_Xml_XmlAttributeHandle* __this, ::app::Uno::Data::Xml::XmlAttributeHandle* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlAttributeHandle(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Data_Xml_XmlAttributeHandle__Insert(List__Uno_Data_Xml_XmlAttributeHandle* __this, int index, ::app::Uno::Data::Xml::XmlAttributeHandle* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttributeHandle*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Data_Xml_XmlAttributeHandle* List__Uno_Data_Xml_XmlAttributeHandle__New_1(::uStatic* __this)
{
    List__Uno_Data_Xml_XmlAttributeHandle* inst = (List__Uno_Data_Xml_XmlAttributeHandle*)::uAllocObject(sizeof(List__Uno_Data_Xml_XmlAttributeHandle), List__Uno_Data_Xml_XmlAttributeHandle__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Data_Xml_XmlAttributeHandle* List__Uno_Data_Xml_XmlAttributeHandle__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Data_Xml_XmlAttributeHandle* inst = (List__Uno_Data_Xml_XmlAttributeHandle*)::uAllocObject(sizeof(List__Uno_Data_Xml_XmlAttributeHandle), List__Uno_Data_Xml_XmlAttributeHandle__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Data_Xml_XmlAttributeHandle__Remove(List__Uno_Data_Xml_XmlAttributeHandle* __this, ::app::Uno::Data::Xml::XmlAttributeHandle* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlAttributeHandle(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Data_Xml_XmlAttributeHandle__RemoveAt(List__Uno_Data_Xml_XmlAttributeHandle* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttributeHandle*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlAttributeHandle__set_Item(List__Uno_Data_Xml_XmlAttributeHandle* __this, int index, ::app::Uno::Data::Xml::XmlAttributeHandle* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlAttributeHandle*>(index) = value;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlAttributeHandle__Sort(List__Uno_Data_Xml_XmlAttributeHandle* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Data_Xml_XmlAttributeHandle(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Data_Xml_XmlAttributeHandle__ToArray(List__Uno_Data_Xml_XmlAttributeHandle* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Data::Xml::XmlAttributeHandle__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlAttributeHandle*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Data_Xml_XmlLinkedNode__uType* List__Uno_Data_Xml_XmlLinkedNode__typeof()
{
    static ::uStaticStrong<List__Uno_Data_Xml_XmlLinkedNode__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Data_Xml_XmlLinkedNode__uType*)::uAllocClassType(sizeof(List__Uno_Data_Xml_XmlLinkedNode__uType), "Uno.Collections.List<Uno.Data.Xml.XmlLinkedNode>", false, 3, 1, 0);

    type->__interface_0.__fp_Insert = (void(*)(void*, int, ::app::Uno::Data::Xml::XmlLinkedNode*))List__Uno_Data_Xml_XmlLinkedNode__Insert;
    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Uno_Data_Xml_XmlLinkedNode__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Uno::Data::Xml::XmlLinkedNode*(*)(void*, int))List__Uno_Data_Xml_XmlLinkedNode__get_Item;
    type->__interface_1.__fp_Clear = (void(*)(void*))List__Uno_Data_Xml_XmlLinkedNode__Clear;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Uno::Data::Xml::XmlLinkedNode*))List__Uno_Data_Xml_XmlLinkedNode__Add;
    type->__interface_1.__fp_Remove = (bool(*)(void*, ::app::Uno::Data::Xml::XmlLinkedNode*))List__Uno_Data_Xml_XmlLinkedNode__Remove;
    type->__interface_1.__fp_Contains = (bool(*)(void*, ::app::Uno::Data::Xml::XmlLinkedNode*))List__Uno_Data_Xml_XmlLinkedNode__Contains;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Uno_Data_Xml_XmlLinkedNode__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Data_Xml_XmlLinkedNode__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Uno_Data_Xml_XmlLinkedNode__typeof(), offsetof(List__Uno_Data_Xml_XmlLinkedNode__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Uno_Data_Xml_XmlLinkedNode__typeof(), offsetof(List__Uno_Data_Xml_XmlLinkedNode__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlLinkedNode__typeof(), offsetof(List__Uno_Data_Xml_XmlLinkedNode__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Data_Xml_XmlLinkedNode, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Data_Xml_XmlLinkedNode, _data), ::uGetArrayType(::app::Uno::Data::Xml::XmlLinkedNode__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Data_Xml_XmlLinkedNode, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Data_Xml_XmlLinkedNode, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Data_Xml_XmlLinkedNode__Add, 0, false, ::app::Uno::Data::Xml::XmlLinkedNode__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Data_Xml_XmlLinkedNode__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlLinkedNode__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Data_Xml_XmlLinkedNode__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Data_Xml_XmlLinkedNode__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Data::Xml::XmlLinkedNode__typeof()),
        ::uNewFunction("get_Count", List__Uno_Data_Xml_XmlLinkedNode__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Data_Xml_XmlLinkedNode__get_Item, 0, false, ::app::Uno::Data::Xml::XmlLinkedNode__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Data_Xml_XmlLinkedNode__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlLinkedNode__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Data_Xml_XmlLinkedNode__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlLinkedNode__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Data_Xml_XmlLinkedNode__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlLinkedNode__typeof()),
        ::uNewFunction(".ctor", List__Uno_Data_Xml_XmlLinkedNode__New_1, 0, true, List__Uno_Data_Xml_XmlLinkedNode__typeof()),
        ::uNewFunction(".ctor", List__Uno_Data_Xml_XmlLinkedNode__New_2, 0, true, List__Uno_Data_Xml_XmlLinkedNode__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Data_Xml_XmlLinkedNode__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Data::Xml::XmlLinkedNode__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Data_Xml_XmlLinkedNode__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Data_Xml_XmlLinkedNode__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlLinkedNode__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Data_Xml_XmlLinkedNode__Sort, 0, false, ::app::Uno::Comparison__Uno_Data_Xml_XmlLinkedNode__typeof()),
        ::uNewFunction("ToArray", List__Uno_Data_Xml_XmlLinkedNode__ToArray, 0, false, ::uGetArrayType(::app::Uno::Data::Xml::XmlLinkedNode__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Data_Xml_XmlLinkedNode__GetEnumerator_boxed(List__Uno_Data_Xml_XmlLinkedNode* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlLinkedNode__typeof(), __this->GetEnumerator());
}

void List__Uno_Data_Xml_XmlLinkedNode___ObjInit(List__Uno_Data_Xml_XmlLinkedNode* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Data_Xml_XmlLinkedNode___ObjInit_1(List__Uno_Data_Xml_XmlLinkedNode* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Data::Xml::XmlLinkedNode__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Data_Xml_XmlLinkedNode__Add(List__Uno_Data_Xml_XmlLinkedNode* __this, ::app::Uno::Data::Xml::XmlLinkedNode* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlLinkedNode*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlLinkedNode__AddRange(List__Uno_Data_Xml_XmlLinkedNode* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlLinkedNode::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Data::Xml::XmlLinkedNode* i = ::app::Uno::Collections::IEnumerator__Uno_Data_Xml_XmlLinkedNode::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Data_Xml_XmlLinkedNode__BoundsCheck(List__Uno_Data_Xml_XmlLinkedNode* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Data_Xml_XmlLinkedNode__Clear(List__Uno_Data_Xml_XmlLinkedNode* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Data_Xml_XmlLinkedNode__Contains(List__Uno_Data_Xml_XmlLinkedNode* __this, ::app::Uno::Data::Xml::XmlLinkedNode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlLinkedNode(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlLinkedNode*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Data_Xml_XmlLinkedNode__EnsureCapacity(List__Uno_Data_Xml_XmlLinkedNode* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Data::Xml::XmlLinkedNode__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Data::Xml::XmlLinkedNode__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Data::Xml::XmlLinkedNode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlLinkedNode*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Data_Xml_XmlLinkedNode__get_Count(List__Uno_Data_Xml_XmlLinkedNode* __this)
{
    return __this->_used;
}

::app::Uno::Data::Xml::XmlLinkedNode* List__Uno_Data_Xml_XmlLinkedNode__get_Item(List__Uno_Data_Xml_XmlLinkedNode* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlLinkedNode*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlLinkedNode List__Uno_Data_Xml_XmlLinkedNode__GetEnumerator(List__Uno_Data_Xml_XmlLinkedNode* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlLinkedNode__New_1(NULL, __this);
}

int List__Uno_Data_Xml_XmlLinkedNode__IndexOf(List__Uno_Data_Xml_XmlLinkedNode* __this, ::app::Uno::Data::Xml::XmlLinkedNode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlLinkedNode(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlLinkedNode*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Data_Xml_XmlLinkedNode__Insert(List__Uno_Data_Xml_XmlLinkedNode* __this, int index, ::app::Uno::Data::Xml::XmlLinkedNode* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlLinkedNode*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlLinkedNode*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlLinkedNode*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Data_Xml_XmlLinkedNode* List__Uno_Data_Xml_XmlLinkedNode__New_1(::uStatic* __this)
{
    List__Uno_Data_Xml_XmlLinkedNode* inst = (List__Uno_Data_Xml_XmlLinkedNode*)::uAllocObject(sizeof(List__Uno_Data_Xml_XmlLinkedNode), List__Uno_Data_Xml_XmlLinkedNode__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Data_Xml_XmlLinkedNode* List__Uno_Data_Xml_XmlLinkedNode__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Data_Xml_XmlLinkedNode* inst = (List__Uno_Data_Xml_XmlLinkedNode*)::uAllocObject(sizeof(List__Uno_Data_Xml_XmlLinkedNode), List__Uno_Data_Xml_XmlLinkedNode__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Data_Xml_XmlLinkedNode__Remove(List__Uno_Data_Xml_XmlLinkedNode* __this, ::app::Uno::Data::Xml::XmlLinkedNode* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlLinkedNode(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlLinkedNode*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Data_Xml_XmlLinkedNode__RemoveAt(List__Uno_Data_Xml_XmlLinkedNode* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlLinkedNode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlLinkedNode*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlLinkedNode*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlLinkedNode__set_Item(List__Uno_Data_Xml_XmlLinkedNode* __this, int index, ::app::Uno::Data::Xml::XmlLinkedNode* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlLinkedNode*>(index) = value;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlLinkedNode__Sort(List__Uno_Data_Xml_XmlLinkedNode* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Data_Xml_XmlLinkedNode(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Data_Xml_XmlLinkedNode__ToArray(List__Uno_Data_Xml_XmlLinkedNode* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Data::Xml::XmlLinkedNode__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Data::Xml::XmlLinkedNode*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlLinkedNode*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Data_Xml_XmlNodeHandle__uType* List__Uno_Data_Xml_XmlNodeHandle__typeof()
{
    static ::uStaticStrong<List__Uno_Data_Xml_XmlNodeHandle__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Data_Xml_XmlNodeHandle__uType*)::uAllocClassType(sizeof(List__Uno_Data_Xml_XmlNodeHandle__uType), "Uno.Collections.List<Uno.Data.Xml.XmlNodeHandle>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::app::Uno::Data::Xml::XmlNodeHandle*(*)(void*, int))List__Uno_Data_Xml_XmlNodeHandle__get_Item;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Uno_Data_Xml_XmlNodeHandle__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Data_Xml_XmlNodeHandle__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Uno_Data_Xml_XmlNodeHandle__typeof(), offsetof(List__Uno_Data_Xml_XmlNodeHandle__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Uno_Data_Xml_XmlNodeHandle__typeof(), offsetof(List__Uno_Data_Xml_XmlNodeHandle__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlNodeHandle__typeof(), offsetof(List__Uno_Data_Xml_XmlNodeHandle__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Data_Xml_XmlNodeHandle, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Data_Xml_XmlNodeHandle, _data), ::uGetArrayType(::app::Uno::Data::Xml::XmlNodeHandle__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Data_Xml_XmlNodeHandle, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Data_Xml_XmlNodeHandle, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Data_Xml_XmlNodeHandle__Add, 0, false, ::app::Uno::Data::Xml::XmlNodeHandle__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Data_Xml_XmlNodeHandle__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlNodeHandle__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Data_Xml_XmlNodeHandle__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Data_Xml_XmlNodeHandle__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Data::Xml::XmlNodeHandle__typeof()),
        ::uNewFunction("get_Count", List__Uno_Data_Xml_XmlNodeHandle__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Data_Xml_XmlNodeHandle__get_Item, 0, false, ::app::Uno::Data::Xml::XmlNodeHandle__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Data_Xml_XmlNodeHandle__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlNodeHandle__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Data_Xml_XmlNodeHandle__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlNodeHandle__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Data_Xml_XmlNodeHandle__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlNodeHandle__typeof()),
        ::uNewFunction(".ctor", List__Uno_Data_Xml_XmlNodeHandle__New_1, 0, true, List__Uno_Data_Xml_XmlNodeHandle__typeof()),
        ::uNewFunction(".ctor", List__Uno_Data_Xml_XmlNodeHandle__New_2, 0, true, List__Uno_Data_Xml_XmlNodeHandle__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Data_Xml_XmlNodeHandle__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Data::Xml::XmlNodeHandle__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Data_Xml_XmlNodeHandle__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Data_Xml_XmlNodeHandle__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Data::Xml::XmlNodeHandle__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Data_Xml_XmlNodeHandle__Sort, 0, false, ::app::Uno::Comparison__Uno_Data_Xml_XmlNodeHandle__typeof()),
        ::uNewFunction("ToArray", List__Uno_Data_Xml_XmlNodeHandle__ToArray, 0, false, ::uGetArrayType(::app::Uno::Data::Xml::XmlNodeHandle__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Data_Xml_XmlNodeHandle__GetEnumerator_boxed(List__Uno_Data_Xml_XmlNodeHandle* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlNodeHandle__typeof(), __this->GetEnumerator());
}

void List__Uno_Data_Xml_XmlNodeHandle___ObjInit(List__Uno_Data_Xml_XmlNodeHandle* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Data_Xml_XmlNodeHandle___ObjInit_1(List__Uno_Data_Xml_XmlNodeHandle* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Data::Xml::XmlNodeHandle__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Data_Xml_XmlNodeHandle__Add(List__Uno_Data_Xml_XmlNodeHandle* __this, ::app::Uno::Data::Xml::XmlNodeHandle* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlNodeHandle*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlNodeHandle__AddRange(List__Uno_Data_Xml_XmlNodeHandle* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Data_Xml_XmlNodeHandle::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Data::Xml::XmlNodeHandle* i = ::app::Uno::Collections::IEnumerator__Uno_Data_Xml_XmlNodeHandle::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Data_Xml_XmlNodeHandle__BoundsCheck(List__Uno_Data_Xml_XmlNodeHandle* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Data_Xml_XmlNodeHandle__Clear(List__Uno_Data_Xml_XmlNodeHandle* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Data_Xml_XmlNodeHandle__Contains(List__Uno_Data_Xml_XmlNodeHandle* __this, ::app::Uno::Data::Xml::XmlNodeHandle* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlNodeHandle(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlNodeHandle*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Data_Xml_XmlNodeHandle__EnsureCapacity(List__Uno_Data_Xml_XmlNodeHandle* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Data::Xml::XmlNodeHandle__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Data::Xml::XmlNodeHandle__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Data::Xml::XmlNodeHandle*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlNodeHandle*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Data_Xml_XmlNodeHandle__get_Count(List__Uno_Data_Xml_XmlNodeHandle* __this)
{
    return __this->_used;
}

::app::Uno::Data::Xml::XmlNodeHandle* List__Uno_Data_Xml_XmlNodeHandle__get_Item(List__Uno_Data_Xml_XmlNodeHandle* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlNodeHandle*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlNodeHandle List__Uno_Data_Xml_XmlNodeHandle__GetEnumerator(List__Uno_Data_Xml_XmlNodeHandle* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Data_Xml_XmlNodeHandle__New_1(NULL, __this);
}

int List__Uno_Data_Xml_XmlNodeHandle__IndexOf(List__Uno_Data_Xml_XmlNodeHandle* __this, ::app::Uno::Data::Xml::XmlNodeHandle* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlNodeHandle(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlNodeHandle*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Data_Xml_XmlNodeHandle__Insert(List__Uno_Data_Xml_XmlNodeHandle* __this, int index, ::app::Uno::Data::Xml::XmlNodeHandle* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlNodeHandle*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlNodeHandle*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlNodeHandle*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Data_Xml_XmlNodeHandle* List__Uno_Data_Xml_XmlNodeHandle__New_1(::uStatic* __this)
{
    List__Uno_Data_Xml_XmlNodeHandle* inst = (List__Uno_Data_Xml_XmlNodeHandle*)::uAllocObject(sizeof(List__Uno_Data_Xml_XmlNodeHandle), List__Uno_Data_Xml_XmlNodeHandle__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Data_Xml_XmlNodeHandle* List__Uno_Data_Xml_XmlNodeHandle__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Data_Xml_XmlNodeHandle* inst = (List__Uno_Data_Xml_XmlNodeHandle*)::uAllocObject(sizeof(List__Uno_Data_Xml_XmlNodeHandle), List__Uno_Data_Xml_XmlNodeHandle__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Data_Xml_XmlNodeHandle__Remove(List__Uno_Data_Xml_XmlNodeHandle* __this, ::app::Uno::Data::Xml::XmlNodeHandle* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Data_Xml_XmlNodeHandle(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlNodeHandle*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Data_Xml_XmlNodeHandle__RemoveAt(List__Uno_Data_Xml_XmlNodeHandle* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlNodeHandle*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlNodeHandle*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlNodeHandle*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlNodeHandle__set_Item(List__Uno_Data_Xml_XmlNodeHandle* __this, int index, ::app::Uno::Data::Xml::XmlNodeHandle* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Data::Xml::XmlNodeHandle*>(index) = value;
    __this->_version++;
}

void List__Uno_Data_Xml_XmlNodeHandle__Sort(List__Uno_Data_Xml_XmlNodeHandle* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Data_Xml_XmlNodeHandle(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Data_Xml_XmlNodeHandle__ToArray(List__Uno_Data_Xml_XmlNodeHandle* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Data::Xml::XmlNodeHandle__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Data::Xml::XmlNodeHandle*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Data::Xml::XmlNodeHandle*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Diagnostics_ProfileEvent__uType* List__Uno_Diagnostics_ProfileEvent__typeof()
{
    static ::uStaticStrong<List__Uno_Diagnostics_ProfileEvent__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Diagnostics_ProfileEvent__uType*)::uAllocClassType(sizeof(List__Uno_Diagnostics_ProfileEvent__uType), "Uno.Collections.List<Uno.Diagnostics.ProfileEvent>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Diagnostics_ProfileEvent__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Diagnostics_ProfileEvent__typeof(), offsetof(List__Uno_Diagnostics_ProfileEvent__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Diagnostics_ProfileEvent, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Diagnostics_ProfileEvent, _data), ::uGetArrayType(::app::Uno::Diagnostics::ProfileEvent__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Diagnostics_ProfileEvent, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Diagnostics_ProfileEvent, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Diagnostics_ProfileEvent__Add, 0, false, ::app::Uno::Diagnostics::ProfileEvent__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Diagnostics_ProfileEvent__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Diagnostics_ProfileEvent__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Diagnostics_ProfileEvent__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Diagnostics_ProfileEvent__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Diagnostics::ProfileEvent__typeof()),
        ::uNewFunction("get_Count", List__Uno_Diagnostics_ProfileEvent__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Diagnostics_ProfileEvent__get_Item, 0, false, ::app::Uno::Diagnostics::ProfileEvent__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Diagnostics_ProfileEvent__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Diagnostics_ProfileEvent__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Diagnostics_ProfileEvent__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Diagnostics::ProfileEvent__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Diagnostics_ProfileEvent__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Diagnostics::ProfileEvent__typeof()),
        ::uNewFunction(".ctor", List__Uno_Diagnostics_ProfileEvent__New_1, 0, true, List__Uno_Diagnostics_ProfileEvent__typeof()),
        ::uNewFunction(".ctor", List__Uno_Diagnostics_ProfileEvent__New_2, 0, true, List__Uno_Diagnostics_ProfileEvent__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Diagnostics_ProfileEvent__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Diagnostics::ProfileEvent__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Diagnostics_ProfileEvent__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Diagnostics_ProfileEvent__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Diagnostics::ProfileEvent__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Diagnostics_ProfileEvent__Sort, 0, false, ::app::Uno::Comparison__Uno_Diagnostics_ProfileEvent__typeof()),
        ::uNewFunction("ToArray", List__Uno_Diagnostics_ProfileEvent__ToArray, 0, false, ::uGetArrayType(::app::Uno::Diagnostics::ProfileEvent__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Diagnostics_ProfileEvent__GetEnumerator_boxed(List__Uno_Diagnostics_ProfileEvent* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Diagnostics_ProfileEvent__typeof(), __this->GetEnumerator());
}

void List__Uno_Diagnostics_ProfileEvent___ObjInit(List__Uno_Diagnostics_ProfileEvent* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Diagnostics_ProfileEvent___ObjInit_1(List__Uno_Diagnostics_ProfileEvent* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Diagnostics::ProfileEvent__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Diagnostics_ProfileEvent__Add(List__Uno_Diagnostics_ProfileEvent* __this, ::app::Uno::Diagnostics::ProfileEvent* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Diagnostics::ProfileEvent*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Diagnostics_ProfileEvent__AddRange(List__Uno_Diagnostics_ProfileEvent* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Diagnostics_ProfileEvent::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Diagnostics::ProfileEvent* i = ::app::Uno::Collections::IEnumerator__Uno_Diagnostics_ProfileEvent::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Diagnostics_ProfileEvent__BoundsCheck(List__Uno_Diagnostics_ProfileEvent* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Diagnostics_ProfileEvent__Clear(List__Uno_Diagnostics_ProfileEvent* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Diagnostics_ProfileEvent__Contains(List__Uno_Diagnostics_ProfileEvent* __this, ::app::Uno::Diagnostics::ProfileEvent* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Diagnostics_ProfileEvent(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Diagnostics::ProfileEvent*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Diagnostics_ProfileEvent__EnsureCapacity(List__Uno_Diagnostics_ProfileEvent* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Diagnostics::ProfileEvent__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Diagnostics::ProfileEvent__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Diagnostics::ProfileEvent*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Diagnostics::ProfileEvent*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Diagnostics_ProfileEvent__get_Count(List__Uno_Diagnostics_ProfileEvent* __this)
{
    return __this->_used;
}

::app::Uno::Diagnostics::ProfileEvent* List__Uno_Diagnostics_ProfileEvent__get_Item(List__Uno_Diagnostics_ProfileEvent* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Diagnostics::ProfileEvent*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Diagnostics_ProfileEvent List__Uno_Diagnostics_ProfileEvent__GetEnumerator(List__Uno_Diagnostics_ProfileEvent* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Diagnostics_ProfileEvent__New_1(NULL, __this);
}

int List__Uno_Diagnostics_ProfileEvent__IndexOf(List__Uno_Diagnostics_ProfileEvent* __this, ::app::Uno::Diagnostics::ProfileEvent* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Diagnostics_ProfileEvent(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Diagnostics::ProfileEvent*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Diagnostics_ProfileEvent__Insert(List__Uno_Diagnostics_ProfileEvent* __this, int index, ::app::Uno::Diagnostics::ProfileEvent* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Diagnostics::ProfileEvent*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Diagnostics::ProfileEvent*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Diagnostics::ProfileEvent*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Diagnostics_ProfileEvent* List__Uno_Diagnostics_ProfileEvent__New_1(::uStatic* __this)
{
    List__Uno_Diagnostics_ProfileEvent* inst = (List__Uno_Diagnostics_ProfileEvent*)::uAllocObject(sizeof(List__Uno_Diagnostics_ProfileEvent), List__Uno_Diagnostics_ProfileEvent__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Diagnostics_ProfileEvent* List__Uno_Diagnostics_ProfileEvent__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Diagnostics_ProfileEvent* inst = (List__Uno_Diagnostics_ProfileEvent*)::uAllocObject(sizeof(List__Uno_Diagnostics_ProfileEvent), List__Uno_Diagnostics_ProfileEvent__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Diagnostics_ProfileEvent__Remove(List__Uno_Diagnostics_ProfileEvent* __this, ::app::Uno::Diagnostics::ProfileEvent* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Diagnostics_ProfileEvent(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Diagnostics::ProfileEvent*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Diagnostics_ProfileEvent__RemoveAt(List__Uno_Diagnostics_ProfileEvent* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Diagnostics::ProfileEvent*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Diagnostics::ProfileEvent*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Diagnostics::ProfileEvent*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Diagnostics_ProfileEvent__set_Item(List__Uno_Diagnostics_ProfileEvent* __this, int index, ::app::Uno::Diagnostics::ProfileEvent* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Diagnostics::ProfileEvent*>(index) = value;
    __this->_version++;
}

void List__Uno_Diagnostics_ProfileEvent__Sort(List__Uno_Diagnostics_ProfileEvent* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Diagnostics_ProfileEvent(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Diagnostics_ProfileEvent__ToArray(List__Uno_Diagnostics_ProfileEvent* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Diagnostics::ProfileEvent__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Diagnostics::ProfileEvent*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Diagnostics::ProfileEvent*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_EventHandler__uType* List__Uno_EventHandler__typeof()
{
    static ::uStaticStrong<List__Uno_EventHandler__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_EventHandler__uType*)::uAllocClassType(sizeof(List__Uno_EventHandler__uType), "Uno.Collections.List<Uno.EventHandler>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_EventHandler__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_EventHandler__typeof(), offsetof(List__Uno_EventHandler__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_EventHandler, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_EventHandler, _data), ::uGetArrayType(::app::Uno::EventHandler__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_EventHandler, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_EventHandler, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_EventHandler__Add, 0, false, ::app::Uno::EventHandler__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_EventHandler__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_EventHandler__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_EventHandler__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_EventHandler__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::EventHandler__typeof()),
        ::uNewFunction("get_Count", List__Uno_EventHandler__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_EventHandler__get_Item, 0, false, ::app::Uno::EventHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_EventHandler__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_EventHandler__typeof()),
        ::uNewFunction("IndexOf", List__Uno_EventHandler__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::EventHandler__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_EventHandler__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::EventHandler__typeof()),
        ::uNewFunction(".ctor", List__Uno_EventHandler__New_1, 0, true, List__Uno_EventHandler__typeof()),
        ::uNewFunction(".ctor", List__Uno_EventHandler__New_2, 0, true, List__Uno_EventHandler__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_EventHandler__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::EventHandler__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_EventHandler__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_EventHandler__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::EventHandler__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_EventHandler__Sort, 0, false, ::app::Uno::Comparison__Uno_EventHandler__typeof()),
        ::uNewFunction("ToArray", List__Uno_EventHandler__ToArray, 0, false, ::uGetArrayType(::app::Uno::EventHandler__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_EventHandler__GetEnumerator_boxed(List__Uno_EventHandler* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_EventHandler__typeof(), __this->GetEnumerator());
}

void List__Uno_EventHandler___ObjInit(List__Uno_EventHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_EventHandler___ObjInit_1(List__Uno_EventHandler* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::EventHandler__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_EventHandler__Add(List__Uno_EventHandler* __this, ::uDelegate* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_EventHandler__AddRange(List__Uno_EventHandler* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_EventHandler::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uDelegate* i = ::app::Uno::Collections::IEnumerator__Uno_EventHandler::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_EventHandler__BoundsCheck(List__Uno_EventHandler* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_EventHandler__Clear(List__Uno_EventHandler* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_EventHandler__Contains(List__Uno_EventHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_EventHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_EventHandler__EnsureCapacity(List__Uno_EventHandler* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::EventHandler__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::EventHandler__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_EventHandler__get_Count(List__Uno_EventHandler* __this)
{
    return __this->_used;
}

::uDelegate* List__Uno_EventHandler__get_Item(List__Uno_EventHandler* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_EventHandler List__Uno_EventHandler__GetEnumerator(List__Uno_EventHandler* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_EventHandler__New_1(NULL, __this);
}

int List__Uno_EventHandler__IndexOf(List__Uno_EventHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_EventHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_EventHandler__Insert(List__Uno_EventHandler* __this, int index, ::uDelegate* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_EventHandler* List__Uno_EventHandler__New_1(::uStatic* __this)
{
    List__Uno_EventHandler* inst = (List__Uno_EventHandler*)::uAllocObject(sizeof(List__Uno_EventHandler), List__Uno_EventHandler__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_EventHandler* List__Uno_EventHandler__New_2(::uStatic* __this, int capacity)
{
    List__Uno_EventHandler* inst = (List__Uno_EventHandler*)::uAllocObject(sizeof(List__Uno_EventHandler), List__Uno_EventHandler__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_EventHandler__Remove(List__Uno_EventHandler* __this, ::uDelegate* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_EventHandler(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_EventHandler__RemoveAt(List__Uno_EventHandler* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_EventHandler__set_Item(List__Uno_EventHandler* __this, int index, ::uDelegate* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uDelegate*>(index) = value;
    __this->_version++;
}

void List__Uno_EventHandler__Sort(List__Uno_EventHandler* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_EventHandler(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_EventHandler__ToArray(List__Uno_EventHandler* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::EventHandler__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uDelegate*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uDelegate*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Exception__uType* List__Uno_Exception__typeof()
{
    static ::uStaticStrong<List__Uno_Exception__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Exception__uType*)::uAllocClassType(sizeof(List__Uno_Exception__uType), "Uno.Collections.List<Uno.Exception>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::app::Uno::Exception*(*)(void*, int))List__Uno_Exception__get_Item;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Uno_Exception__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Exception__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Uno_Exception__typeof(), offsetof(List__Uno_Exception__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Uno_Exception__typeof(), offsetof(List__Uno_Exception__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Uno_Exception__typeof(), offsetof(List__Uno_Exception__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Exception, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Exception, _data), ::uGetArrayType(::app::Uno::Exception__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Exception, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Exception, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Exception__Add, 0, false, ::app::Uno::Exception__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Exception__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Exception__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Exception__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Exception__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Exception__typeof()),
        ::uNewFunction("get_Count", List__Uno_Exception__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Exception__get_Item, 0, false, ::app::Uno::Exception__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Exception__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Exception__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Exception__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Exception__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Exception__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Exception__typeof()),
        ::uNewFunction(".ctor", List__Uno_Exception__New_1, 0, true, List__Uno_Exception__typeof()),
        ::uNewFunction(".ctor", List__Uno_Exception__New_2, 0, true, List__Uno_Exception__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Exception__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Exception__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Exception__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Exception__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Exception__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Exception__Sort, 0, false, ::app::Uno::Comparison__Uno_Exception__typeof()),
        ::uNewFunction("ToArray", List__Uno_Exception__ToArray, 0, false, ::uGetArrayType(::app::Uno::Exception__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Exception__GetEnumerator_boxed(List__Uno_Exception* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Exception__typeof(), __this->GetEnumerator());
}

void List__Uno_Exception___ObjInit(List__Uno_Exception* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Exception___ObjInit_1(List__Uno_Exception* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Exception__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Exception__Add(List__Uno_Exception* __this, ::app::Uno::Exception* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Exception*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Exception__AddRange(List__Uno_Exception* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Exception::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Exception* i = ::app::Uno::Collections::IEnumerator__Uno_Exception::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Exception__BoundsCheck(List__Uno_Exception* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Exception__Clear(List__Uno_Exception* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Exception__Contains(List__Uno_Exception* __this, ::app::Uno::Exception* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Exception(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Exception*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Exception__EnsureCapacity(List__Uno_Exception* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Exception__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Exception__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Exception*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Exception*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Exception__get_Count(List__Uno_Exception* __this)
{
    return __this->_used;
}

::app::Uno::Exception* List__Uno_Exception__get_Item(List__Uno_Exception* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Exception*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Exception List__Uno_Exception__GetEnumerator(List__Uno_Exception* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Exception__New_1(NULL, __this);
}

int List__Uno_Exception__IndexOf(List__Uno_Exception* __this, ::app::Uno::Exception* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Exception(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Exception*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Exception__Insert(List__Uno_Exception* __this, int index, ::app::Uno::Exception* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Exception*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Exception*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Exception*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Exception* List__Uno_Exception__New_1(::uStatic* __this)
{
    List__Uno_Exception* inst = (List__Uno_Exception*)::uAllocObject(sizeof(List__Uno_Exception), List__Uno_Exception__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Exception* List__Uno_Exception__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Exception* inst = (List__Uno_Exception*)::uAllocObject(sizeof(List__Uno_Exception), List__Uno_Exception__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Exception__Remove(List__Uno_Exception* __this, ::app::Uno::Exception* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Exception(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Exception*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Exception__RemoveAt(List__Uno_Exception* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Exception*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Exception*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Exception*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Exception__set_Item(List__Uno_Exception* __this, int index, ::app::Uno::Exception* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Exception*>(index) = value;
    __this->_version++;
}

void List__Uno_Exception__Sort(List__Uno_Exception* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Exception(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Exception__ToArray(List__Uno_Exception* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Exception__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Exception*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Exception*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Graphics_PolygonFace__uType* List__Uno_Graphics_PolygonFace__typeof()
{
    static ::uStaticStrong<List__Uno_Graphics_PolygonFace__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Graphics_PolygonFace__uType*)::uAllocClassType(sizeof(List__Uno_Graphics_PolygonFace__uType), "Uno.Collections.List<Uno.Graphics.PolygonFace>", false, 3, 1, 0);

    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Uno_Graphics_PolygonFace__RemoveAt;
    type->__interface_0.__fp_get_Item = (int(*)(void*, int))List__Uno_Graphics_PolygonFace__get_Item;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Uno_Graphics_PolygonFace__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Graphics_PolygonFace__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Uno_Graphics_PolygonFace__typeof(), offsetof(List__Uno_Graphics_PolygonFace__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Uno_Graphics_PolygonFace__typeof(), offsetof(List__Uno_Graphics_PolygonFace__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Uno_Graphics_PolygonFace__typeof(), offsetof(List__Uno_Graphics_PolygonFace__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Graphics_PolygonFace, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Graphics_PolygonFace, _data), ::uGetArrayType(::app::Uno::Graphics::PolygonFace__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Graphics_PolygonFace, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Graphics_PolygonFace, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Graphics_PolygonFace__Add, 0, false, ::app::Uno::Graphics::PolygonFace__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Graphics_PolygonFace__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Graphics_PolygonFace__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Graphics_PolygonFace__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Graphics_PolygonFace__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::PolygonFace__typeof()),
        ::uNewFunction("get_Count", List__Uno_Graphics_PolygonFace__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Graphics_PolygonFace__get_Item, 0, false, ::app::Uno::Graphics::PolygonFace__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Graphics_PolygonFace__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Graphics_PolygonFace__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Graphics_PolygonFace__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Graphics::PolygonFace__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Graphics_PolygonFace__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Graphics::PolygonFace__typeof()),
        ::uNewFunction(".ctor", List__Uno_Graphics_PolygonFace__New_1, 0, true, List__Uno_Graphics_PolygonFace__typeof()),
        ::uNewFunction(".ctor", List__Uno_Graphics_PolygonFace__New_2, 0, true, List__Uno_Graphics_PolygonFace__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Graphics_PolygonFace__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::PolygonFace__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Graphics_PolygonFace__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Graphics_PolygonFace__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Graphics::PolygonFace__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Graphics_PolygonFace__Sort, 0, false, ::app::Uno::Comparison__Uno_Graphics_PolygonFace__typeof()),
        ::uNewFunction("ToArray", List__Uno_Graphics_PolygonFace__ToArray, 0, false, ::uGetArrayType(::app::Uno::Graphics::PolygonFace__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Graphics_PolygonFace__GetEnumerator_boxed(List__Uno_Graphics_PolygonFace* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Graphics_PolygonFace__typeof(), __this->GetEnumerator());
}

void List__Uno_Graphics_PolygonFace___ObjInit(List__Uno_Graphics_PolygonFace* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Graphics_PolygonFace___ObjInit_1(List__Uno_Graphics_PolygonFace* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Graphics::PolygonFace__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Graphics_PolygonFace__Add(List__Uno_Graphics_PolygonFace* __this, int item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< int>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Graphics_PolygonFace__AddRange(List__Uno_Graphics_PolygonFace* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Graphics_PolygonFace::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        int i = ::app::Uno::Collections::IEnumerator__Uno_Graphics_PolygonFace::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Graphics_PolygonFace__BoundsCheck(List__Uno_Graphics_PolygonFace* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Graphics_PolygonFace__Clear(List__Uno_Graphics_PolygonFace* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Graphics_PolygonFace__Contains(List__Uno_Graphics_PolygonFace* __this, int item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Graphics_PolygonFace(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< int>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Graphics_PolygonFace__EnsureCapacity(List__Uno_Graphics_PolygonFace* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Graphics::PolygonFace__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Graphics::PolygonFace__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< int>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Graphics_PolygonFace__get_Count(List__Uno_Graphics_PolygonFace* __this)
{
    return __this->_used;
}

int List__Uno_Graphics_PolygonFace__get_Item(List__Uno_Graphics_PolygonFace* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< int>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Graphics_PolygonFace List__Uno_Graphics_PolygonFace__GetEnumerator(List__Uno_Graphics_PolygonFace* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Graphics_PolygonFace__New_1(NULL, __this);
}

int List__Uno_Graphics_PolygonFace__IndexOf(List__Uno_Graphics_PolygonFace* __this, int item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Graphics_PolygonFace(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< int>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Graphics_PolygonFace__Insert(List__Uno_Graphics_PolygonFace* __this, int index, int item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< int>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< int>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Graphics_PolygonFace* List__Uno_Graphics_PolygonFace__New_1(::uStatic* __this)
{
    List__Uno_Graphics_PolygonFace* inst = (List__Uno_Graphics_PolygonFace*)::uAllocObject(sizeof(List__Uno_Graphics_PolygonFace), List__Uno_Graphics_PolygonFace__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Graphics_PolygonFace* List__Uno_Graphics_PolygonFace__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Graphics_PolygonFace* inst = (List__Uno_Graphics_PolygonFace*)::uAllocObject(sizeof(List__Uno_Graphics_PolygonFace), List__Uno_Graphics_PolygonFace__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Graphics_PolygonFace__Remove(List__Uno_Graphics_PolygonFace* __this, int item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Graphics_PolygonFace(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< int>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Graphics_PolygonFace__RemoveAt(List__Uno_Graphics_PolygonFace* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< int>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< int>(__this->_used) = 0;
    __this->_version++;
}

void List__Uno_Graphics_PolygonFace__set_Item(List__Uno_Graphics_PolygonFace* __this, int index, int value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< int>(index) = value;
    __this->_version++;
}

void List__Uno_Graphics_PolygonFace__Sort(List__Uno_Graphics_PolygonFace* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Graphics_PolygonFace(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Graphics_PolygonFace__ToArray(List__Uno_Graphics_PolygonFace* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Graphics::PolygonFace__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< int>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Net_Http_HttpMessageHandlerRequest__uType* List__Uno_Net_Http_HttpMessageHandlerRequest__typeof()
{
    static ::uStaticStrong<List__Uno_Net_Http_HttpMessageHandlerRequest__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Net_Http_HttpMessageHandlerRequest__uType*)::uAllocClassType(sizeof(List__Uno_Net_Http_HttpMessageHandlerRequest__uType), "Uno.Collections.List<Uno.Net.Http.HttpMessageHandlerRequest>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Net_Http_HttpMessageHandlerRequest__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Net_Http_HttpMessageHandlerRequest__typeof(), offsetof(List__Uno_Net_Http_HttpMessageHandlerRequest__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Net_Http_HttpMessageHandlerRequest, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Net_Http_HttpMessageHandlerRequest, _data), ::uGetArrayType(::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Net_Http_HttpMessageHandlerRequest, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Net_Http_HttpMessageHandlerRequest, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Net_Http_HttpMessageHandlerRequest__Add, 0, false, ::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Net_Http_HttpMessageHandlerRequest__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Net_Http_HttpMessageHandlerRequest__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Net_Http_HttpMessageHandlerRequest__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Net_Http_HttpMessageHandlerRequest__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof()),
        ::uNewFunction("get_Count", List__Uno_Net_Http_HttpMessageHandlerRequest__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Net_Http_HttpMessageHandlerRequest__get_Item, 0, false, ::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Net_Http_HttpMessageHandlerRequest__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Net_Http_HttpMessageHandlerRequest__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Net_Http_HttpMessageHandlerRequest__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Net_Http_HttpMessageHandlerRequest__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof()),
        ::uNewFunction(".ctor", List__Uno_Net_Http_HttpMessageHandlerRequest__New_1, 0, true, List__Uno_Net_Http_HttpMessageHandlerRequest__typeof()),
        ::uNewFunction(".ctor", List__Uno_Net_Http_HttpMessageHandlerRequest__New_2, 0, true, List__Uno_Net_Http_HttpMessageHandlerRequest__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Net_Http_HttpMessageHandlerRequest__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Net_Http_HttpMessageHandlerRequest__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Net_Http_HttpMessageHandlerRequest__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Net_Http_HttpMessageHandlerRequest__Sort, 0, false, ::app::Uno::Comparison__Uno_Net_Http_HttpMessageHandlerRequest__typeof()),
        ::uNewFunction("ToArray", List__Uno_Net_Http_HttpMessageHandlerRequest__ToArray, 0, false, ::uGetArrayType(::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Net_Http_HttpMessageHandlerRequest__GetEnumerator_boxed(List__Uno_Net_Http_HttpMessageHandlerRequest* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Net_Http_HttpMessageHandlerRequest__typeof(), __this->GetEnumerator());
}

void List__Uno_Net_Http_HttpMessageHandlerRequest___ObjInit(List__Uno_Net_Http_HttpMessageHandlerRequest* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Net_Http_HttpMessageHandlerRequest___ObjInit_1(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Net_Http_HttpMessageHandlerRequest__Add(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, ::app::Uno::Net::Http::HttpMessageHandlerRequest* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Net_Http_HttpMessageHandlerRequest__AddRange(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Net_Http_HttpMessageHandlerRequest::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Net::Http::HttpMessageHandlerRequest* i = ::app::Uno::Collections::IEnumerator__Uno_Net_Http_HttpMessageHandlerRequest::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Net_Http_HttpMessageHandlerRequest__BoundsCheck(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Net_Http_HttpMessageHandlerRequest__Clear(List__Uno_Net_Http_HttpMessageHandlerRequest* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Net_Http_HttpMessageHandlerRequest__Contains(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, ::app::Uno::Net::Http::HttpMessageHandlerRequest* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Net_Http_HttpMessageHandlerRequest(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Net_Http_HttpMessageHandlerRequest__EnsureCapacity(List__Uno_Net_Http_HttpMessageHandlerRequest* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Net_Http_HttpMessageHandlerRequest__get_Count(List__Uno_Net_Http_HttpMessageHandlerRequest* __this)
{
    return __this->_used;
}

::app::Uno::Net::Http::HttpMessageHandlerRequest* List__Uno_Net_Http_HttpMessageHandlerRequest__get_Item(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Net_Http_HttpMessageHandlerRequest List__Uno_Net_Http_HttpMessageHandlerRequest__GetEnumerator(List__Uno_Net_Http_HttpMessageHandlerRequest* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Net_Http_HttpMessageHandlerRequest__New_1(NULL, __this);
}

int List__Uno_Net_Http_HttpMessageHandlerRequest__IndexOf(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, ::app::Uno::Net::Http::HttpMessageHandlerRequest* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Net_Http_HttpMessageHandlerRequest(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Net_Http_HttpMessageHandlerRequest__Insert(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, int index, ::app::Uno::Net::Http::HttpMessageHandlerRequest* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Net_Http_HttpMessageHandlerRequest* List__Uno_Net_Http_HttpMessageHandlerRequest__New_1(::uStatic* __this)
{
    List__Uno_Net_Http_HttpMessageHandlerRequest* inst = (List__Uno_Net_Http_HttpMessageHandlerRequest*)::uAllocObject(sizeof(List__Uno_Net_Http_HttpMessageHandlerRequest), List__Uno_Net_Http_HttpMessageHandlerRequest__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Net_Http_HttpMessageHandlerRequest* List__Uno_Net_Http_HttpMessageHandlerRequest__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Net_Http_HttpMessageHandlerRequest* inst = (List__Uno_Net_Http_HttpMessageHandlerRequest*)::uAllocObject(sizeof(List__Uno_Net_Http_HttpMessageHandlerRequest), List__Uno_Net_Http_HttpMessageHandlerRequest__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Net_Http_HttpMessageHandlerRequest__Remove(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, ::app::Uno::Net::Http::HttpMessageHandlerRequest* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Net_Http_HttpMessageHandlerRequest(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Net_Http_HttpMessageHandlerRequest__RemoveAt(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Net_Http_HttpMessageHandlerRequest__set_Item(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, int index, ::app::Uno::Net::Http::HttpMessageHandlerRequest* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(index) = value;
    __this->_version++;
}

void List__Uno_Net_Http_HttpMessageHandlerRequest__Sort(List__Uno_Net_Http_HttpMessageHandlerRequest* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Net_Http_HttpMessageHandlerRequest(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Net_Http_HttpMessageHandlerRequest__ToArray(List__Uno_Net_Http_HttpMessageHandlerRequest* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Net::Http::HttpMessageHandlerRequest__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Net::Http::HttpMessageHandlerRequest*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Platform_Key__uType* List__Uno_Platform_Key__typeof()
{
    static ::uStaticStrong<List__Uno_Platform_Key__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Platform_Key__uType*)::uAllocClassType(sizeof(List__Uno_Platform_Key__uType), "Uno.Collections.List<Uno.Platform.Key>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Platform_Key__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Platform_Key__typeof(), offsetof(List__Uno_Platform_Key__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Platform_Key, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Platform_Key, _data), ::uGetArrayType(::app::Uno::Platform::Key__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Platform_Key, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Platform_Key, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Platform_Key__Add, 0, false, ::app::Uno::Platform::Key__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Platform_Key__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Platform_Key__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Platform_Key__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Platform_Key__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Platform::Key__typeof()),
        ::uNewFunction("get_Count", List__Uno_Platform_Key__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Platform_Key__get_Item, 0, false, ::app::Uno::Platform::Key__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Platform_Key__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Platform_Key__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Platform_Key__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Platform::Key__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Platform_Key__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Platform::Key__typeof()),
        ::uNewFunction(".ctor", List__Uno_Platform_Key__New_1, 0, true, List__Uno_Platform_Key__typeof()),
        ::uNewFunction(".ctor", List__Uno_Platform_Key__New_2, 0, true, List__Uno_Platform_Key__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Platform_Key__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Platform::Key__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Platform_Key__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Platform_Key__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Platform::Key__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Platform_Key__Sort, 0, false, ::app::Uno::Comparison__Uno_Platform_Key__typeof()),
        ::uNewFunction("ToArray", List__Uno_Platform_Key__ToArray, 0, false, ::uGetArrayType(::app::Uno::Platform::Key__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Platform_Key__GetEnumerator_boxed(List__Uno_Platform_Key* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Platform_Key__typeof(), __this->GetEnumerator());
}

void List__Uno_Platform_Key___ObjInit(List__Uno_Platform_Key* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Platform_Key___ObjInit_1(List__Uno_Platform_Key* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Platform::Key__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Platform_Key__Add(List__Uno_Platform_Key* __this, int item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< int>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Platform_Key__AddRange(List__Uno_Platform_Key* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Platform_Key::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        int i = ::app::Uno::Collections::IEnumerator__Uno_Platform_Key::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Platform_Key__BoundsCheck(List__Uno_Platform_Key* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Platform_Key__Clear(List__Uno_Platform_Key* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Platform_Key__Contains(List__Uno_Platform_Key* __this, int item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Platform_Key(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< int>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Platform_Key__EnsureCapacity(List__Uno_Platform_Key* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Platform::Key__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Platform::Key__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< int>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Platform_Key__get_Count(List__Uno_Platform_Key* __this)
{
    return __this->_used;
}

int List__Uno_Platform_Key__get_Item(List__Uno_Platform_Key* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< int>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Platform_Key List__Uno_Platform_Key__GetEnumerator(List__Uno_Platform_Key* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Platform_Key__New_1(NULL, __this);
}

int List__Uno_Platform_Key__IndexOf(List__Uno_Platform_Key* __this, int item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Platform_Key(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< int>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Platform_Key__Insert(List__Uno_Platform_Key* __this, int index, int item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< int>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< int>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Platform_Key* List__Uno_Platform_Key__New_1(::uStatic* __this)
{
    List__Uno_Platform_Key* inst = (List__Uno_Platform_Key*)::uAllocObject(sizeof(List__Uno_Platform_Key), List__Uno_Platform_Key__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Platform_Key* List__Uno_Platform_Key__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Platform_Key* inst = (List__Uno_Platform_Key*)::uAllocObject(sizeof(List__Uno_Platform_Key), List__Uno_Platform_Key__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Platform_Key__Remove(List__Uno_Platform_Key* __this, int item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Platform_Key(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< int>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Platform_Key__RemoveAt(List__Uno_Platform_Key* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< int>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< int>(__this->_used) = 0;
    __this->_version++;
}

void List__Uno_Platform_Key__set_Item(List__Uno_Platform_Key* __this, int index, int value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< int>(index) = value;
    __this->_version++;
}

void List__Uno_Platform_Key__Sort(List__Uno_Platform_Key* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Platform_Key(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Platform_Key__ToArray(List__Uno_Platform_Key* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Platform::Key__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< int>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< int>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Reflection_CppField__uType* List__Uno_Reflection_CppField__typeof()
{
    static ::uStaticStrong<List__Uno_Reflection_CppField__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Reflection_CppField__uType*)::uAllocClassType(sizeof(List__Uno_Reflection_CppField__uType), "Uno.Collections.List<Uno.Reflection.CppField>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Reflection_CppField__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Reflection_CppField__typeof(), offsetof(List__Uno_Reflection_CppField__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Reflection_CppField, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Reflection_CppField, _data), ::uGetArrayType(::app::Uno::Reflection::CppField__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Reflection_CppField, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Reflection_CppField, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Reflection_CppField__Add, 0, false, ::app::Uno::Reflection::CppField__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Reflection_CppField__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Reflection_CppField__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Reflection_CppField__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Reflection_CppField__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Reflection::CppField__typeof()),
        ::uNewFunction("get_Count", List__Uno_Reflection_CppField__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Reflection_CppField__get_Item, 0, false, ::app::Uno::Reflection::CppField__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Reflection_CppField__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Reflection_CppField__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Reflection_CppField__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Reflection::CppField__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Reflection_CppField__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Reflection::CppField__typeof()),
        ::uNewFunction(".ctor", List__Uno_Reflection_CppField__New_1, 0, true, List__Uno_Reflection_CppField__typeof()),
        ::uNewFunction(".ctor", List__Uno_Reflection_CppField__New_2, 0, true, List__Uno_Reflection_CppField__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Reflection_CppField__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Reflection::CppField__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Reflection_CppField__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Reflection_CppField__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Reflection::CppField__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Reflection_CppField__Sort, 0, false, ::app::Uno::Comparison__Uno_Reflection_CppField__typeof()),
        ::uNewFunction("ToArray", List__Uno_Reflection_CppField__ToArray, 0, false, ::uGetArrayType(::app::Uno::Reflection::CppField__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Reflection_CppField__GetEnumerator_boxed(List__Uno_Reflection_CppField* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Reflection_CppField__typeof(), __this->GetEnumerator());
}

void List__Uno_Reflection_CppField___ObjInit(List__Uno_Reflection_CppField* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Reflection_CppField___ObjInit_1(List__Uno_Reflection_CppField* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Reflection::CppField__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Reflection_CppField__Add(List__Uno_Reflection_CppField* __this, ::uField* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Reflection_CppField__AddRange(List__Uno_Reflection_CppField* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Reflection_CppField::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uField* i = ::app::Uno::Collections::IEnumerator__Uno_Reflection_CppField::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Reflection_CppField__BoundsCheck(List__Uno_Reflection_CppField* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Reflection_CppField__Clear(List__Uno_Reflection_CppField* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Reflection_CppField__Contains(List__Uno_Reflection_CppField* __this, ::uField* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Reflection_CppField(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Reflection_CppField__EnsureCapacity(List__Uno_Reflection_CppField* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Reflection::CppField__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Reflection::CppField__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::uField*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Reflection_CppField__get_Count(List__Uno_Reflection_CppField* __this)
{
    return __this->_used;
}

::uField* List__Uno_Reflection_CppField__get_Item(List__Uno_Reflection_CppField* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Reflection_CppField List__Uno_Reflection_CppField__GetEnumerator(List__Uno_Reflection_CppField* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Reflection_CppField__New_1(NULL, __this);
}

int List__Uno_Reflection_CppField__IndexOf(List__Uno_Reflection_CppField* __this, ::uField* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Reflection_CppField(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Reflection_CppField__Insert(List__Uno_Reflection_CppField* __this, int index, ::uField* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Reflection_CppField* List__Uno_Reflection_CppField__New_1(::uStatic* __this)
{
    List__Uno_Reflection_CppField* inst = (List__Uno_Reflection_CppField*)::uAllocObject(sizeof(List__Uno_Reflection_CppField), List__Uno_Reflection_CppField__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Reflection_CppField* List__Uno_Reflection_CppField__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Reflection_CppField* inst = (List__Uno_Reflection_CppField*)::uAllocObject(sizeof(List__Uno_Reflection_CppField), List__Uno_Reflection_CppField__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Reflection_CppField__Remove(List__Uno_Reflection_CppField* __this, ::uField* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Reflection_CppField(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Reflection_CppField__RemoveAt(List__Uno_Reflection_CppField* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(__this->_used) = ::uDefault< ::uField*>();
    __this->_version++;
}

void List__Uno_Reflection_CppField__set_Item(List__Uno_Reflection_CppField* __this, int index, ::uField* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(index) = value;
    __this->_version++;
}

void List__Uno_Reflection_CppField__Sort(List__Uno_Reflection_CppField* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Reflection_CppField(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Reflection_CppField__ToArray(List__Uno_Reflection_CppField* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Reflection::CppField__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::uField*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uField*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Reflection_CppFunction__uType* List__Uno_Reflection_CppFunction__typeof()
{
    static ::uStaticStrong<List__Uno_Reflection_CppFunction__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Reflection_CppFunction__uType*)::uAllocClassType(sizeof(List__Uno_Reflection_CppFunction__uType), "Uno.Collections.List<Uno.Reflection.CppFunction>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Reflection_CppFunction__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Reflection_CppFunction__typeof(), offsetof(List__Uno_Reflection_CppFunction__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Reflection_CppFunction, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Reflection_CppFunction, _data), ::uGetArrayType(::app::Uno::Reflection::CppFunction__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Reflection_CppFunction, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Reflection_CppFunction, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Reflection_CppFunction__Add, 0, false, ::app::Uno::Reflection::CppFunction__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Reflection_CppFunction__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Reflection_CppFunction__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Reflection_CppFunction__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Reflection_CppFunction__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Reflection::CppFunction__typeof()),
        ::uNewFunction("get_Count", List__Uno_Reflection_CppFunction__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Reflection_CppFunction__get_Item, 0, false, ::app::Uno::Reflection::CppFunction__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Reflection_CppFunction__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Reflection_CppFunction__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Reflection_CppFunction__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Reflection::CppFunction__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Reflection_CppFunction__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Reflection::CppFunction__typeof()),
        ::uNewFunction(".ctor", List__Uno_Reflection_CppFunction__New_1, 0, true, List__Uno_Reflection_CppFunction__typeof()),
        ::uNewFunction(".ctor", List__Uno_Reflection_CppFunction__New_2, 0, true, List__Uno_Reflection_CppFunction__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Reflection_CppFunction__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Reflection::CppFunction__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Reflection_CppFunction__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Reflection_CppFunction__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Reflection::CppFunction__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Reflection_CppFunction__Sort, 0, false, ::app::Uno::Comparison__Uno_Reflection_CppFunction__typeof()),
        ::uNewFunction("ToArray", List__Uno_Reflection_CppFunction__ToArray, 0, false, ::uGetArrayType(::app::Uno::Reflection::CppFunction__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Reflection_CppFunction__GetEnumerator_boxed(List__Uno_Reflection_CppFunction* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Reflection_CppFunction__typeof(), __this->GetEnumerator());
}

void List__Uno_Reflection_CppFunction___ObjInit(List__Uno_Reflection_CppFunction* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Reflection_CppFunction___ObjInit_1(List__Uno_Reflection_CppFunction* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Reflection::CppFunction__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Reflection_CppFunction__Add(List__Uno_Reflection_CppFunction* __this, ::uFunction* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Reflection_CppFunction__AddRange(List__Uno_Reflection_CppFunction* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Reflection_CppFunction::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uFunction* i = ::app::Uno::Collections::IEnumerator__Uno_Reflection_CppFunction::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Reflection_CppFunction__BoundsCheck(List__Uno_Reflection_CppFunction* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Reflection_CppFunction__Clear(List__Uno_Reflection_CppFunction* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Reflection_CppFunction__Contains(List__Uno_Reflection_CppFunction* __this, ::uFunction* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Reflection_CppFunction(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Reflection_CppFunction__EnsureCapacity(List__Uno_Reflection_CppFunction* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Reflection::CppFunction__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Reflection::CppFunction__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->Item< ::uFunction*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Reflection_CppFunction__get_Count(List__Uno_Reflection_CppFunction* __this)
{
    return __this->_used;
}

::uFunction* List__Uno_Reflection_CppFunction__get_Item(List__Uno_Reflection_CppFunction* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Reflection_CppFunction List__Uno_Reflection_CppFunction__GetEnumerator(List__Uno_Reflection_CppFunction* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Reflection_CppFunction__New_1(NULL, __this);
}

int List__Uno_Reflection_CppFunction__IndexOf(List__Uno_Reflection_CppFunction* __this, ::uFunction* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Reflection_CppFunction(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Reflection_CppFunction__Insert(List__Uno_Reflection_CppFunction* __this, int index, ::uFunction* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Reflection_CppFunction* List__Uno_Reflection_CppFunction__New_1(::uStatic* __this)
{
    List__Uno_Reflection_CppFunction* inst = (List__Uno_Reflection_CppFunction*)::uAllocObject(sizeof(List__Uno_Reflection_CppFunction), List__Uno_Reflection_CppFunction__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Reflection_CppFunction* List__Uno_Reflection_CppFunction__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Reflection_CppFunction* inst = (List__Uno_Reflection_CppFunction*)::uAllocObject(sizeof(List__Uno_Reflection_CppFunction), List__Uno_Reflection_CppFunction__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Reflection_CppFunction__Remove(List__Uno_Reflection_CppFunction* __this, ::uFunction* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Reflection_CppFunction(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Reflection_CppFunction__RemoveAt(List__Uno_Reflection_CppFunction* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(__this->_used) = ::uDefault< ::uFunction*>();
    __this->_version++;
}

void List__Uno_Reflection_CppFunction__set_Item(List__Uno_Reflection_CppFunction* __this, int index, ::uFunction* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(index) = value;
    __this->_version++;
}

void List__Uno_Reflection_CppFunction__Sort(List__Uno_Reflection_CppFunction* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Reflection_CppFunction(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Reflection_CppFunction__ToArray(List__Uno_Reflection_CppFunction* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Reflection::CppFunction__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->Item< ::uFunction*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uFunction*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_Runtime_Implementation_Internal_FormatStringToken__uType* List__Uno_Runtime_Implementation_Internal_FormatStringToken__typeof()
{
    static ::uStaticStrong<List__Uno_Runtime_Implementation_Internal_FormatStringToken__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_Runtime_Implementation_Internal_FormatStringToken__uType*)::uAllocClassType(sizeof(List__Uno_Runtime_Implementation_Internal_FormatStringToken__uType), "Uno.Collections.List<Uno.Runtime.Implementation.Internal.FormatStringToken>", false, 1, 1, 0);

    type->__interface_0.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_Runtime_Implementation_Internal_FormatStringToken__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IEnumerable__Uno_Runtime_Implementation_Internal_FormatStringToken__typeof(), offsetof(List__Uno_Runtime_Implementation_Internal_FormatStringToken__uType, __interface_0));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_Runtime_Implementation_Internal_FormatStringToken, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_Runtime_Implementation_Internal_FormatStringToken, _data), ::uGetArrayType(::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_Runtime_Implementation_Internal_FormatStringToken, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_Runtime_Implementation_Internal_FormatStringToken, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_Runtime_Implementation_Internal_FormatStringToken__Add, 0, false, ::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_Runtime_Implementation_Internal_FormatStringToken__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_Runtime_Implementation_Internal_FormatStringToken__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_Runtime_Implementation_Internal_FormatStringToken__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_Runtime_Implementation_Internal_FormatStringToken__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof()),
        ::uNewFunction("get_Count", List__Uno_Runtime_Implementation_Internal_FormatStringToken__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_Runtime_Implementation_Internal_FormatStringToken__get_Item, 0, false, ::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_Runtime_Implementation_Internal_FormatStringToken__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_Runtime_Implementation_Internal_FormatStringToken__typeof()),
        ::uNewFunction("IndexOf", List__Uno_Runtime_Implementation_Internal_FormatStringToken__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_Runtime_Implementation_Internal_FormatStringToken__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof()),
        ::uNewFunction(".ctor", List__Uno_Runtime_Implementation_Internal_FormatStringToken__New_1, 0, true, List__Uno_Runtime_Implementation_Internal_FormatStringToken__typeof()),
        ::uNewFunction(".ctor", List__Uno_Runtime_Implementation_Internal_FormatStringToken__New_2, 0, true, List__Uno_Runtime_Implementation_Internal_FormatStringToken__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_Runtime_Implementation_Internal_FormatStringToken__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_Runtime_Implementation_Internal_FormatStringToken__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_Runtime_Implementation_Internal_FormatStringToken__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_Runtime_Implementation_Internal_FormatStringToken__Sort, 0, false, ::app::Uno::Comparison__Uno_Runtime_Implementation_Internal_FormatStringToken__typeof()),
        ::uNewFunction("ToArray", List__Uno_Runtime_Implementation_Internal_FormatStringToken__ToArray, 0, false, ::uGetArrayType(::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_Runtime_Implementation_Internal_FormatStringToken__GetEnumerator_boxed(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_Runtime_Implementation_Internal_FormatStringToken__typeof(), __this->GetEnumerator());
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken___ObjInit(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken___ObjInit_1(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken__Add(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, ::app::Uno::Runtime::Implementation::Internal::FormatStringToken* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken__AddRange(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Runtime_Implementation_Internal_FormatStringToken::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Runtime::Implementation::Internal::FormatStringToken* i = ::app::Uno::Collections::IEnumerator__Uno_Runtime_Implementation_Internal_FormatStringToken::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken__BoundsCheck(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken__Clear(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_Runtime_Implementation_Internal_FormatStringToken__Contains(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, ::app::Uno::Runtime::Implementation::Internal::FormatStringToken* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Runtime_Implementation_Internal_FormatStringToken(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken__EnsureCapacity(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_Runtime_Implementation_Internal_FormatStringToken__get_Count(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this)
{
    return __this->_used;
}

::app::Uno::Runtime::Implementation::Internal::FormatStringToken* List__Uno_Runtime_Implementation_Internal_FormatStringToken__get_Item(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_Runtime_Implementation_Internal_FormatStringToken List__Uno_Runtime_Implementation_Internal_FormatStringToken__GetEnumerator(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_Runtime_Implementation_Internal_FormatStringToken__New_1(NULL, __this);
}

int List__Uno_Runtime_Implementation_Internal_FormatStringToken__IndexOf(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, ::app::Uno::Runtime::Implementation::Internal::FormatStringToken* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Runtime_Implementation_Internal_FormatStringToken(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken__Insert(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, int index, ::app::Uno::Runtime::Implementation::Internal::FormatStringToken* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_Runtime_Implementation_Internal_FormatStringToken* List__Uno_Runtime_Implementation_Internal_FormatStringToken__New_1(::uStatic* __this)
{
    List__Uno_Runtime_Implementation_Internal_FormatStringToken* inst = (List__Uno_Runtime_Implementation_Internal_FormatStringToken*)::uAllocObject(sizeof(List__Uno_Runtime_Implementation_Internal_FormatStringToken), List__Uno_Runtime_Implementation_Internal_FormatStringToken__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_Runtime_Implementation_Internal_FormatStringToken* List__Uno_Runtime_Implementation_Internal_FormatStringToken__New_2(::uStatic* __this, int capacity)
{
    List__Uno_Runtime_Implementation_Internal_FormatStringToken* inst = (List__Uno_Runtime_Implementation_Internal_FormatStringToken*)::uAllocObject(sizeof(List__Uno_Runtime_Implementation_Internal_FormatStringToken), List__Uno_Runtime_Implementation_Internal_FormatStringToken__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_Runtime_Implementation_Internal_FormatStringToken__Remove(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, ::app::Uno::Runtime::Implementation::Internal::FormatStringToken* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_Runtime_Implementation_Internal_FormatStringToken(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken__RemoveAt(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken__set_Item(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, int index, ::app::Uno::Runtime::Implementation::Internal::FormatStringToken* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(index) = value;
    __this->_version++;
}

void List__Uno_Runtime_Implementation_Internal_FormatStringToken__Sort(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_Runtime_Implementation_Internal_FormatStringToken(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_Runtime_Implementation_Internal_FormatStringToken__ToArray(List__Uno_Runtime_Implementation_Internal_FormatStringToken* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::Runtime::Implementation::Internal::FormatStringToken__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::Runtime::Implementation::Internal::FormatStringToken*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_UX_FileSource__uType* List__Uno_UX_FileSource__typeof()
{
    static ::uStaticStrong<List__Uno_UX_FileSource__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_UX_FileSource__uType*)::uAllocClassType(sizeof(List__Uno_UX_FileSource__uType), "Uno.Collections.List<Uno.UX.FileSource>", false, 3, 1, 0);

    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Uno::UX::FileSource*))List__Uno_UX_FileSource__Add;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_UX_FileSource__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Uno_UX_FileSource__typeof(), offsetof(List__Uno_UX_FileSource__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Uno_UX_FileSource__typeof(), offsetof(List__Uno_UX_FileSource__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Uno_UX_FileSource__typeof(), offsetof(List__Uno_UX_FileSource__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_UX_FileSource, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_UX_FileSource, _data), ::uGetArrayType(::app::Uno::UX::FileSource__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_UX_FileSource, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_UX_FileSource, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_UX_FileSource__Add, 0, false, ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_UX_FileSource__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_UX_FileSource__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_UX_FileSource__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_UX_FileSource__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunction("get_Count", List__Uno_UX_FileSource__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_UX_FileSource__get_Item, 0, false, ::app::Uno::UX::FileSource__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_UX_FileSource__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_UX_FileSource__typeof()),
        ::uNewFunction("IndexOf", List__Uno_UX_FileSource__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_UX_FileSource__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunction(".ctor", List__Uno_UX_FileSource__New_1, 0, true, List__Uno_UX_FileSource__typeof()),
        ::uNewFunction(".ctor", List__Uno_UX_FileSource__New_2, 0, true, List__Uno_UX_FileSource__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_UX_FileSource__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_UX_FileSource__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_UX_FileSource__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_UX_FileSource__Sort, 0, false, ::app::Uno::Comparison__Uno_UX_FileSource__typeof()),
        ::uNewFunction("ToArray", List__Uno_UX_FileSource__ToArray, 0, false, ::uGetArrayType(::app::Uno::UX::FileSource__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_UX_FileSource__GetEnumerator_boxed(List__Uno_UX_FileSource* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_UX_FileSource__typeof(), __this->GetEnumerator());
}

void List__Uno_UX_FileSource___ObjInit(List__Uno_UX_FileSource* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_UX_FileSource___ObjInit_1(List__Uno_UX_FileSource* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::UX::FileSource__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_UX_FileSource__Add(List__Uno_UX_FileSource* __this, ::app::Uno::UX::FileSource* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::FileSource*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_UX_FileSource__AddRange(List__Uno_UX_FileSource* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_UX_FileSource::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::UX::FileSource* i = ::app::Uno::Collections::IEnumerator__Uno_UX_FileSource::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_UX_FileSource__BoundsCheck(List__Uno_UX_FileSource* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_UX_FileSource__Clear(List__Uno_UX_FileSource* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_UX_FileSource__Contains(List__Uno_UX_FileSource* __this, ::app::Uno::UX::FileSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::FileSource*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_UX_FileSource__EnsureCapacity(List__Uno_UX_FileSource* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::UX::FileSource__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::UX::FileSource__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::UX::FileSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::FileSource*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_UX_FileSource__get_Count(List__Uno_UX_FileSource* __this)
{
    return __this->_used;
}

::app::Uno::UX::FileSource* List__Uno_UX_FileSource__get_Item(List__Uno_UX_FileSource* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::FileSource*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_UX_FileSource List__Uno_UX_FileSource__GetEnumerator(List__Uno_UX_FileSource* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_UX_FileSource__New_1(NULL, __this);
}

int List__Uno_UX_FileSource__IndexOf(List__Uno_UX_FileSource* __this, ::app::Uno::UX::FileSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::FileSource*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_UX_FileSource__Insert(List__Uno_UX_FileSource* __this, int index, ::app::Uno::UX::FileSource* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::FileSource*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::FileSource*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::FileSource*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_UX_FileSource* List__Uno_UX_FileSource__New_1(::uStatic* __this)
{
    List__Uno_UX_FileSource* inst = (List__Uno_UX_FileSource*)::uAllocObject(sizeof(List__Uno_UX_FileSource), List__Uno_UX_FileSource__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_UX_FileSource* List__Uno_UX_FileSource__New_2(::uStatic* __this, int capacity)
{
    List__Uno_UX_FileSource* inst = (List__Uno_UX_FileSource*)::uAllocObject(sizeof(List__Uno_UX_FileSource), List__Uno_UX_FileSource__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_UX_FileSource__Remove(List__Uno_UX_FileSource* __this, ::app::Uno::UX::FileSource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::FileSource*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_UX_FileSource__RemoveAt(List__Uno_UX_FileSource* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::FileSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::FileSource*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::FileSource*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_UX_FileSource__set_Item(List__Uno_UX_FileSource* __this, int index, ::app::Uno::UX::FileSource* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::FileSource*>(index) = value;
    __this->_version++;
}

void List__Uno_UX_FileSource__Sort(List__Uno_UX_FileSource* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_UX_FileSource(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_UX_FileSource__ToArray(List__Uno_UX_FileSource* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::UX::FileSource__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::UX::FileSource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::FileSource*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_UX_IFactory__uType* List__Uno_UX_IFactory__typeof()
{
    static ::uStaticStrong<List__Uno_UX_IFactory__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_UX_IFactory__uType*)::uAllocClassType(sizeof(List__Uno_UX_IFactory__uType), "Uno.Collections.List<Uno.UX.IFactory>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_UX_IFactory__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Uno_UX_IFactory__typeof(), offsetof(List__Uno_UX_IFactory__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_UX_IFactory__typeof(), offsetof(List__Uno_UX_IFactory__uType, __interface_1));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_UX_IFactory, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_UX_IFactory, _data), ::uGetArrayType(::app::Uno::UX::IFactory__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_UX_IFactory, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_UX_IFactory, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_UX_IFactory__Add, 0, false, ::app::Uno::UX::IFactory__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_UX_IFactory__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_UX_IFactory__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_UX_IFactory__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_UX_IFactory__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::IFactory__typeof()),
        ::uNewFunction("get_Count", List__Uno_UX_IFactory__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_UX_IFactory__get_Item, 0, false, ::app::Uno::UX::IFactory__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_UX_IFactory__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_UX_IFactory__typeof()),
        ::uNewFunction("IndexOf", List__Uno_UX_IFactory__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::IFactory__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_UX_IFactory__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::IFactory__typeof()),
        ::uNewFunction(".ctor", List__Uno_UX_IFactory__New_1, 0, true, List__Uno_UX_IFactory__typeof()),
        ::uNewFunction(".ctor", List__Uno_UX_IFactory__New_2, 0, true, List__Uno_UX_IFactory__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_UX_IFactory__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::IFactory__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_UX_IFactory__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_UX_IFactory__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::IFactory__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_UX_IFactory__Sort, 0, false, ::app::Uno::Comparison__Uno_UX_IFactory__typeof()),
        ::uNewFunction("ToArray", List__Uno_UX_IFactory__ToArray, 0, false, ::uGetArrayType(::app::Uno::UX::IFactory__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_UX_IFactory__GetEnumerator_boxed(List__Uno_UX_IFactory* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_UX_IFactory__typeof(), __this->GetEnumerator());
}

void List__Uno_UX_IFactory___ObjInit(List__Uno_UX_IFactory* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_UX_IFactory___ObjInit_1(List__Uno_UX_IFactory* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::UX::IFactory__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_UX_IFactory__Add(List__Uno_UX_IFactory* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_UX_IFactory__AddRange(List__Uno_UX_IFactory* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_UX_IFactory::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Uno_UX_IFactory::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_UX_IFactory__BoundsCheck(List__Uno_UX_IFactory* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_UX_IFactory__Clear(List__Uno_UX_IFactory* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_UX_IFactory__Contains(List__Uno_UX_IFactory* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_IFactory(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_UX_IFactory__EnsureCapacity(List__Uno_UX_IFactory* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::UX::IFactory__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::UX::IFactory__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_UX_IFactory__get_Count(List__Uno_UX_IFactory* __this)
{
    return __this->_used;
}

::uObject* List__Uno_UX_IFactory__get_Item(List__Uno_UX_IFactory* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_UX_IFactory List__Uno_UX_IFactory__GetEnumerator(List__Uno_UX_IFactory* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_UX_IFactory__New_1(NULL, __this);
}

int List__Uno_UX_IFactory__IndexOf(List__Uno_UX_IFactory* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_IFactory(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_UX_IFactory__Insert(List__Uno_UX_IFactory* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_UX_IFactory* List__Uno_UX_IFactory__New_1(::uStatic* __this)
{
    List__Uno_UX_IFactory* inst = (List__Uno_UX_IFactory*)::uAllocObject(sizeof(List__Uno_UX_IFactory), List__Uno_UX_IFactory__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_UX_IFactory* List__Uno_UX_IFactory__New_2(::uStatic* __this, int capacity)
{
    List__Uno_UX_IFactory* inst = (List__Uno_UX_IFactory*)::uAllocObject(sizeof(List__Uno_UX_IFactory), List__Uno_UX_IFactory__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_UX_IFactory__Remove(List__Uno_UX_IFactory* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_IFactory(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_UX_IFactory__RemoveAt(List__Uno_UX_IFactory* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_UX_IFactory__set_Item(List__Uno_UX_IFactory* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Uno_UX_IFactory__Sort(List__Uno_UX_IFactory* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_UX_IFactory(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_UX_IFactory__ToArray(List__Uno_UX_IFactory* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::UX::IFactory__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_UX_ITemplate__uType* List__Uno_UX_ITemplate__typeof()
{
    static ::uStaticStrong<List__Uno_UX_ITemplate__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_UX_ITemplate__uType*)::uAllocClassType(sizeof(List__Uno_UX_ITemplate__uType), "Uno.Collections.List<Uno.UX.ITemplate>", false, 3, 1, 0);

    type->__interface_0.__fp_get_Item = (::uObject*(*)(void*, int))List__Uno_UX_ITemplate__get_Item;
    type->__interface_1.__fp_Add = (void(*)(void*, ::uObject*))List__Uno_UX_ITemplate__Add;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Uno_UX_ITemplate__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_UX_ITemplate__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Uno_UX_ITemplate__typeof(), offsetof(List__Uno_UX_ITemplate__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Uno_UX_ITemplate__typeof(), offsetof(List__Uno_UX_ITemplate__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Uno_UX_ITemplate__typeof(), offsetof(List__Uno_UX_ITemplate__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_UX_ITemplate, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_UX_ITemplate, _data), ::uGetArrayType(::app::Uno::UX::ITemplate__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_UX_ITemplate, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_UX_ITemplate, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_UX_ITemplate__Add, 0, false, ::app::Uno::UX::ITemplate__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_UX_ITemplate__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_UX_ITemplate__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_UX_ITemplate__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_UX_ITemplate__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::ITemplate__typeof()),
        ::uNewFunction("get_Count", List__Uno_UX_ITemplate__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_UX_ITemplate__get_Item, 0, false, ::app::Uno::UX::ITemplate__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_UX_ITemplate__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_UX_ITemplate__typeof()),
        ::uNewFunction("IndexOf", List__Uno_UX_ITemplate__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::ITemplate__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_UX_ITemplate__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::ITemplate__typeof()),
        ::uNewFunction(".ctor", List__Uno_UX_ITemplate__New_1, 0, true, List__Uno_UX_ITemplate__typeof()),
        ::uNewFunction(".ctor", List__Uno_UX_ITemplate__New_2, 0, true, List__Uno_UX_ITemplate__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_UX_ITemplate__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::ITemplate__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_UX_ITemplate__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_UX_ITemplate__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::ITemplate__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_UX_ITemplate__Sort, 0, false, ::app::Uno::Comparison__Uno_UX_ITemplate__typeof()),
        ::uNewFunction("ToArray", List__Uno_UX_ITemplate__ToArray, 0, false, ::uGetArrayType(::app::Uno::UX::ITemplate__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_UX_ITemplate__GetEnumerator_boxed(List__Uno_UX_ITemplate* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_UX_ITemplate__typeof(), __this->GetEnumerator());
}

void List__Uno_UX_ITemplate___ObjInit(List__Uno_UX_ITemplate* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_UX_ITemplate___ObjInit_1(List__Uno_UX_ITemplate* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::UX::ITemplate__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_UX_ITemplate__Add(List__Uno_UX_ITemplate* __this, ::uObject* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_UX_ITemplate__AddRange(List__Uno_UX_ITemplate* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_UX_ITemplate::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::uObject* i = ::app::Uno::Collections::IEnumerator__Uno_UX_ITemplate::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_UX_ITemplate__BoundsCheck(List__Uno_UX_ITemplate* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_UX_ITemplate__Clear(List__Uno_UX_ITemplate* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_UX_ITemplate__Contains(List__Uno_UX_ITemplate* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_ITemplate(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_UX_ITemplate__EnsureCapacity(List__Uno_UX_ITemplate* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::UX::ITemplate__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::UX::ITemplate__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_UX_ITemplate__get_Count(List__Uno_UX_ITemplate* __this)
{
    return __this->_used;
}

::uObject* List__Uno_UX_ITemplate__get_Item(List__Uno_UX_ITemplate* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_UX_ITemplate List__Uno_UX_ITemplate__GetEnumerator(List__Uno_UX_ITemplate* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_UX_ITemplate__New_1(NULL, __this);
}

int List__Uno_UX_ITemplate__IndexOf(List__Uno_UX_ITemplate* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_ITemplate(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_UX_ITemplate__Insert(List__Uno_UX_ITemplate* __this, int index, ::uObject* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_UX_ITemplate* List__Uno_UX_ITemplate__New_1(::uStatic* __this)
{
    List__Uno_UX_ITemplate* inst = (List__Uno_UX_ITemplate*)::uAllocObject(sizeof(List__Uno_UX_ITemplate), List__Uno_UX_ITemplate__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_UX_ITemplate* List__Uno_UX_ITemplate__New_2(::uStatic* __this, int capacity)
{
    List__Uno_UX_ITemplate* inst = (List__Uno_UX_ITemplate*)::uAllocObject(sizeof(List__Uno_UX_ITemplate), List__Uno_UX_ITemplate__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_UX_ITemplate__Remove(List__Uno_UX_ITemplate* __this, ::uObject* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_ITemplate(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_UX_ITemplate__RemoveAt(List__Uno_UX_ITemplate* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_UX_ITemplate__set_Item(List__Uno_UX_ITemplate* __this, int index, ::uObject* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::uObject*>(index) = value;
    __this->_version++;
}

void List__Uno_UX_ITemplate__Sort(List__Uno_UX_ITemplate* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_UX_ITemplate(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_UX_ITemplate__ToArray(List__Uno_UX_ITemplate* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::UX::ITemplate__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::uObject*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::uObject*>(i);
    }

    return t;
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

List__Uno_UX_Resource__uType* List__Uno_UX_Resource__typeof()
{
    static ::uStaticStrong<List__Uno_UX_Resource__uType*> type;
    if (type != NULL) return type;

    type = (List__Uno_UX_Resource__uType*)::uAllocClassType(sizeof(List__Uno_UX_Resource__uType), "Uno.Collections.List<Uno.UX.Resource>", false, 3, 1, 0);

    type->__interface_0.__fp_RemoveAt = (void(*)(void*, int))List__Uno_UX_Resource__RemoveAt;
    type->__interface_0.__fp_get_Item = (::app::Uno::UX::Resource*(*)(void*, int))List__Uno_UX_Resource__get_Item;
    type->__interface_1.__fp_Clear = (void(*)(void*))List__Uno_UX_Resource__Clear;
    type->__interface_1.__fp_Add = (void(*)(void*, ::app::Uno::UX::Resource*))List__Uno_UX_Resource__Add;
    type->__interface_1.__fp_get_Count = (int(*)(void*))List__Uno_UX_Resource__get_Count;
    type->__interface_2.__fp_GetEnumerator = (::uObject*(*)(void*))List__Uno_UX_Resource__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IList__Uno_UX_Resource__typeof(), offsetof(List__Uno_UX_Resource__uType, __interface_0),
        ::app::Uno::Collections::ICollection__Uno_UX_Resource__typeof(), offsetof(List__Uno_UX_Resource__uType, __interface_1),
        ::app::Uno::Collections::IEnumerable__Uno_UX_Resource__typeof(), offsetof(List__Uno_UX_Resource__uType, __interface_2));

    type->SetStrongRefs(
        "_data", offsetof(List__Uno_UX_Resource, _data));

    type->SetFields(3,
        ::uNewField("_data", NULL, offsetof(List__Uno_UX_Resource, _data), ::uGetArrayType(::app::Uno::UX::Resource__typeof())),
        ::uNewField("_used", NULL, offsetof(List__Uno_UX_Resource, _used), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(List__Uno_UX_Resource, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(16,
        ::uNewFunctionVoid("Add", List__Uno_UX_Resource__Add, 0, false, ::app::Uno::UX::Resource__typeof()),
        ::uNewFunctionVoid("AddRange", List__Uno_UX_Resource__AddRange, 0, false, ::app::Uno::Collections::IEnumerable__Uno_UX_Resource__typeof()),
        ::uNewFunctionVoid("Clear", List__Uno_UX_Resource__Clear, 0, false),
        ::uNewFunction("Contains", List__Uno_UX_Resource__Contains, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::Resource__typeof()),
        ::uNewFunction("get_Count", List__Uno_UX_Resource__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", List__Uno_UX_Resource__get_Item, 0, false, ::app::Uno::UX::Resource__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("GetEnumerator", List__Uno_UX_Resource__GetEnumerator, 0, false, ::app::Uno::Collections::List1_Enumerator__Uno_UX_Resource__typeof()),
        ::uNewFunction("IndexOf", List__Uno_UX_Resource__IndexOf, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::Resource__typeof()),
        ::uNewFunctionVoid("Insert", List__Uno_UX_Resource__Insert, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::Resource__typeof()),
        ::uNewFunction(".ctor", List__Uno_UX_Resource__New_1, 0, true, List__Uno_UX_Resource__typeof()),
        ::uNewFunction(".ctor", List__Uno_UX_Resource__New_2, 0, true, List__Uno_UX_Resource__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("Remove", List__Uno_UX_Resource__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::Resource__typeof()),
        ::uNewFunctionVoid("RemoveAt", List__Uno_UX_Resource__RemoveAt, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", List__Uno_UX_Resource__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::UX::Resource__typeof()),
        ::uNewFunctionVoid("Sort", List__Uno_UX_Resource__Sort, 0, false, ::app::Uno::Comparison__Uno_UX_Resource__typeof()),
        ::uNewFunction("ToArray", List__Uno_UX_Resource__ToArray, 0, false, ::uGetArrayType(::app::Uno::UX::Resource__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* List__Uno_UX_Resource__GetEnumerator_boxed(List__Uno_UX_Resource* __this)
{
    return ::uBox(::app::Uno::Collections::List1_Enumerator__Uno_UX_Resource__typeof(), __this->GetEnumerator());
}

void List__Uno_UX_Resource___ObjInit(List__Uno_UX_Resource* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
}

void List__Uno_UX_Resource___ObjInit_1(List__Uno_UX_Resource* __this, int capacity)
{
    __this->_data = ::uNewArray(::app::Uno::UX::Resource__typeof(), capacity);
    __this->_used = 0;
}

void List__Uno_UX_Resource__Add(List__Uno_UX_Resource* __this, ::app::Uno::UX::Resource* item)
{
    __this->EnsureCapacity();
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::Resource*>(__this->_used++) = item;
    __this->_version++;
}

void List__Uno_UX_Resource__AddRange(List__Uno_UX_Resource* __this, ::uObject* items)
{
    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_UX_Resource::GetEnumerator(::uPtr< ::uObject*>(items)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::UX::Resource* i = ::app::Uno::Collections::IEnumerator__Uno_UX_Resource::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(i);
    }
}

void List__Uno_UX_Resource__BoundsCheck(List__Uno_UX_Resource* __this, int index)
{
    if ((index < 0) || (index >= __this->Count()))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }
}

void List__Uno_UX_Resource__Clear(List__Uno_UX_Resource* __this)
{
    __this->_data = NULL;
    __this->_used = 0;
    __this->_version++;
}

bool List__Uno_UX_Resource__Contains(List__Uno_UX_Resource* __this, ::app::Uno::UX::Resource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_Resource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::Resource*>(i), item))
        {
            return true;
        }
    }

    return false;
}

void List__Uno_UX_Resource__EnsureCapacity(List__Uno_UX_Resource* __this)
{
    if (__this->_data == NULL)
    {
        __this->_data = ::uNewArray(::app::Uno::UX::Resource__typeof(), 2);
    }
    else if ((__this->_used + 1) == ::uPtr< ::uArray*>(__this->_data)->Length())
    {
        ::uArray* newData = ::uNewArray(::app::Uno::UX::Resource__typeof(), ::uPtr< ::uArray*>(__this->_data)->Length() * 2);

        for (int i = 0; i < __this->_used; i++)
        {
            newData->ItemStrong< ::app::Uno::UX::Resource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::Resource*>(i);
        }

        __this->_data = newData;
    }
}

int List__Uno_UX_Resource__get_Count(List__Uno_UX_Resource* __this)
{
    return __this->_used;
}

::app::Uno::UX::Resource* List__Uno_UX_Resource__get_Item(List__Uno_UX_Resource* __this, int index)
{
    __this->BoundsCheck(index);
    return ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::Resource*>(index);
}

::app::Uno::Collections::List1_Enumerator__Uno_UX_Resource List__Uno_UX_Resource__GetEnumerator(List__Uno_UX_Resource* __this)
{
    return ::app::Uno::Collections::List1_Enumerator__Uno_UX_Resource__New_1(NULL, __this);
}

int List__Uno_UX_Resource__IndexOf(List__Uno_UX_Resource* __this, ::app::Uno::UX::Resource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_Resource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::Resource*>(i), item))
        {
            return i;
        }
    }

    return -1;
}

void List__Uno_UX_Resource__Insert(List__Uno_UX_Resource* __this, int index, ::app::Uno::UX::Resource* item)
{
    if ((index < 0) || (index > __this->_used))
    {
        U_THROW(::app::Uno::IndexOutOfRangeException__New_3(NULL));
    }

    __this->EnsureCapacity();

    for (int i = __this->_used; i >= index; i--)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::Resource*>(i + 1) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::Resource*>(i);
    }

    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::Resource*>(index) = item;
    __this->_version++;
    __this->_used++;
}

List__Uno_UX_Resource* List__Uno_UX_Resource__New_1(::uStatic* __this)
{
    List__Uno_UX_Resource* inst = (List__Uno_UX_Resource*)::uAllocObject(sizeof(List__Uno_UX_Resource), List__Uno_UX_Resource__typeof());
    inst->_ObjInit();
    return inst;
}

List__Uno_UX_Resource* List__Uno_UX_Resource__New_2(::uStatic* __this, int capacity)
{
    List__Uno_UX_Resource* inst = (List__Uno_UX_Resource*)::uAllocObject(sizeof(List__Uno_UX_Resource), List__Uno_UX_Resource__typeof());
    inst->_ObjInit_1(capacity);
    return inst;
}

bool List__Uno_UX_Resource__Remove(List__Uno_UX_Resource* __this, ::app::Uno::UX::Resource* item)
{
    for (int i = 0; i < __this->_used; i++)
    {
        if (::app::Uno::Generic__Equals__Uno_UX_Resource(NULL, ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::Resource*>(i), item))
        {
            __this->RemoveAt(i);
            return true;
        }
    }

    return false;
}

void List__Uno_UX_Resource__RemoveAt(List__Uno_UX_Resource* __this, int index)
{
    __this->BoundsCheck(index);

    for (int i = index; i < (__this->_used - 1); i++)
    {
        ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::Resource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::Resource*>(i + 1);
    }

    __this->_used = __this->_used - 1;
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::Resource*>(__this->_used) = NULL;
    __this->_version++;
}

void List__Uno_UX_Resource__set_Item(List__Uno_UX_Resource* __this, int index, ::app::Uno::UX::Resource* value)
{
    __this->BoundsCheck(index);
    ::uPtr< ::uArray*>(__this->_data)->ItemStrong< ::app::Uno::UX::Resource*>(index) = value;
    __this->_version++;
}

void List__Uno_UX_Resource__Sort(List__Uno_UX_Resource* __this, ::uDelegate* comparer)
{
    ::app::Uno::Array__Sort__Uno_UX_Resource(NULL, __this->_data, 0, __this->_used, comparer);
    __this->_version++;
}

::uArray* List__Uno_UX_Resource__ToArray(List__Uno_UX_Resource* __this)
{
    ::uArray* t = ::uNewArray(::app::Uno::UX::Resource__typeof(), __this->_used);

    for (int i = 0; i < __this->_used; i++)
    {
        t->ItemStrong< ::app::Uno::UX::Resource*>(i) = ::uPtr< ::uArray*>(__this->_data)->Item< ::app::Uno::UX::Resource*>(i);
    }

    return t;
}

}}}
