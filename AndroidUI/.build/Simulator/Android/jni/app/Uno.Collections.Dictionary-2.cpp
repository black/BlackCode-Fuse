#include <app/-.HashableWeakReference.h>
#include <app/Android.android.graphics.Bitmap.h>
#include <app/Android.android.graphics.Typeface.h>
#include <app/Android.android.view.View.h>
#include <app/Experimental.Cache.DiskCacheEntry.h>
#include <app/Experimental.Cache.RecordHeader.h>
#include <app/Fuse.Controls.Internal.DefaultTextRenderer.h>
#include <app/Fuse.Controls.Internal.DefaultTextRenderer_FontKey.h>
#include <app/Fuse.Drawing.Batching.MeshBatcher.h>
#include <app/Fuse.Drawing.PolygonFiller.h>
#include <app/Fuse.Drawing.Stroke.h>
#include <app/Fuse.Entities.Material.h>
#include <app/Fuse.Entities.Mesh.h>
#include <app/Fuse.Font.h>
#include <app/Fuse.Gestures.Internal.EdgeSwiper.h>
#include <app/Fuse.IFlush.h>
#include <app/Fuse.Input.Capturer.h>
#include <app/Fuse.Input.Pointer_PointerRecord.h>
#include <app/Fuse.Navigation.NavigationEdge.h>
#include <app/Fuse.Node.h>
#include <app/Fuse.Scripting.Callback.h>
#include <app/Fuse.Shapes.GeometryCacheEntry.h>
#include <app/Outracks.Simulator.Bytecode.TypeName.h>
#include <app/Outracks.Simulator.Bytecode.Variable.h>
#include <app/Outracks.Simulator.ByteFileSource.h>
#include <app/Uno.Bool.h>
#include <app/Uno.Char.h>
#include <app/Uno.Collections.Dictionary__Android_android_view_View__Fuse_Node.h>
#include <app/Uno.Collections.Dictionary__char__float.h>
#include <app/Uno.Collections.Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo.h>
#include <app/Uno.Collections.Dictionary__char__Uno_Content_Fonts_RenderedGlyph.h>
#include <app/Uno.Collections.Dictionary__Experimental_Cache_DiskCacheEntry__-87a4d55f.h>
#include <app/Uno.Collections.Dictionary__framebuffer__bool.h>
#include <app/Uno.Collections.Dictionary__framebuffer__int.h>
#include <app/Uno.Collections.Dictionary__Fuse_Controls_Internal_DefaultTextR-9aaaac6.h>
#include <app/Uno.Collections.Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_P-6de5e25e.h>
#include <app/Uno.Collections.Dictionary__Fuse_Entities_Material__Uno_Collect-63ed3ce3.h>
#include <app/Uno.Collections.Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Ba-2233579d.h>
#include <app/Uno.Collections.Dictionary__Fuse_Entities_Mesh__Uno_Collections-6685c86a.h>
#include <app/Uno.Collections.Dictionary__Fuse_Font__Fuse_Controls_Internal_D-402f9c04.h>
#include <app/Uno.Collections.Dictionary__Fuse_IFlush__bool.h>
#include <app/Uno.Collections.Dictionary__Fuse_Navigation_NavigationEdge__Fus-e579cb65.h>
#include <app/Uno.Collections.Dictionary__Fuse_Node__bool.h>
#include <app/Uno.Collections.Dictionary__HashableWeakReference__Outracks_Sim-1c81327d.h>
#include <app/Uno.Collections.Dictionary__HashableWeakReference__string.h>
#include <app/Uno.Collections.Dictionary__int__bool.h>
#include <app/Uno.Collections.Dictionary__int__Fuse_Input_Capturer.h>
#include <app/Uno.Collections.Dictionary__int__Fuse_Input_Pointer_PointerRecord.h>
#include <app/Uno.Collections.Dictionary__int__Fuse_Scripting_Callback.h>
#include <app/Uno.Collections.Dictionary__int__int.h>
#include <app/Uno.Collections.Dictionary__int__string.h>
#include <app/Uno.Collections.Dictionary__int__Uno_Collections_IList_Fuse_Inp-fadbd451.h>
#include <app/Uno.Collections.Dictionary__int__Uno_Collections_List_Fuse_Inpu-4188694c.h>
#include <app/Uno.Collections.Dictionary__object__object.h>
#include <app/Uno.Collections.Dictionary__object__string.h>
#include <app/Uno.Collections.Dictionary__Outracks_Simulator_Bytecode_TypeNam-95c49e9b.h>
#include <app/Uno.Collections.Dictionary__Outracks_Simulator_Bytecode_TypeNam-d07ac730.h>
#include <app/Uno.Collections.Dictionary__Outracks_Simulator_Bytecode_Variable__object.h>
#include <app/Uno.Collections.Dictionary__string__Android_android_graphics_Bitmap.h>
#include <app/Uno.Collections.Dictionary__string__Android_android_graphics_Typeface.h>
#include <app/Uno.Collections.Dictionary__string__bool.h>
#include <app/Uno.Collections.Dictionary__string__Experimental_Cache_DiskCacheEntry.h>
#include <app/Uno.Collections.Dictionary__string__Fuse_Shapes_GeometryCacheEntry.h>
#include <app/Uno.Collections.Dictionary__string__int.h>
#include <app/Uno.Collections.Dictionary__string__object.h>
#include <app/Uno.Collections.Dictionary__string__Outracks_Simulator_ByteFileSource.h>
#include <app/Uno.Collections.Dictionary__string__string.h>
#include <app/Uno.Collections.Dictionary__string__Uno_Collections_List_Fuse_S-81745686.h>
#include <app/Uno.Collections.Dictionary__string__Uno_Collections_List_object_.h>
#include <app/Uno.Collections.Dictionary__string__Uno_Collections_List_Uno_Action_.h>
#include <app/Uno.Collections.Dictionary__string__Uno_Content_Models_ModelParameter.h>
#include <app/Uno.Collections.Dictionary__string__Uno_Content_Models_VertexAt-1b8a56c1.h>
#include <app/Uno.Collections.Dictionary__string__Uno_Data_Json_Value.h>
#include <app/Uno.Collections.Dictionary__string__Uno_Data_Xml_XmlEncoding.h>
#include <app/Uno.Collections.Dictionary__string__Uno_Runtime_Implementation_-2891cd12.h>
#include <app/Uno.Collections.Dictionary__string__Uno_WeakReference_Fuse_Reso-7f4f8b85.h>
#include <app/Uno.Collections.Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float.h>
#include <app/Uno.Collections.Dictionary__Uno_Type__object.h>
#include <app/Uno.Collections.Dictionary__Uno_Type__Uno_Reflection_CppField__.h>
#include <app/Uno.Collections.Dictionary__Uno_Type__Uno_Reflection_CppFunction__.h>
#include <app/Uno.Collections.Dictionary__Uno_UX_FileSource__Uno_Content_Font-acd5257b.h>
#include <app/Uno.Collections.Dictionary__Uno_UX_FileSource__Uno_WeakReferenc-1152b5e6.h>
#include <app/Uno.Collections.Dictionary2_BucketState.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Android_android_view-844011de.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__char__float.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__char__Uno_Content_Fo-751a15e6.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__char__Uno_Content_Fo-ae4173ed.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Experimental_Cache_D-6bd83435.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__framebuffer__bool.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__framebuffer__int.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Fuse_Controls_Intern-f87d46d3.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Fuse_Drawing_Stroke_-e4f3b1c6.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Fuse_Entities_Materi-c09c04e7.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Fuse_Entities_Mesh__-47ca50aa.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Fuse_Entities_Mesh__-fbd1c550.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Fuse_Font__Fuse_Cont-f4c20464.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Fuse_IFlush__bool.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Fuse_Navigation_Navi-aea0d94b.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Fuse_Node__bool.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__HashableWeakReferenc-441bcd36.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__HashableWeakReference__string.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__int__bool.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__int__Fuse_Input_Capturer.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__int__Fuse_Input_Poin-53de6039.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__int__Fuse_Scripting_Callback.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__int__int.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__int__string.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__int__Uno_Collections-9926d782.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__int__Uno_Collections-e2e724c3.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__object__object.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__object__string.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Outracks_Simulator_B-721f2a5a.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Outracks_Simulator_B-9a2e20a8.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Outracks_Simulator_B-9dc8cc0e.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Android_andr-57a869d.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Android_andr-8cea678b.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__bool.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Experimental-ff547e4.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Fuse_Shapes_-dfda45d3.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__int.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__object.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Outracks_Sim-3b7e520a.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__string.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Uno_Collecti-30f939e7.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Uno_Collecti-ca922854.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Uno_Collecti-ed281d3f.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Uno_Content_-d0f4f2c6.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Uno_Content_-f1d8b777.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Uno_Data_Json_Value.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Uno_Data_Xml-6678aa7e.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Uno_Runtime_-9a6bdb4c.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__string__Uno_WeakRefe-3df27994.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Uno_Content_Fonts_Bi-47f4ea43.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Uno_Type__object.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Uno_Type__Uno_Reflec-b11f02d7.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Uno_Type__Uno_Reflec-b9af5985.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Uno_UX_FileSource__U-c07849cc.h>
#include <app/Uno.Collections.Dictionary2_KeyCollection__Uno_UX_FileSource__U-ef090423.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Android_android_vi-dc48aabc.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__char__float.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__char__Uno_Content_-31e5337a.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__char__Uno_Content_-67b5ea03.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Experimental_Cache-c996781d.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__framebuffer__bool.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__framebuffer__int.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Fuse_Controls_Inte-2ebb5bed.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Fuse_Drawing_Strok-d86a258a.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Fuse_Entities_Mate-a19a0ab5.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Fuse_Entities_Mesh-22e7a0ce.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Fuse_Entities_Mesh-62669c51.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Fuse_Font__Fuse_Co-35f8859c.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Fuse_IFlush__bool.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Fuse_Navigation_Na-14a77dce.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Fuse_Node__bool.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__HashableWeakRefere-8d0151c1.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__HashableWeakRefere-99a0927c.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__int__bool.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__int__Fuse_Input_Capturer.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__int__Fuse_Input_Po-be17296f.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__int__Fuse_Scriptin-a08b3ed.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__int__int.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__int__string.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__int__Uno_Collectio-49cb5349.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__int__Uno_Collectio-b5d9c91c.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__object__object.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__object__string.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Outracks_Simulator-4390f9bd.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Outracks_Simulator-51b3ff98.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Outracks_Simulator-d5eddb2d.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Android_an-63804229.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Android_an-79a9f5ed.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__bool.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Experiment-20952a3.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Fuse_Shape-60319715.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__int.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__object.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Outracks_S-865c6ca5.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__string.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Uno_Collec-402bacc3.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Uno_Collec-99184dfe.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Uno_Collec-cba2947c.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Uno_Conten-888e8122.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Uno_Conten-ad531ebb.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Uno_Data_Json_Value.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Uno_Data_X-e594d0f7.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Uno_Runtim-d556594.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__string__Uno_WeakRe-590d8a81.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Uno_Content_Fonts_-c97d0e60.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Uno_Type__object.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Uno_Type__Uno_Refl-2e7cbddb.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Uno_Type__Uno_Refl-3aa64054.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Uno_UX_FileSource_-7649f81.h>
#include <app/Uno.Collections.Dictionary2_ValueCollection__Uno_UX_FileSource_-a44f53a.h>
#include <app/Uno.Collections.IEnumerator.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Andro-4cc6590c.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_char_-71761d10.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_char_-ec294ac4.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_char_float_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Exper-c5c7367.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_frame-8bc68d90.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_frame-d0a7a45b.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Fuse_-15576255.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Fuse_-2ed3ca1c.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Fuse_-341d12e2.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Fuse_-38717bf0.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Fuse_-438a4894.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Fuse_-4ccadabf.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Fuse_-b295d630.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Fuse_-d17eb516.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Fuse_-ffee88e1.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Hasha-429a6cf.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Hasha-f4e3b97a.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_int_bool_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_int_F-1264c9c5.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_int_F-781fa870.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_int_F-c697c727.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_int_int_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_int_string_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_int_U-47ec93a2.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_int_U-9be16414.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_object_object_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_object_string_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Outra-98dfff41.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Outra-aa62f92f.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Outra-bb82fad0.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-1ae5a232.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-2373d96e.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-4307c61f.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-47e5efc1.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-5b0e278e.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-781fb800.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-a0b7d834.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-ad6e3336.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-b720c384.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-c4af8f4.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-d59f9fc.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-d9f4a565.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-e39dfac.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_strin-f548fa01.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_string_bool_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_string_int_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_string_object_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_string_string_.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Uno_C-f02f9125.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Uno_T-2408237e.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Uno_T-4445abfd.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Uno_T-ca462506.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Uno_U-38b04b60.h>
#include <app/Uno.Collections.IEnumerator__Uno_Collections_KeyValuePair_Uno_U-bf697a87.h>
#include <app/Uno.Collections.IList__Fuse_Input_Capturer.h>
#include <app/Uno.Collections.List__Fuse_Entities_Entry.h>
#include <app/Uno.Collections.List__Fuse_Input_Pointer_PELHolder.h>
#include <app/Uno.Collections.List__Fuse_Scripting_INameListener.h>
#include <app/Uno.Collections.List__object.h>
#include <app/Uno.Collections.List__Uno_Action.h>
#include <app/Uno.Content.Fonts.BitmapFont.h>
#include <app/Uno.Content.Fonts.FontFace.h>
#include <app/Uno.Content.Models.ModelParameter.h>
#include <app/Uno.Content.Models.VertexAttributeArray.h>
#include <app/Uno.Data.Json.Value.h>
#include <app/Uno.Data.Xml.XmlEncoding.h>
#include <app/Uno.Exception.h>
#include <app/Uno.Float.h>
#include <app/Uno.Generic.h>
#include <app/Uno.Graphics.Framebuffer.h>
#include <app/Uno.Int.h>
#include <app/Uno.InvalidOperationException.h>
#include <app/Uno.Math.h>
#include <app/Uno.Reflection.CppField.h>
#include <app/Uno.Reflection.CppFunction.h>
#include <app/Uno.Runtime.Implementation.ShaderBackends.OpenGL.GLCompiledProgram.h>
#include <app/Uno.String.h>
#include <app/Uno.Type.h>
#include <app/Uno.UX.FileSource.h>
#include <app/Uno.WeakReference__Fuse_Resources_FileImageSourceImpl.h>
#include <app/Uno.WeakReference__Fuse_Resources_HttpImageSourceImpl.h>

namespace app {
namespace Uno {
namespace Collections {

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Android_android_view_View__Fuse_Node__uType* Dictionary__Android_android_view_View__Fuse_Node__typeof()
{
    static ::uStaticStrong<Dictionary__Android_android_view_View__Fuse_Node__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Android_android_view_View__Fuse_Node__uType*)::uAllocClassType(sizeof(Dictionary__Android_android_view_View__Fuse_Node__uType), "Uno.Collections.Dictionary<Android.android.view.View,Fuse.Node>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Android_android_view_View__Fuse_Node__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Android_android_view_View__Fuse_Node__typeof(), offsetof(Dictionary__Android_android_view_View__Fuse_Node__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Android_android_view_View_Fuse_Node___typeof(), offsetof(Dictionary__Android_android_view_View__Fuse_Node__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Android_android_view_View__Fuse_Node, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Android_android_view_View__Fuse_Node, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Android_android_view_View__Fuse_Node, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Android_android_view_View__Fuse_Node, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Android_android_view_View__Fuse_Node, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Android_android_view_View__Fuse_Node__Add, 0, false, ::app::Android::android::view::View__typeof(), ::app::Fuse::Node__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Android_android_view_View__Fuse_Node__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Android_android_view_View__Fuse_Node__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Android::android::view::View__typeof()),
        ::uNewFunction("get_Count", Dictionary__Android_android_view_View__Fuse_Node__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Android_android_view_View__Fuse_Node__get_Item, 0, false, ::app::Fuse::Node__typeof(), ::app::Android::android::view::View__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Android_android_view_View__Fuse_Node__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Android_android_view_View__Fuse_Node__typeof()),
        ::uNewFunction("get_Values", Dictionary__Android_android_view_View__Fuse_Node__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Android_android_view_View__Fuse_Node__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Android_android_view_View__Fuse_Node__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Android_android_view_View__Fuse_Node__typeof()),
        ::uNewFunction(".ctor", Dictionary__Android_android_view_View__Fuse_Node__New_1, 0, true, Dictionary__Android_android_view_View__Fuse_Node__typeof()),
        ::uNewFunction(".ctor", Dictionary__Android_android_view_View__Fuse_Node__New_2, 0, true, Dictionary__Android_android_view_View__Fuse_Node__typeof(), ::app::Uno::Collections::IDictionary__Android_android_view_View__Fuse_Node__typeof()),
        ::uNewFunction("Remove", Dictionary__Android_android_view_View__Fuse_Node__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Android::android::view::View__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Android_android_view_View__Fuse_Node__set_Item, 0, false, ::app::Android::android::view::View__typeof(), ::app::Fuse::Node__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Android_android_view_View__Fuse_Node__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Android::android::view::View__typeof(), ::app::Fuse::Node__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Android_android_view_View__Fuse_Node__GetEnumerator_boxed(Dictionary__Android_android_view_View__Fuse_Node* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Android_android_view_View__Fuse_Node__typeof(), __this->GetEnumerator());
}

void Dictionary__Android_android_view_View__Fuse_Node___ObjInit(Dictionary__Android_android_view_View__Fuse_Node* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Android_android_view_View__Fuse_Node___ObjInit_1(Dictionary__Android_android_view_View__Fuse_Node* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Android_android_view_View_Fuse_Node_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Android_android_view_View__Fuse_Node keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Android_android_view_View_Fuse_Node_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Android_android_view_View__Fuse_Node__Add(Dictionary__Android_android_view_View__Fuse_Node* __this, ::app::Android::android::view::View* key, ::app::Fuse::Node* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Android::android::view::View*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Android_android_view_View(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Android_android_view_View__Fuse_Node__Clear(Dictionary__Android_android_view_View__Fuse_Node* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Android_android_view_View__Fuse_Node__ContainsKey(Dictionary__Android_android_view_View__Fuse_Node* __this, ::app::Android::android::view::View* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Android::android::view::View*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Android_android_view_View(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Android_android_view_View__Fuse_Node__get_Count(Dictionary__Android_android_view_View__Fuse_Node* __this)
{
    return __this->_count;
}

::app::Fuse::Node* Dictionary__Android_android_view_View__Fuse_Node__get_Item(Dictionary__Android_android_view_View__Fuse_Node* __this, ::app::Android::android::view::View* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Android::android::view::View*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Android_android_view_View(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Android_android_view_View__Fuse_Node* Dictionary__Android_android_view_View__Fuse_Node__get_Keys(Dictionary__Android_android_view_View__Fuse_Node* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Android_android_view_View__Fuse_Node__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Android_android_view_View__Fuse_Node* Dictionary__Android_android_view_View__Fuse_Node__get_Values(Dictionary__Android_android_view_View__Fuse_Node* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Android_android_view_View__Fuse_Node__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Android_android_view_View__Fuse_Node Dictionary__Android_android_view_View__Fuse_Node__GetEnumerator(Dictionary__Android_android_view_View__Fuse_Node* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Android_android_view_View__Fuse_Node__New_1(NULL, __this);
}

Dictionary__Android_android_view_View__Fuse_Node* Dictionary__Android_android_view_View__Fuse_Node__New_1(::uStatic* __this)
{
    Dictionary__Android_android_view_View__Fuse_Node* inst = (Dictionary__Android_android_view_View__Fuse_Node*)::uAllocObject(sizeof(Dictionary__Android_android_view_View__Fuse_Node), Dictionary__Android_android_view_View__Fuse_Node__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Android_android_view_View__Fuse_Node* Dictionary__Android_android_view_View__Fuse_Node__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Android_android_view_View__Fuse_Node* inst = (Dictionary__Android_android_view_View__Fuse_Node*)::uAllocObject(sizeof(Dictionary__Android_android_view_View__Fuse_Node), Dictionary__Android_android_view_View__Fuse_Node__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Android_android_view_View__Fuse_Node__Rehash(Dictionary__Android_android_view_View__Fuse_Node* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(i).Value);
        }
    }
}

bool Dictionary__Android_android_view_View__Fuse_Node__Remove(Dictionary__Android_android_view_View__Fuse_Node* __this, ::app::Android::android::view::View* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Android::android::view::View*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Android_android_view_View(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Android_android_view_View__Fuse_Node__set_Item(Dictionary__Android_android_view_View__Fuse_Node* __this, ::app::Android::android::view::View* key, ::app::Fuse::Node* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Android::android::view::View*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Android_android_view_View(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Android_android_view_View__Fuse_Node__TryGetValue(Dictionary__Android_android_view_View__Fuse_Node* __this, ::app::Android::android::view::View* key, ::app::Fuse::Node** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Android::android::view::View*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Android_android_view_View(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Android_android_view_View__Fuse_Node>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Android_android_view_View__Fuse_Node__Uno_Collections_ICollection_Add(Dictionary__Android_android_view_View__Fuse_Node* __this, ::app::Uno::Collections::KeyValuePair__Android_android_view_View__Fuse_Node item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Android_android_view_View__Fuse_Node__Uno_Collections_ICollection_Contains(Dictionary__Android_android_view_View__Fuse_Node* __this, ::app::Uno::Collections::KeyValuePair__Android_android_view_View__Fuse_Node item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Android_android_view_View__Fuse_Node__Uno_Collections_ICollection_Remove(Dictionary__Android_android_view_View__Fuse_Node* __this, ::app::Uno::Collections::KeyValuePair__Android_android_view_View__Fuse_Node item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__char__float__uType* Dictionary__char__float__typeof()
{
    static ::uStaticStrong<Dictionary__char__float__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__char__float__uType*)::uAllocClassType(sizeof(Dictionary__char__float__uType), "Uno.Collections.Dictionary<char,float>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__char__float__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__char__float__typeof(), offsetof(Dictionary__char__float__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_char_float___typeof(), offsetof(Dictionary__char__float__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__char__float, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__char__float, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__char__float__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__char__float, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__char__float, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__char__float, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__char__float__Add, 0, false, ::app::Uno::Char__typeof(), ::app::Uno::Float__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__char__float__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__char__float__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunction("get_Count", Dictionary__char__float__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__char__float__get_Item, 0, false, ::app::Uno::Float__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunction("get_Keys", Dictionary__char__float__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__char__float__typeof()),
        ::uNewFunction("get_Values", Dictionary__char__float__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__char__float__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__char__float__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__char__float__typeof()),
        ::uNewFunction(".ctor", Dictionary__char__float__New_1, 0, true, Dictionary__char__float__typeof()),
        ::uNewFunction(".ctor", Dictionary__char__float__New_2, 0, true, Dictionary__char__float__typeof(), ::app::Uno::Collections::IDictionary__char__float__typeof()),
        ::uNewFunction("Remove", Dictionary__char__float__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__char__float__set_Item, 0, false, ::app::Uno::Char__typeof(), ::app::Uno::Float__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__char__float__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof(), ::app::Uno::Float__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__char__float__GetEnumerator_boxed(Dictionary__char__float* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__char__float__typeof(), __this->GetEnumerator());
}

void Dictionary__char__float___ObjInit(Dictionary__char__float* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__char__float__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__char__float___ObjInit_1(Dictionary__char__float* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_char_float_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__char__float keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_char_float_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__char__float__Add(Dictionary__char__float* __this, ::uChar key, float value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__char__float__Clear(Dictionary__char__float* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__char__float__ContainsKey(Dictionary__char__float* __this, ::uChar key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__char__float__get_Count(Dictionary__char__float* __this)
{
    return __this->_count;
}

float Dictionary__char__float__get_Item(Dictionary__char__float* __this, ::uChar key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__char__float* Dictionary__char__float__get_Keys(Dictionary__char__float* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__char__float__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__char__float* Dictionary__char__float__get_Values(Dictionary__char__float* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__char__float__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__char__float Dictionary__char__float__GetEnumerator(Dictionary__char__float* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__char__float__New_1(NULL, __this);
}

Dictionary__char__float* Dictionary__char__float__New_1(::uStatic* __this)
{
    Dictionary__char__float* inst = (Dictionary__char__float*)::uAllocObject(sizeof(Dictionary__char__float), Dictionary__char__float__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__char__float* Dictionary__char__float__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__char__float* inst = (Dictionary__char__float*)::uAllocObject(sizeof(Dictionary__char__float), Dictionary__char__float__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__char__float__Rehash(Dictionary__char__float* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__char__float__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(i).Value);
        }
    }
}

bool Dictionary__char__float__Remove(Dictionary__char__float* __this, ::uChar key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__char__float__set_Item(Dictionary__char__float* __this, ::uChar key, float value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__char__float__TryGetValue(Dictionary__char__float* __this, ::uChar key, float* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__float>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__char__float__Uno_Collections_ICollection_Add(Dictionary__char__float* __this, ::app::Uno::Collections::KeyValuePair__char__float item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__char__float__Uno_Collections_ICollection_Contains(Dictionary__char__float* __this, ::app::Uno::Collections::KeyValuePair__char__float item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__char__float__Uno_Collections_ICollection_Remove(Dictionary__char__float* __this, ::app::Uno::Collections::KeyValuePair__char__float item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__uType* Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof()
{
    static ::uStaticStrong<Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__uType*)::uAllocClassType(sizeof(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__uType), "Uno.Collections.Dictionary<char,Uno.Content.Fonts.BitmapFont_GlyphInfo>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof(), offsetof(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_char_Uno_Content_Fonts_BitmapFont_GlyphInfo___typeof(), offsetof(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__Add, 0, false, ::app::Uno::Char__typeof(), ::app::Uno::Content::Fonts::BitmapFont_GlyphInfo__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunction("get_Count", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__get_Item, 0, false, ::app::Uno::Content::Fonts::BitmapFont_GlyphInfo__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunction("get_Keys", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof()),
        ::uNewFunction("get_Values", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof()),
        ::uNewFunction(".ctor", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__New_1, 0, true, Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof()),
        ::uNewFunction(".ctor", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__New_2, 0, true, Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof(), ::app::Uno::Collections::IDictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof()),
        ::uNewFunction("Remove", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__set_Item, 0, false, ::app::Uno::Char__typeof(), ::app::Uno::Content::Fonts::BitmapFont_GlyphInfo__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof(), ::app::Uno::Content::Fonts::BitmapFont_GlyphInfo__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__GetEnumerator_boxed(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof(), __this->GetEnumerator());
}

void Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo___ObjInit(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo___ObjInit_1(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_char_Uno_Content_Fonts_BitmapFont_GlyphInfo_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__char__Uno_Content_Fonts_BitmapFont_GlyphInfo keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_char_Uno_Content_Fonts_BitmapFont_GlyphInfo_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__Add(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this, ::uChar key, ::app::Uno::Content::Fonts::BitmapFont_GlyphInfo value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__Clear(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(i).Value = ::uDefault< ::app::Uno::Content::Fonts::BitmapFont_GlyphInfo>();
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__ContainsKey(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this, ::uChar key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__get_Count(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this)
{
    return __this->_count;
}

::app::Uno::Content::Fonts::BitmapFont_GlyphInfo Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__get_Item(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this, ::uChar key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__get_Keys(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__get_Values(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__char__Uno_Content_Fonts_BitmapFont_GlyphInfo Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__GetEnumerator(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__New_1(NULL, __this);
}

Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__New_1(::uStatic* __this)
{
    Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* inst = (Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo*)::uAllocObject(sizeof(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo), Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* inst = (Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo*)::uAllocObject(sizeof(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo), Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__Rehash(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(i).Value);
        }
    }
}

bool Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__Remove(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this, ::uChar key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Value = ::uDefault< ::app::Uno::Content::Fonts::BitmapFont_GlyphInfo>();
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__set_Item(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this, ::uChar key, ::app::Uno::Content::Fonts::BitmapFont_GlyphInfo value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__TryGetValue(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this, ::uChar key, ::app::Uno::Content::Fonts::BitmapFont_GlyphInfo* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_BitmapFont_GlyphInfo>(x).State == 0)
        {
            *value = ::uDefault< ::app::Uno::Content::Fonts::BitmapFont_GlyphInfo>();
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__Uno_Collections_ICollection_Add(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this, ::app::Uno::Collections::KeyValuePair__char__Uno_Content_Fonts_BitmapFont_GlyphInfo item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__Uno_Collections_ICollection_Contains(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this, ::app::Uno::Collections::KeyValuePair__char__Uno_Content_Fonts_BitmapFont_GlyphInfo item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo__Uno_Collections_ICollection_Remove(Dictionary__char__Uno_Content_Fonts_BitmapFont_GlyphInfo* __this, ::app::Uno::Collections::KeyValuePair__char__Uno_Content_Fonts_BitmapFont_GlyphInfo item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__char__Uno_Content_Fonts_RenderedGlyph__uType* Dictionary__char__Uno_Content_Fonts_RenderedGlyph__typeof()
{
    static ::uStaticStrong<Dictionary__char__Uno_Content_Fonts_RenderedGlyph__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__char__Uno_Content_Fonts_RenderedGlyph__uType*)::uAllocClassType(sizeof(Dictionary__char__Uno_Content_Fonts_RenderedGlyph__uType), "Uno.Collections.Dictionary<char,Uno.Content.Fonts.RenderedGlyph>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__char__Uno_Content_Fonts_RenderedGlyph__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__char__Uno_Content_Fonts_RenderedGlyph__typeof(), offsetof(Dictionary__char__Uno_Content_Fonts_RenderedGlyph__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_char_Uno_Content_Fonts_RenderedGlyph___typeof(), offsetof(Dictionary__char__Uno_Content_Fonts_RenderedGlyph__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__char__Uno_Content_Fonts_RenderedGlyph, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__char__Uno_Content_Fonts_RenderedGlyph, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__char__Uno_Content_Fonts_RenderedGlyph, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__char__Uno_Content_Fonts_RenderedGlyph, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__char__Uno_Content_Fonts_RenderedGlyph, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__Add, 0, false, ::app::Uno::Char__typeof(), ::app::Uno::Content::Fonts::RenderedGlyph__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunction("get_Count", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__get_Item, 0, false, ::app::Uno::Content::Fonts::RenderedGlyph__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunction("get_Keys", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__char__Uno_Content_Fonts_RenderedGlyph__typeof()),
        ::uNewFunction("get_Values", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__char__Uno_Content_Fonts_RenderedGlyph__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__char__Uno_Content_Fonts_RenderedGlyph__typeof()),
        ::uNewFunction(".ctor", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__New_1, 0, true, Dictionary__char__Uno_Content_Fonts_RenderedGlyph__typeof()),
        ::uNewFunction(".ctor", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__New_2, 0, true, Dictionary__char__Uno_Content_Fonts_RenderedGlyph__typeof(), ::app::Uno::Collections::IDictionary__char__Uno_Content_Fonts_RenderedGlyph__typeof()),
        ::uNewFunction("Remove", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__set_Item, 0, false, ::app::Uno::Char__typeof(), ::app::Uno::Content::Fonts::RenderedGlyph__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__char__Uno_Content_Fonts_RenderedGlyph__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Char__typeof(), ::app::Uno::Content::Fonts::RenderedGlyph__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__char__Uno_Content_Fonts_RenderedGlyph__GetEnumerator_boxed(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__char__Uno_Content_Fonts_RenderedGlyph__typeof(), __this->GetEnumerator());
}

void Dictionary__char__Uno_Content_Fonts_RenderedGlyph___ObjInit(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__char__Uno_Content_Fonts_RenderedGlyph___ObjInit_1(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_char_Uno_Content_Fonts_RenderedGlyph_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__char__Uno_Content_Fonts_RenderedGlyph keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_char_Uno_Content_Fonts_RenderedGlyph_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__char__Uno_Content_Fonts_RenderedGlyph__Add(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this, ::uChar key, ::app::Uno::Content::Fonts::RenderedGlyph value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__char__Uno_Content_Fonts_RenderedGlyph__Clear(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(i).Value = ::uDefault< ::app::Uno::Content::Fonts::RenderedGlyph>();
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__char__Uno_Content_Fonts_RenderedGlyph__ContainsKey(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this, ::uChar key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__char__Uno_Content_Fonts_RenderedGlyph__get_Count(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this)
{
    return __this->_count;
}

::app::Uno::Content::Fonts::RenderedGlyph Dictionary__char__Uno_Content_Fonts_RenderedGlyph__get_Item(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this, ::uChar key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__char__Uno_Content_Fonts_RenderedGlyph* Dictionary__char__Uno_Content_Fonts_RenderedGlyph__get_Keys(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__char__Uno_Content_Fonts_RenderedGlyph__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__char__Uno_Content_Fonts_RenderedGlyph* Dictionary__char__Uno_Content_Fonts_RenderedGlyph__get_Values(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__char__Uno_Content_Fonts_RenderedGlyph__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__char__Uno_Content_Fonts_RenderedGlyph Dictionary__char__Uno_Content_Fonts_RenderedGlyph__GetEnumerator(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__char__Uno_Content_Fonts_RenderedGlyph__New_1(NULL, __this);
}

Dictionary__char__Uno_Content_Fonts_RenderedGlyph* Dictionary__char__Uno_Content_Fonts_RenderedGlyph__New_1(::uStatic* __this)
{
    Dictionary__char__Uno_Content_Fonts_RenderedGlyph* inst = (Dictionary__char__Uno_Content_Fonts_RenderedGlyph*)::uAllocObject(sizeof(Dictionary__char__Uno_Content_Fonts_RenderedGlyph), Dictionary__char__Uno_Content_Fonts_RenderedGlyph__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__char__Uno_Content_Fonts_RenderedGlyph* Dictionary__char__Uno_Content_Fonts_RenderedGlyph__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__char__Uno_Content_Fonts_RenderedGlyph* inst = (Dictionary__char__Uno_Content_Fonts_RenderedGlyph*)::uAllocObject(sizeof(Dictionary__char__Uno_Content_Fonts_RenderedGlyph), Dictionary__char__Uno_Content_Fonts_RenderedGlyph__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__char__Uno_Content_Fonts_RenderedGlyph__Rehash(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(i).Value);
        }
    }
}

bool Dictionary__char__Uno_Content_Fonts_RenderedGlyph__Remove(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this, ::uChar key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Value = ::uDefault< ::app::Uno::Content::Fonts::RenderedGlyph>();
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__char__Uno_Content_Fonts_RenderedGlyph__set_Item(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this, ::uChar key, ::app::Uno::Content::Fonts::RenderedGlyph value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__char__Uno_Content_Fonts_RenderedGlyph__TryGetValue(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this, ::uChar key, ::app::Uno::Content::Fonts::RenderedGlyph* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< ::uChar>(::app::Uno::Char__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__char(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__char__Uno_Content_Fonts_RenderedGlyph>(x).State == 0)
        {
            *value = ::uDefault< ::app::Uno::Content::Fonts::RenderedGlyph>();
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__char__Uno_Content_Fonts_RenderedGlyph__Uno_Collections_ICollection_Add(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this, ::app::Uno::Collections::KeyValuePair__char__Uno_Content_Fonts_RenderedGlyph item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__char__Uno_Content_Fonts_RenderedGlyph__Uno_Collections_ICollection_Contains(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this, ::app::Uno::Collections::KeyValuePair__char__Uno_Content_Fonts_RenderedGlyph item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__char__Uno_Content_Fonts_RenderedGlyph__Uno_Collections_ICollection_Remove(Dictionary__char__Uno_Content_Fonts_RenderedGlyph* __this, ::app::Uno::Collections::KeyValuePair__char__Uno_Content_Fonts_RenderedGlyph item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__uType* Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof()
{
    static ::uStaticStrong<Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__uType*)::uAllocClassType(sizeof(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__uType), "Uno.Collections.Dictionary<Experimental.Cache.DiskCacheEntry,Experimental.Cache.RecordHeader>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof(), offsetof(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Experimental_Cache_DiskCacheEntry_Experimental_Cache_RecordHeader___typeof(), offsetof(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__Add, 0, false, ::app::Experimental::Cache::DiskCacheEntry__typeof(), ::app::Experimental::Cache::RecordHeader__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunction("get_Count", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__get_Item, 0, false, ::app::Experimental::Cache::RecordHeader__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof()),
        ::uNewFunction("get_Values", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof()),
        ::uNewFunction(".ctor", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__New_1, 0, true, Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof()),
        ::uNewFunction(".ctor", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__New_2, 0, true, Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof(), ::app::Uno::Collections::IDictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof()),
        ::uNewFunction("Remove", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__set_Item, 0, false, ::app::Experimental::Cache::DiskCacheEntry__typeof(), ::app::Experimental::Cache::RecordHeader__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof(), ::app::Experimental::Cache::RecordHeader__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__GetEnumerator_boxed(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof(), __this->GetEnumerator());
}

void Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader___ObjInit(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader___ObjInit_1(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Experimental_Cache_DiskCacheEntry_Experimental_Cache_RecordHeader_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Experimental_Cache_DiskCacheEntry_Experimental_Cache_RecordHeader_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__Add(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this, ::app::Experimental::Cache::DiskCacheEntry* key, ::app::Experimental::Cache::RecordHeader* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Experimental::Cache::DiskCacheEntry*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Experimental_Cache_DiskCacheEntry(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__Clear(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__ContainsKey(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this, ::app::Experimental::Cache::DiskCacheEntry* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Experimental::Cache::DiskCacheEntry*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Experimental_Cache_DiskCacheEntry(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__get_Count(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this)
{
    return __this->_count;
}

::app::Experimental::Cache::RecordHeader* Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__get_Item(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this, ::app::Experimental::Cache::DiskCacheEntry* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Experimental::Cache::DiskCacheEntry*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Experimental_Cache_DiskCacheEntry(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__get_Keys(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__get_Values(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__GetEnumerator(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__New_1(NULL, __this);
}

Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__New_1(::uStatic* __this)
{
    Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* inst = (Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader*)::uAllocObject(sizeof(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader), Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* inst = (Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader*)::uAllocObject(sizeof(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader), Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__Rehash(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(i).Value);
        }
    }
}

bool Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__Remove(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this, ::app::Experimental::Cache::DiskCacheEntry* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Experimental::Cache::DiskCacheEntry*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Experimental_Cache_DiskCacheEntry(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__set_Item(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this, ::app::Experimental::Cache::DiskCacheEntry* key, ::app::Experimental::Cache::RecordHeader* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Experimental::Cache::DiskCacheEntry*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Experimental_Cache_DiskCacheEntry(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__TryGetValue(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this, ::app::Experimental::Cache::DiskCacheEntry* key, ::app::Experimental::Cache::RecordHeader** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Experimental::Cache::DiskCacheEntry*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Experimental_Cache_DiskCacheEntry(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__Uno_Collections_ICollection_Add(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this, ::app::Uno::Collections::KeyValuePair__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__Uno_Collections_ICollection_Contains(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this, ::app::Uno::Collections::KeyValuePair__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader__Uno_Collections_ICollection_Remove(Dictionary__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader* __this, ::app::Uno::Collections::KeyValuePair__Experimental_Cache_DiskCacheEntry__Experimental_Cache_RecordHeader item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__framebuffer__bool__uType* Dictionary__framebuffer__bool__typeof()
{
    static ::uStaticStrong<Dictionary__framebuffer__bool__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__framebuffer__bool__uType*)::uAllocClassType(sizeof(Dictionary__framebuffer__bool__uType), "Uno.Collections.Dictionary<framebuffer,bool>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__framebuffer__bool__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__framebuffer__bool__typeof(), offsetof(Dictionary__framebuffer__bool__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_framebuffer_bool___typeof(), offsetof(Dictionary__framebuffer__bool__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__framebuffer__bool, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__framebuffer__bool, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__framebuffer__bool, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__framebuffer__bool, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__framebuffer__bool, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__framebuffer__bool__Add, 0, false, ::app::Uno::Graphics::Framebuffer__typeof(), ::app::Uno::Bool__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__framebuffer__bool__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__framebuffer__bool__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunction("get_Count", Dictionary__framebuffer__bool__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__framebuffer__bool__get_Item, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunction("get_Keys", Dictionary__framebuffer__bool__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__framebuffer__bool__typeof()),
        ::uNewFunction("get_Values", Dictionary__framebuffer__bool__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__framebuffer__bool__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__framebuffer__bool__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__framebuffer__bool__typeof()),
        ::uNewFunction(".ctor", Dictionary__framebuffer__bool__New_1, 0, true, Dictionary__framebuffer__bool__typeof()),
        ::uNewFunction(".ctor", Dictionary__framebuffer__bool__New_2, 0, true, Dictionary__framebuffer__bool__typeof(), ::app::Uno::Collections::IDictionary__framebuffer__bool__typeof()),
        ::uNewFunction("Remove", Dictionary__framebuffer__bool__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__framebuffer__bool__set_Item, 0, false, ::app::Uno::Graphics::Framebuffer__typeof(), ::app::Uno::Bool__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__framebuffer__bool__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::Framebuffer__typeof(), ::app::Uno::Bool__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__framebuffer__bool__GetEnumerator_boxed(Dictionary__framebuffer__bool* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__framebuffer__bool__typeof(), __this->GetEnumerator());
}

void Dictionary__framebuffer__bool___ObjInit(Dictionary__framebuffer__bool* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__framebuffer__bool___ObjInit_1(Dictionary__framebuffer__bool* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_framebuffer_bool_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__framebuffer__bool keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_framebuffer_bool_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__framebuffer__bool__Add(Dictionary__framebuffer__bool* __this, ::app::Uno::Graphics::Framebuffer* key, bool value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__framebuffer__bool__Clear(Dictionary__framebuffer__bool* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__framebuffer__bool__ContainsKey(Dictionary__framebuffer__bool* __this, ::app::Uno::Graphics::Framebuffer* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__framebuffer__bool__get_Count(Dictionary__framebuffer__bool* __this)
{
    return __this->_count;
}

bool Dictionary__framebuffer__bool__get_Item(Dictionary__framebuffer__bool* __this, ::app::Uno::Graphics::Framebuffer* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__framebuffer__bool* Dictionary__framebuffer__bool__get_Keys(Dictionary__framebuffer__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__framebuffer__bool__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__framebuffer__bool* Dictionary__framebuffer__bool__get_Values(Dictionary__framebuffer__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__framebuffer__bool__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__framebuffer__bool Dictionary__framebuffer__bool__GetEnumerator(Dictionary__framebuffer__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__framebuffer__bool__New_1(NULL, __this);
}

Dictionary__framebuffer__bool* Dictionary__framebuffer__bool__New_1(::uStatic* __this)
{
    Dictionary__framebuffer__bool* inst = (Dictionary__framebuffer__bool*)::uAllocObject(sizeof(Dictionary__framebuffer__bool), Dictionary__framebuffer__bool__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__framebuffer__bool* Dictionary__framebuffer__bool__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__framebuffer__bool* inst = (Dictionary__framebuffer__bool*)::uAllocObject(sizeof(Dictionary__framebuffer__bool), Dictionary__framebuffer__bool__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__framebuffer__bool__Rehash(Dictionary__framebuffer__bool* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(i).Value);
        }
    }
}

bool Dictionary__framebuffer__bool__Remove(Dictionary__framebuffer__bool* __this, ::app::Uno::Graphics::Framebuffer* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__framebuffer__bool__set_Item(Dictionary__framebuffer__bool* __this, ::app::Uno::Graphics::Framebuffer* key, bool value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__framebuffer__bool__TryGetValue(Dictionary__framebuffer__bool* __this, ::app::Uno::Graphics::Framebuffer* key, bool* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__bool>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__framebuffer__bool__Uno_Collections_ICollection_Add(Dictionary__framebuffer__bool* __this, ::app::Uno::Collections::KeyValuePair__framebuffer__bool item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__framebuffer__bool__Uno_Collections_ICollection_Contains(Dictionary__framebuffer__bool* __this, ::app::Uno::Collections::KeyValuePair__framebuffer__bool item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__framebuffer__bool__Uno_Collections_ICollection_Remove(Dictionary__framebuffer__bool* __this, ::app::Uno::Collections::KeyValuePair__framebuffer__bool item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__framebuffer__int__uType* Dictionary__framebuffer__int__typeof()
{
    static ::uStaticStrong<Dictionary__framebuffer__int__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__framebuffer__int__uType*)::uAllocClassType(sizeof(Dictionary__framebuffer__int__uType), "Uno.Collections.Dictionary<framebuffer,int>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__framebuffer__int__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__framebuffer__int__typeof(), offsetof(Dictionary__framebuffer__int__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_framebuffer_int___typeof(), offsetof(Dictionary__framebuffer__int__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__framebuffer__int, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__framebuffer__int, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__framebuffer__int, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__framebuffer__int, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__framebuffer__int, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__framebuffer__int__Add, 0, false, ::app::Uno::Graphics::Framebuffer__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__framebuffer__int__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__framebuffer__int__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunction("get_Count", Dictionary__framebuffer__int__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__framebuffer__int__get_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunction("get_Keys", Dictionary__framebuffer__int__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__framebuffer__int__typeof()),
        ::uNewFunction("get_Values", Dictionary__framebuffer__int__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__framebuffer__int__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__framebuffer__int__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__framebuffer__int__typeof()),
        ::uNewFunction(".ctor", Dictionary__framebuffer__int__New_1, 0, true, Dictionary__framebuffer__int__typeof()),
        ::uNewFunction(".ctor", Dictionary__framebuffer__int__New_2, 0, true, Dictionary__framebuffer__int__typeof(), ::app::Uno::Collections::IDictionary__framebuffer__int__typeof()),
        ::uNewFunction("Remove", Dictionary__framebuffer__int__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::Framebuffer__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__framebuffer__int__set_Item, 0, false, ::app::Uno::Graphics::Framebuffer__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__framebuffer__int__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Graphics::Framebuffer__typeof(), ::app::Uno::Int__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__framebuffer__int__GetEnumerator_boxed(Dictionary__framebuffer__int* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__framebuffer__int__typeof(), __this->GetEnumerator());
}

void Dictionary__framebuffer__int___ObjInit(Dictionary__framebuffer__int* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__framebuffer__int___ObjInit_1(Dictionary__framebuffer__int* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_framebuffer_int_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__framebuffer__int keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_framebuffer_int_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__framebuffer__int__Add(Dictionary__framebuffer__int* __this, ::app::Uno::Graphics::Framebuffer* key, int value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__framebuffer__int__Clear(Dictionary__framebuffer__int* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__framebuffer__int__ContainsKey(Dictionary__framebuffer__int* __this, ::app::Uno::Graphics::Framebuffer* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__framebuffer__int__get_Count(Dictionary__framebuffer__int* __this)
{
    return __this->_count;
}

int Dictionary__framebuffer__int__get_Item(Dictionary__framebuffer__int* __this, ::app::Uno::Graphics::Framebuffer* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__framebuffer__int* Dictionary__framebuffer__int__get_Keys(Dictionary__framebuffer__int* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__framebuffer__int__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__framebuffer__int* Dictionary__framebuffer__int__get_Values(Dictionary__framebuffer__int* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__framebuffer__int__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__framebuffer__int Dictionary__framebuffer__int__GetEnumerator(Dictionary__framebuffer__int* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__framebuffer__int__New_1(NULL, __this);
}

Dictionary__framebuffer__int* Dictionary__framebuffer__int__New_1(::uStatic* __this)
{
    Dictionary__framebuffer__int* inst = (Dictionary__framebuffer__int*)::uAllocObject(sizeof(Dictionary__framebuffer__int), Dictionary__framebuffer__int__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__framebuffer__int* Dictionary__framebuffer__int__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__framebuffer__int* inst = (Dictionary__framebuffer__int*)::uAllocObject(sizeof(Dictionary__framebuffer__int), Dictionary__framebuffer__int__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__framebuffer__int__Rehash(Dictionary__framebuffer__int* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(i).Value);
        }
    }
}

bool Dictionary__framebuffer__int__Remove(Dictionary__framebuffer__int* __this, ::app::Uno::Graphics::Framebuffer* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__framebuffer__int__set_Item(Dictionary__framebuffer__int* __this, ::app::Uno::Graphics::Framebuffer* key, int value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__framebuffer__int__TryGetValue(Dictionary__framebuffer__int* __this, ::app::Uno::Graphics::Framebuffer* key, int* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::Graphics::Framebuffer*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__framebuffer(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__framebuffer__int>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__framebuffer__int__Uno_Collections_ICollection_Add(Dictionary__framebuffer__int* __this, ::app::Uno::Collections::KeyValuePair__framebuffer__int item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__framebuffer__int__Uno_Collections_ICollection_Contains(Dictionary__framebuffer__int* __this, ::app::Uno::Collections::KeyValuePair__framebuffer__int item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__framebuffer__int__Uno_Collections_ICollection_Remove(Dictionary__framebuffer__int* __this, ::app::Uno::Collections::KeyValuePair__framebuffer__int item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__uType* Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof()
{
    static ::uStaticStrong<Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__uType*)::uAllocClassType(sizeof(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__uType), "Uno.Collections.Dictionary<Fuse.Controls.Internal.DefaultTextRenderer_FontKey,Uno.Content.Fonts.BitmapFont>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof(), offsetof(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Controls_Internal_DefaultTextRenderer_FontKey_Uno_Content_Fonts_BitmapFont___typeof(), offsetof(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__Add, 0, false, ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey__typeof(), ::app::Uno::Content::Fonts::BitmapFont__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey__typeof()),
        ::uNewFunction("get_Count", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__get_Item, 0, false, ::app::Uno::Content::Fonts::BitmapFont__typeof(), ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof()),
        ::uNewFunction("get_Values", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__New_1, 0, true, Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__New_2, 0, true, Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof(), ::app::Uno::Collections::IDictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof()),
        ::uNewFunction("Remove", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__set_Item, 0, false, ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey__typeof(), ::app::Uno::Content::Fonts::BitmapFont__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey__typeof(), ::app::Uno::Content::Fonts::BitmapFont__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__GetEnumerator_boxed(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof(), __this->GetEnumerator());
}

void Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont___ObjInit(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont___ObjInit_1(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Controls_Internal_DefaultTextRenderer_FontKey_Uno_Content_Fonts_BitmapFont_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Fuse_Controls_Internal_DefaultTextRenderer_FontKey_Uno_Content_Fonts_BitmapFont_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__Add(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this, ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey* key, ::app::Uno::Content::Fonts::BitmapFont* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_DefaultTextRenderer_FontKey(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__Clear(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__ContainsKey(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this, ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_DefaultTextRenderer_FontKey(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__get_Count(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this)
{
    return __this->_count;
}

::app::Uno::Content::Fonts::BitmapFont* Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__get_Item(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this, ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_DefaultTextRenderer_FontKey(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__get_Keys(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__get_Values(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__GetEnumerator(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__New_1(NULL, __this);
}

Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__New_1(::uStatic* __this)
{
    Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* inst = (Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont*)::uAllocObject(sizeof(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont), Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* inst = (Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont*)::uAllocObject(sizeof(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont), Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__Rehash(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(i).Value);
        }
    }
}

bool Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__Remove(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this, ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_DefaultTextRenderer_FontKey(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__set_Item(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this, ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey* key, ::app::Uno::Content::Fonts::BitmapFont* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_DefaultTextRenderer_FontKey(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__TryGetValue(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this, ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey* key, ::app::Uno::Content::Fonts::BitmapFont** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Controls::Internal::DefaultTextRenderer_FontKey*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Controls_Internal_DefaultTextRenderer_FontKey(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__Uno_Collections_ICollection_Add(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__Uno_Collections_ICollection_Contains(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont__Uno_Collections_ICollection_Remove(Dictionary__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Controls_Internal_DefaultTextRenderer_FontKey__Uno_Content_Fonts_BitmapFont item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__uType* Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof()
{
    static ::uStaticStrong<Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__uType*)::uAllocClassType(sizeof(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__uType), "Uno.Collections.Dictionary<Fuse.Drawing.Stroke,Fuse.Drawing.PolygonFiller>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof(), offsetof(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Drawing_Stroke_Fuse_Drawing_PolygonFiller___typeof(), offsetof(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__Add, 0, false, ::app::Fuse::Drawing::Stroke__typeof(), ::app::Fuse::Drawing::PolygonFiller__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Stroke__typeof()),
        ::uNewFunction("get_Count", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__get_Item, 0, false, ::app::Fuse::Drawing::PolygonFiller__typeof(), ::app::Fuse::Drawing::Stroke__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof()),
        ::uNewFunction("get_Values", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__New_1, 0, true, Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__New_2, 0, true, Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof(), ::app::Uno::Collections::IDictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof()),
        ::uNewFunction("Remove", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Stroke__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__set_Item, 0, false, ::app::Fuse::Drawing::Stroke__typeof(), ::app::Fuse::Drawing::PolygonFiller__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Drawing::Stroke__typeof(), ::app::Fuse::Drawing::PolygonFiller__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__GetEnumerator_boxed(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof(), __this->GetEnumerator());
}

void Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller___ObjInit(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller___ObjInit_1(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Drawing_Stroke_Fuse_Drawing_PolygonFiller_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Fuse_Drawing_Stroke_Fuse_Drawing_PolygonFiller_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__Add(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this, ::app::Fuse::Drawing::Stroke* key, ::app::Fuse::Drawing::PolygonFiller* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Drawing::Stroke*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Drawing_Stroke(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__Clear(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__ContainsKey(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this, ::app::Fuse::Drawing::Stroke* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Drawing::Stroke*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Drawing_Stroke(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__get_Count(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this)
{
    return __this->_count;
}

::app::Fuse::Drawing::PolygonFiller* Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__get_Item(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this, ::app::Fuse::Drawing::Stroke* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Drawing::Stroke*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Drawing_Stroke(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__get_Keys(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__get_Values(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__GetEnumerator(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__New_1(NULL, __this);
}

Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__New_1(::uStatic* __this)
{
    Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* inst = (Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller*)::uAllocObject(sizeof(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller), Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* inst = (Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller*)::uAllocObject(sizeof(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller), Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__Rehash(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(i).Value);
        }
    }
}

bool Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__Remove(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this, ::app::Fuse::Drawing::Stroke* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Drawing::Stroke*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Drawing_Stroke(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__set_Item(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this, ::app::Fuse::Drawing::Stroke* key, ::app::Fuse::Drawing::PolygonFiller* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Drawing::Stroke*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Drawing_Stroke(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__TryGetValue(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this, ::app::Fuse::Drawing::Stroke* key, ::app::Fuse::Drawing::PolygonFiller** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Drawing::Stroke*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Drawing_Stroke(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__Uno_Collections_ICollection_Add(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__Uno_Collections_ICollection_Contains(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller__Uno_Collections_ICollection_Remove(Dictionary__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Drawing_Stroke__Fuse_Drawing_PolygonFiller item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___uType* Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof()
{
    static ::uStaticStrong<Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___uType*)::uAllocClassType(sizeof(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___uType), "Uno.Collections.Dictionary<Fuse.Entities.Material,Uno.Collections.List<Fuse.Entities.Entry>>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof(), offsetof(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Entities_Material_Uno_Collections_List_Fuse_Entities_Entry____typeof(), offsetof(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___Add, 0, false, ::app::Fuse::Entities::Material__typeof(), ::app::Uno::Collections::List__Fuse_Entities_Entry__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Material__typeof()),
        ::uNewFunction("get_Count", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___get_Item, 0, false, ::app::Uno::Collections::List__Fuse_Entities_Entry__typeof(), ::app::Fuse::Entities::Material__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof()),
        ::uNewFunction("get_Values", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___New_1, 0, true, Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___New_2, 0, true, Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof(), ::app::Uno::Collections::IDictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof()),
        ::uNewFunction("Remove", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Material__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___set_Item, 0, false, ::app::Fuse::Entities::Material__typeof(), ::app::Uno::Collections::List__Fuse_Entities_Entry__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Material__typeof(), ::app::Uno::Collections::List__Fuse_Entities_Entry__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___GetEnumerator_boxed(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof(), __this->GetEnumerator());
}

void Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry____ObjInit(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry____ObjInit_1(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Entities_Material_Uno_Collections_List_Fuse_Entities_Entry__::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Fuse_Entities_Material_Uno_Collections_List_Fuse_Entities_Entry__::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___Add(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Material* key, ::app::Uno::Collections::List__Fuse_Entities_Entry* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Material*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Material(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___Clear(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___ContainsKey(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Material* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Material*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Material(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___get_Count(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    return __this->_count;
}

::app::Uno::Collections::List__Fuse_Entities_Entry* Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___get_Item(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Material* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Material*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Material(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___get_Keys(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___get_Values(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_ Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___GetEnumerator(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___New_1(NULL, __this);
}

Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___New_1(::uStatic* __this)
{
    Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* inst = (Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_*)::uAllocObject(sizeof(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_), Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* inst = (Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_*)::uAllocObject(sizeof(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_), Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___Rehash(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(i).Value);
        }
    }
}

bool Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___Remove(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Material* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Material*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Material(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___set_Item(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Material* key, ::app::Uno::Collections::List__Fuse_Entities_Entry* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Material*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Material(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___TryGetValue(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Material* key, ::app::Uno::Collections::List__Fuse_Entities_Entry** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Material*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Material(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___Uno_Collections_ICollection_Add(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___Uno_Collections_ICollection_Contains(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry___Uno_Collections_ICollection_Remove(Dictionary__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Material__Uno_Collections_List_Fuse_Entities_Entry_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__uType* Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof()
{
    static ::uStaticStrong<Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__uType*)::uAllocClassType(sizeof(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__uType), "Uno.Collections.Dictionary<Fuse.Entities.Mesh,Fuse.Drawing.Batching.MeshBatcher>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof(), offsetof(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Entities_Mesh_Fuse_Drawing_Batching_MeshBatcher___typeof(), offsetof(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__Add, 0, false, ::app::Fuse::Entities::Mesh__typeof(), ::app::Fuse::Drawing::Batching::MeshBatcher__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Mesh__typeof()),
        ::uNewFunction("get_Count", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__get_Item, 0, false, ::app::Fuse::Drawing::Batching::MeshBatcher__typeof(), ::app::Fuse::Entities::Mesh__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof()),
        ::uNewFunction("get_Values", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__New_1, 0, true, Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__New_2, 0, true, Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof(), ::app::Uno::Collections::IDictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof()),
        ::uNewFunction("Remove", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Mesh__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__set_Item, 0, false, ::app::Fuse::Entities::Mesh__typeof(), ::app::Fuse::Drawing::Batching::MeshBatcher__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Mesh__typeof(), ::app::Fuse::Drawing::Batching::MeshBatcher__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__GetEnumerator_boxed(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof(), __this->GetEnumerator());
}

void Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher___ObjInit(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher___ObjInit_1(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Entities_Mesh_Fuse_Drawing_Batching_MeshBatcher_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Fuse_Entities_Mesh_Fuse_Drawing_Batching_MeshBatcher_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__Add(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this, ::app::Fuse::Entities::Mesh* key, ::app::Fuse::Drawing::Batching::MeshBatcher* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__Clear(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__ContainsKey(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this, ::app::Fuse::Entities::Mesh* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__get_Count(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this)
{
    return __this->_count;
}

::app::Fuse::Drawing::Batching::MeshBatcher* Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__get_Item(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this, ::app::Fuse::Entities::Mesh* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__get_Keys(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__get_Values(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__GetEnumerator(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__New_1(NULL, __this);
}

Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__New_1(::uStatic* __this)
{
    Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* inst = (Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher*)::uAllocObject(sizeof(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher), Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* inst = (Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher*)::uAllocObject(sizeof(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher), Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__Rehash(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(i).Value);
        }
    }
}

bool Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__Remove(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this, ::app::Fuse::Entities::Mesh* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__set_Item(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this, ::app::Fuse::Entities::Mesh* key, ::app::Fuse::Drawing::Batching::MeshBatcher* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__TryGetValue(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this, ::app::Fuse::Entities::Mesh* key, ::app::Fuse::Drawing::Batching::MeshBatcher** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__Uno_Collections_ICollection_Add(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__Uno_Collections_ICollection_Contains(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher__Uno_Collections_ICollection_Remove(Dictionary__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Mesh__Fuse_Drawing_Batching_MeshBatcher item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___uType* Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof()
{
    static ::uStaticStrong<Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___uType*)::uAllocClassType(sizeof(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___uType), "Uno.Collections.Dictionary<Fuse.Entities.Mesh,Uno.Collections.List<Fuse.Entities.Entry>>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof(), offsetof(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Entities_Mesh_Uno_Collections_List_Fuse_Entities_Entry____typeof(), offsetof(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___Add, 0, false, ::app::Fuse::Entities::Mesh__typeof(), ::app::Uno::Collections::List__Fuse_Entities_Entry__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Mesh__typeof()),
        ::uNewFunction("get_Count", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___get_Item, 0, false, ::app::Uno::Collections::List__Fuse_Entities_Entry__typeof(), ::app::Fuse::Entities::Mesh__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof()),
        ::uNewFunction("get_Values", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___New_1, 0, true, Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___New_2, 0, true, Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof(), ::app::Uno::Collections::IDictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof()),
        ::uNewFunction("Remove", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Mesh__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___set_Item, 0, false, ::app::Fuse::Entities::Mesh__typeof(), ::app::Uno::Collections::List__Fuse_Entities_Entry__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Entities::Mesh__typeof(), ::app::Uno::Collections::List__Fuse_Entities_Entry__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___GetEnumerator_boxed(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof(), __this->GetEnumerator());
}

void Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry____ObjInit(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry____ObjInit_1(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Entities_Mesh_Uno_Collections_List_Fuse_Entities_Entry__::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Fuse_Entities_Mesh_Uno_Collections_List_Fuse_Entities_Entry__::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___Add(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Mesh* key, ::app::Uno::Collections::List__Fuse_Entities_Entry* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___Clear(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___ContainsKey(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Mesh* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___get_Count(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    return __this->_count;
}

::app::Uno::Collections::List__Fuse_Entities_Entry* Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___get_Item(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Mesh* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___get_Keys(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___get_Values(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_ Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___GetEnumerator(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___New_1(NULL, __this);
}

Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___New_1(::uStatic* __this)
{
    Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* inst = (Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_*)::uAllocObject(sizeof(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_), Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* inst = (Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_*)::uAllocObject(sizeof(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_), Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___Rehash(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(i).Value);
        }
    }
}

bool Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___Remove(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Mesh* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___set_Item(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Mesh* key, ::app::Uno::Collections::List__Fuse_Entities_Entry* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___TryGetValue(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Fuse::Entities::Mesh* key, ::app::Uno::Collections::List__Fuse_Entities_Entry** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Entities::Mesh*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Entities_Mesh(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___Uno_Collections_ICollection_Add(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___Uno_Collections_ICollection_Contains(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry___Uno_Collections_ICollection_Remove(Dictionary__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Entities_Mesh__Uno_Collections_List_Fuse_Entities_Entry_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__uType* Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof()
{
    static ::uStaticStrong<Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__uType*)::uAllocClassType(sizeof(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__uType), "Uno.Collections.Dictionary<Fuse.Font,Fuse.Controls.Internal.DefaultTextRenderer>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof(), offsetof(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Font_Fuse_Controls_Internal_DefaultTextRenderer___typeof(), offsetof(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__Add, 0, false, ::app::Fuse::Font__typeof(), ::app::Fuse::Controls::Internal::DefaultTextRenderer__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Font__typeof()),
        ::uNewFunction("get_Count", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__get_Item, 0, false, ::app::Fuse::Controls::Internal::DefaultTextRenderer__typeof(), ::app::Fuse::Font__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof()),
        ::uNewFunction("get_Values", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__New_1, 0, true, Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__New_2, 0, true, Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof(), ::app::Uno::Collections::IDictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof()),
        ::uNewFunction("Remove", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Font__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__set_Item, 0, false, ::app::Fuse::Font__typeof(), ::app::Fuse::Controls::Internal::DefaultTextRenderer__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Font__typeof(), ::app::Fuse::Controls::Internal::DefaultTextRenderer__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__GetEnumerator_boxed(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof(), __this->GetEnumerator());
}

void Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer___ObjInit(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer___ObjInit_1(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Font_Fuse_Controls_Internal_DefaultTextRenderer_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Fuse_Font_Fuse_Controls_Internal_DefaultTextRenderer_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__Add(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this, ::app::Fuse::Font* key, ::app::Fuse::Controls::Internal::DefaultTextRenderer* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Font*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Font(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__Clear(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__ContainsKey(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this, ::app::Fuse::Font* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Font*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Font(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__get_Count(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this)
{
    return __this->_count;
}

::app::Fuse::Controls::Internal::DefaultTextRenderer* Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__get_Item(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this, ::app::Fuse::Font* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Font*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Font(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__get_Keys(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__get_Values(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__GetEnumerator(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__New_1(NULL, __this);
}

Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__New_1(::uStatic* __this)
{
    Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* inst = (Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer*)::uAllocObject(sizeof(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer), Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* inst = (Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer*)::uAllocObject(sizeof(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer), Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__Rehash(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(i).Value);
        }
    }
}

bool Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__Remove(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this, ::app::Fuse::Font* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Font*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Font(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__set_Item(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this, ::app::Fuse::Font* key, ::app::Fuse::Controls::Internal::DefaultTextRenderer* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Font*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Font(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__TryGetValue(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this, ::app::Fuse::Font* key, ::app::Fuse::Controls::Internal::DefaultTextRenderer** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Font*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Font(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__Uno_Collections_ICollection_Add(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__Uno_Collections_ICollection_Contains(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer__Uno_Collections_ICollection_Remove(Dictionary__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Font__Fuse_Controls_Internal_DefaultTextRenderer item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Fuse_IFlush__bool__uType* Dictionary__Fuse_IFlush__bool__typeof()
{
    static ::uStaticStrong<Dictionary__Fuse_IFlush__bool__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Fuse_IFlush__bool__uType*)::uAllocClassType(sizeof(Dictionary__Fuse_IFlush__bool__uType), "Uno.Collections.Dictionary<Fuse.IFlush,bool>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Fuse_IFlush__bool__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Fuse_IFlush__bool__typeof(), offsetof(Dictionary__Fuse_IFlush__bool__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_IFlush_bool___typeof(), offsetof(Dictionary__Fuse_IFlush__bool__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Fuse_IFlush__bool, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Fuse_IFlush__bool, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Fuse_IFlush__bool, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Fuse_IFlush__bool, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Fuse_IFlush__bool, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Fuse_IFlush__bool__Add, 0, false, ::app::Fuse::IFlush__typeof(), ::app::Uno::Bool__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Fuse_IFlush__bool__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Fuse_IFlush__bool__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::IFlush__typeof()),
        ::uNewFunction("get_Count", Dictionary__Fuse_IFlush__bool__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Fuse_IFlush__bool__get_Item, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::IFlush__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Fuse_IFlush__bool__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_IFlush__bool__typeof()),
        ::uNewFunction("get_Values", Dictionary__Fuse_IFlush__bool__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_IFlush__bool__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Fuse_IFlush__bool__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_IFlush__bool__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_IFlush__bool__New_1, 0, true, Dictionary__Fuse_IFlush__bool__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_IFlush__bool__New_2, 0, true, Dictionary__Fuse_IFlush__bool__typeof(), ::app::Uno::Collections::IDictionary__Fuse_IFlush__bool__typeof()),
        ::uNewFunction("Remove", Dictionary__Fuse_IFlush__bool__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::IFlush__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Fuse_IFlush__bool__set_Item, 0, false, ::app::Fuse::IFlush__typeof(), ::app::Uno::Bool__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Fuse_IFlush__bool__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::IFlush__typeof(), ::app::Uno::Bool__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Fuse_IFlush__bool__GetEnumerator_boxed(Dictionary__Fuse_IFlush__bool* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Fuse_IFlush__bool__typeof(), __this->GetEnumerator());
}

void Dictionary__Fuse_IFlush__bool___ObjInit(Dictionary__Fuse_IFlush__bool* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Fuse_IFlush__bool___ObjInit_1(Dictionary__Fuse_IFlush__bool* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_IFlush_bool_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Fuse_IFlush__bool keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Fuse_IFlush_bool_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Fuse_IFlush__bool__Add(Dictionary__Fuse_IFlush__bool* __this, ::uObject* key, bool value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_IFlush(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_IFlush__bool__Clear(Dictionary__Fuse_IFlush__bool* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Fuse_IFlush__bool__ContainsKey(Dictionary__Fuse_IFlush__bool* __this, ::uObject* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_IFlush(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Fuse_IFlush__bool__get_Count(Dictionary__Fuse_IFlush__bool* __this)
{
    return __this->_count;
}

bool Dictionary__Fuse_IFlush__bool__get_Item(Dictionary__Fuse_IFlush__bool* __this, ::uObject* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_IFlush(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_IFlush__bool* Dictionary__Fuse_IFlush__bool__get_Keys(Dictionary__Fuse_IFlush__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_IFlush__bool__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_IFlush__bool* Dictionary__Fuse_IFlush__bool__get_Values(Dictionary__Fuse_IFlush__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_IFlush__bool__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Fuse_IFlush__bool Dictionary__Fuse_IFlush__bool__GetEnumerator(Dictionary__Fuse_IFlush__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_IFlush__bool__New_1(NULL, __this);
}

Dictionary__Fuse_IFlush__bool* Dictionary__Fuse_IFlush__bool__New_1(::uStatic* __this)
{
    Dictionary__Fuse_IFlush__bool* inst = (Dictionary__Fuse_IFlush__bool*)::uAllocObject(sizeof(Dictionary__Fuse_IFlush__bool), Dictionary__Fuse_IFlush__bool__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Fuse_IFlush__bool* Dictionary__Fuse_IFlush__bool__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Fuse_IFlush__bool* inst = (Dictionary__Fuse_IFlush__bool*)::uAllocObject(sizeof(Dictionary__Fuse_IFlush__bool), Dictionary__Fuse_IFlush__bool__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Fuse_IFlush__bool__Rehash(Dictionary__Fuse_IFlush__bool* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(i).Value);
        }
    }
}

bool Dictionary__Fuse_IFlush__bool__Remove(Dictionary__Fuse_IFlush__bool* __this, ::uObject* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_IFlush(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_IFlush__bool__set_Item(Dictionary__Fuse_IFlush__bool* __this, ::uObject* key, bool value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_IFlush(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Fuse_IFlush__bool__TryGetValue(Dictionary__Fuse_IFlush__bool* __this, ::uObject* key, bool* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_IFlush(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_IFlush__bool>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_IFlush__bool__Uno_Collections_ICollection_Add(Dictionary__Fuse_IFlush__bool* __this, ::app::Uno::Collections::KeyValuePair__Fuse_IFlush__bool item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Fuse_IFlush__bool__Uno_Collections_ICollection_Contains(Dictionary__Fuse_IFlush__bool* __this, ::app::Uno::Collections::KeyValuePair__Fuse_IFlush__bool item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Fuse_IFlush__bool__Uno_Collections_ICollection_Remove(Dictionary__Fuse_IFlush__bool* __this, ::app::Uno::Collections::KeyValuePair__Fuse_IFlush__bool item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__uType* Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof()
{
    static ::uStaticStrong<Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__uType*)::uAllocClassType(sizeof(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__uType), "Uno.Collections.Dictionary<Fuse.Navigation.NavigationEdge,Fuse.Gestures.Internal.EdgeSwiper>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof(), offsetof(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Navigation_NavigationEdge_Fuse_Gestures_Internal_EdgeSwiper___typeof(), offsetof(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__Add, 0, false, ::app::Fuse::Navigation::NavigationEdge__typeof(), ::app::Fuse::Gestures::Internal::EdgeSwiper__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Navigation::NavigationEdge__typeof()),
        ::uNewFunction("get_Count", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__get_Item, 0, false, ::app::Fuse::Gestures::Internal::EdgeSwiper__typeof(), ::app::Fuse::Navigation::NavigationEdge__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof()),
        ::uNewFunction("get_Values", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__New_1, 0, true, Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__New_2, 0, true, Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof(), ::app::Uno::Collections::IDictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof()),
        ::uNewFunction("Remove", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Navigation::NavigationEdge__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__set_Item, 0, false, ::app::Fuse::Navigation::NavigationEdge__typeof(), ::app::Fuse::Gestures::Internal::EdgeSwiper__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Navigation::NavigationEdge__typeof(), ::app::Fuse::Gestures::Internal::EdgeSwiper__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__GetEnumerator_boxed(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof(), __this->GetEnumerator());
}

void Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper___ObjInit(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper___ObjInit_1(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Navigation_NavigationEdge_Fuse_Gestures_Internal_EdgeSwiper_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Fuse_Navigation_NavigationEdge_Fuse_Gestures_Internal_EdgeSwiper_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__Add(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this, int key, ::app::Fuse::Gestures::Internal::EdgeSwiper* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Fuse::Navigation::NavigationEdge__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Navigation_NavigationEdge(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__Clear(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__ContainsKey(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Fuse::Navigation::NavigationEdge__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Navigation_NavigationEdge(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__get_Count(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this)
{
    return __this->_count;
}

::app::Fuse::Gestures::Internal::EdgeSwiper* Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__get_Item(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Fuse::Navigation::NavigationEdge__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Navigation_NavigationEdge(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__get_Keys(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__get_Values(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__GetEnumerator(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__New_1(NULL, __this);
}

Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__New_1(::uStatic* __this)
{
    Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* inst = (Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper*)::uAllocObject(sizeof(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper), Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* inst = (Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper*)::uAllocObject(sizeof(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper), Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__Rehash(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(i).Value);
        }
    }
}

bool Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__Remove(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Fuse::Navigation::NavigationEdge__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Navigation_NavigationEdge(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__set_Item(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this, int key, ::app::Fuse::Gestures::Internal::EdgeSwiper* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Fuse::Navigation::NavigationEdge__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Navigation_NavigationEdge(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__TryGetValue(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this, int key, ::app::Fuse::Gestures::Internal::EdgeSwiper** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Fuse::Navigation::NavigationEdge__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Navigation_NavigationEdge(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__Uno_Collections_ICollection_Add(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__Uno_Collections_ICollection_Contains(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper__Uno_Collections_ICollection_Remove(Dictionary__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Navigation_NavigationEdge__Fuse_Gestures_Internal_EdgeSwiper item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Fuse_Node__bool__uType* Dictionary__Fuse_Node__bool__typeof()
{
    static ::uStaticStrong<Dictionary__Fuse_Node__bool__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Fuse_Node__bool__uType*)::uAllocClassType(sizeof(Dictionary__Fuse_Node__bool__uType), "Uno.Collections.Dictionary<Fuse.Node,bool>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Fuse_Node__bool__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Fuse_Node__bool__typeof(), offsetof(Dictionary__Fuse_Node__bool__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Node_bool___typeof(), offsetof(Dictionary__Fuse_Node__bool__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Fuse_Node__bool, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Fuse_Node__bool, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Fuse_Node__bool, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Fuse_Node__bool, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Fuse_Node__bool, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Fuse_Node__bool__Add, 0, false, ::app::Fuse::Node__typeof(), ::app::Uno::Bool__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Fuse_Node__bool__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Fuse_Node__bool__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Node__typeof()),
        ::uNewFunction("get_Count", Dictionary__Fuse_Node__bool__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Fuse_Node__bool__get_Item, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Node__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Fuse_Node__bool__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Node__bool__typeof()),
        ::uNewFunction("get_Values", Dictionary__Fuse_Node__bool__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Node__bool__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Fuse_Node__bool__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Node__bool__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Node__bool__New_1, 0, true, Dictionary__Fuse_Node__bool__typeof()),
        ::uNewFunction(".ctor", Dictionary__Fuse_Node__bool__New_2, 0, true, Dictionary__Fuse_Node__bool__typeof(), ::app::Uno::Collections::IDictionary__Fuse_Node__bool__typeof()),
        ::uNewFunction("Remove", Dictionary__Fuse_Node__bool__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Node__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Fuse_Node__bool__set_Item, 0, false, ::app::Fuse::Node__typeof(), ::app::Uno::Bool__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Fuse_Node__bool__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Fuse::Node__typeof(), ::app::Uno::Bool__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Fuse_Node__bool__GetEnumerator_boxed(Dictionary__Fuse_Node__bool* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Node__bool__typeof(), __this->GetEnumerator());
}

void Dictionary__Fuse_Node__bool___ObjInit(Dictionary__Fuse_Node__bool* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Fuse_Node__bool___ObjInit_1(Dictionary__Fuse_Node__bool* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Fuse_Node_bool_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Fuse_Node__bool keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Fuse_Node_bool_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Fuse_Node__bool__Add(Dictionary__Fuse_Node__bool* __this, ::app::Fuse::Node* key, bool value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Node*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Node(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Node__bool__Clear(Dictionary__Fuse_Node__bool* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Fuse_Node__bool__ContainsKey(Dictionary__Fuse_Node__bool* __this, ::app::Fuse::Node* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Node*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Node(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Fuse_Node__bool__get_Count(Dictionary__Fuse_Node__bool* __this)
{
    return __this->_count;
}

bool Dictionary__Fuse_Node__bool__get_Item(Dictionary__Fuse_Node__bool* __this, ::app::Fuse::Node* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Node*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Node(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Node__bool* Dictionary__Fuse_Node__bool__get_Keys(Dictionary__Fuse_Node__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Fuse_Node__bool__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Node__bool* Dictionary__Fuse_Node__bool__get_Values(Dictionary__Fuse_Node__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Fuse_Node__bool__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Node__bool Dictionary__Fuse_Node__bool__GetEnumerator(Dictionary__Fuse_Node__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Fuse_Node__bool__New_1(NULL, __this);
}

Dictionary__Fuse_Node__bool* Dictionary__Fuse_Node__bool__New_1(::uStatic* __this)
{
    Dictionary__Fuse_Node__bool* inst = (Dictionary__Fuse_Node__bool*)::uAllocObject(sizeof(Dictionary__Fuse_Node__bool), Dictionary__Fuse_Node__bool__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Fuse_Node__bool* Dictionary__Fuse_Node__bool__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Fuse_Node__bool* inst = (Dictionary__Fuse_Node__bool*)::uAllocObject(sizeof(Dictionary__Fuse_Node__bool), Dictionary__Fuse_Node__bool__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Fuse_Node__bool__Rehash(Dictionary__Fuse_Node__bool* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(i).Value);
        }
    }
}

bool Dictionary__Fuse_Node__bool__Remove(Dictionary__Fuse_Node__bool* __this, ::app::Fuse::Node* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Node*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Node(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Node__bool__set_Item(Dictionary__Fuse_Node__bool* __this, ::app::Fuse::Node* key, bool value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Node*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Node(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Fuse_Node__bool__TryGetValue(Dictionary__Fuse_Node__bool* __this, ::app::Fuse::Node* key, bool* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Fuse::Node*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Fuse_Node(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Fuse_Node__bool>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Fuse_Node__bool__Uno_Collections_ICollection_Add(Dictionary__Fuse_Node__bool* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Node__bool item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Fuse_Node__bool__Uno_Collections_ICollection_Contains(Dictionary__Fuse_Node__bool* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Node__bool item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Fuse_Node__bool__Uno_Collections_ICollection_Remove(Dictionary__Fuse_Node__bool* __this, ::app::Uno::Collections::KeyValuePair__Fuse_Node__bool item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__uType* Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof()
{
    static ::uStaticStrong<Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__uType*)::uAllocClassType(sizeof(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__uType), "Uno.Collections.Dictionary<HashableWeakReference,Outracks.Simulator.Bytecode.TypeName>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof(), offsetof(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_HashableWeakReference_Outracks_Simulator_Bytecode_TypeName___typeof(), offsetof(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__Add, 0, false, ::app::HashableWeakReference__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::HashableWeakReference__typeof()),
        ::uNewFunction("get_Count", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__get_Item, 0, false, ::app::Outracks::Simulator::Bytecode::TypeName__typeof(), ::app::HashableWeakReference__typeof()),
        ::uNewFunction("get_Keys", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction("get_Values", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction(".ctor", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__New_1, 0, true, Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction(".ctor", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__New_2, 0, true, Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof(), ::app::Uno::Collections::IDictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction("Remove", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::HashableWeakReference__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__set_Item, 0, false, ::app::HashableWeakReference__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::HashableWeakReference__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__GetEnumerator_boxed(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof(), __this->GetEnumerator());
}

void Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName___ObjInit(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName___ObjInit_1(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_HashableWeakReference_Outracks_Simulator_Bytecode_TypeName_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_HashableWeakReference_Outracks_Simulator_Bytecode_TypeName_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__Add(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this, ::app::HashableWeakReference* key, ::app::Outracks::Simulator::Bytecode::TypeName* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__Clear(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__ContainsKey(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this, ::app::HashableWeakReference* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__get_Count(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return __this->_count;
}

::app::Outracks::Simulator::Bytecode::TypeName* Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__get_Item(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this, ::app::HashableWeakReference* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__get_Keys(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__get_Values(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__GetEnumerator(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__New_1(NULL, __this);
}

Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__New_1(::uStatic* __this)
{
    Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* inst = (Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName*)::uAllocObject(sizeof(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName), Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* inst = (Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName*)::uAllocObject(sizeof(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName), Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__Rehash(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(i).Value);
        }
    }
}

bool Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__Remove(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this, ::app::HashableWeakReference* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__set_Item(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this, ::app::HashableWeakReference* key, ::app::Outracks::Simulator::Bytecode::TypeName* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__TryGetValue(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this, ::app::HashableWeakReference* key, ::app::Outracks::Simulator::Bytecode::TypeName** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__Uno_Collections_ICollection_Add(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Uno::Collections::KeyValuePair__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__Uno_Collections_ICollection_Contains(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Uno::Collections::KeyValuePair__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName__Uno_Collections_ICollection_Remove(Dictionary__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Uno::Collections::KeyValuePair__HashableWeakReference__Outracks_Simulator_Bytecode_TypeName item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__HashableWeakReference__string__uType* Dictionary__HashableWeakReference__string__typeof()
{
    static ::uStaticStrong<Dictionary__HashableWeakReference__string__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__HashableWeakReference__string__uType*)::uAllocClassType(sizeof(Dictionary__HashableWeakReference__string__uType), "Uno.Collections.Dictionary<HashableWeakReference,string>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__HashableWeakReference__string__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__HashableWeakReference__string__typeof(), offsetof(Dictionary__HashableWeakReference__string__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_HashableWeakReference_string___typeof(), offsetof(Dictionary__HashableWeakReference__string__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__HashableWeakReference__string, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__HashableWeakReference__string, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__HashableWeakReference__string, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__HashableWeakReference__string, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__HashableWeakReference__string, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__HashableWeakReference__string__Add, 0, false, ::app::HashableWeakReference__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__HashableWeakReference__string__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__HashableWeakReference__string__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::HashableWeakReference__typeof()),
        ::uNewFunction("get_Count", Dictionary__HashableWeakReference__string__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__HashableWeakReference__string__get_Item, 0, false, ::app::Uno::String__typeof(), ::app::HashableWeakReference__typeof()),
        ::uNewFunction("get_Keys", Dictionary__HashableWeakReference__string__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__HashableWeakReference__string__typeof()),
        ::uNewFunction("get_Values", Dictionary__HashableWeakReference__string__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__HashableWeakReference__string__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__HashableWeakReference__string__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__HashableWeakReference__string__typeof()),
        ::uNewFunction(".ctor", Dictionary__HashableWeakReference__string__New_1, 0, true, Dictionary__HashableWeakReference__string__typeof()),
        ::uNewFunction(".ctor", Dictionary__HashableWeakReference__string__New_2, 0, true, Dictionary__HashableWeakReference__string__typeof(), ::app::Uno::Collections::IDictionary__HashableWeakReference__string__typeof()),
        ::uNewFunction("Remove", Dictionary__HashableWeakReference__string__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::HashableWeakReference__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__HashableWeakReference__string__set_Item, 0, false, ::app::HashableWeakReference__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__HashableWeakReference__string__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::HashableWeakReference__typeof(), ::app::Uno::String__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__HashableWeakReference__string__GetEnumerator_boxed(Dictionary__HashableWeakReference__string* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__HashableWeakReference__string__typeof(), __this->GetEnumerator());
}

void Dictionary__HashableWeakReference__string___ObjInit(Dictionary__HashableWeakReference__string* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__HashableWeakReference__string___ObjInit_1(Dictionary__HashableWeakReference__string* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_HashableWeakReference_string_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__HashableWeakReference__string keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_HashableWeakReference_string_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__HashableWeakReference__string__Add(Dictionary__HashableWeakReference__string* __this, ::app::HashableWeakReference* key, ::uString* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__HashableWeakReference__string__Clear(Dictionary__HashableWeakReference__string* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__HashableWeakReference__string__ContainsKey(Dictionary__HashableWeakReference__string* __this, ::app::HashableWeakReference* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__HashableWeakReference__string__get_Count(Dictionary__HashableWeakReference__string* __this)
{
    return __this->_count;
}

::uString* Dictionary__HashableWeakReference__string__get_Item(Dictionary__HashableWeakReference__string* __this, ::app::HashableWeakReference* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__HashableWeakReference__string* Dictionary__HashableWeakReference__string__get_Keys(Dictionary__HashableWeakReference__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__HashableWeakReference__string__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__HashableWeakReference__string* Dictionary__HashableWeakReference__string__get_Values(Dictionary__HashableWeakReference__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__HashableWeakReference__string__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__HashableWeakReference__string Dictionary__HashableWeakReference__string__GetEnumerator(Dictionary__HashableWeakReference__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__HashableWeakReference__string__New_1(NULL, __this);
}

Dictionary__HashableWeakReference__string* Dictionary__HashableWeakReference__string__New_1(::uStatic* __this)
{
    Dictionary__HashableWeakReference__string* inst = (Dictionary__HashableWeakReference__string*)::uAllocObject(sizeof(Dictionary__HashableWeakReference__string), Dictionary__HashableWeakReference__string__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__HashableWeakReference__string* Dictionary__HashableWeakReference__string__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__HashableWeakReference__string* inst = (Dictionary__HashableWeakReference__string*)::uAllocObject(sizeof(Dictionary__HashableWeakReference__string), Dictionary__HashableWeakReference__string__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__HashableWeakReference__string__Rehash(Dictionary__HashableWeakReference__string* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(i).Value);
        }
    }
}

bool Dictionary__HashableWeakReference__string__Remove(Dictionary__HashableWeakReference__string* __this, ::app::HashableWeakReference* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__HashableWeakReference__string__set_Item(Dictionary__HashableWeakReference__string* __this, ::app::HashableWeakReference* key, ::uString* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__HashableWeakReference__string__TryGetValue(Dictionary__HashableWeakReference__string* __this, ::app::HashableWeakReference* key, ::uString** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::HashableWeakReference*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__HashableWeakReference(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__HashableWeakReference__string>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__HashableWeakReference__string__Uno_Collections_ICollection_Add(Dictionary__HashableWeakReference__string* __this, ::app::Uno::Collections::KeyValuePair__HashableWeakReference__string item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__HashableWeakReference__string__Uno_Collections_ICollection_Contains(Dictionary__HashableWeakReference__string* __this, ::app::Uno::Collections::KeyValuePair__HashableWeakReference__string item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__HashableWeakReference__string__Uno_Collections_ICollection_Remove(Dictionary__HashableWeakReference__string* __this, ::app::Uno::Collections::KeyValuePair__HashableWeakReference__string item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__int__bool__uType* Dictionary__int__bool__typeof()
{
    static ::uStaticStrong<Dictionary__int__bool__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__int__bool__uType*)::uAllocClassType(sizeof(Dictionary__int__bool__uType), "Uno.Collections.Dictionary<int,bool>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__int__bool__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__int__bool__typeof(), offsetof(Dictionary__int__bool__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_bool___typeof(), offsetof(Dictionary__int__bool__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__int__bool, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__int__bool, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__int__bool__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__int__bool, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__int__bool, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__int__bool, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__int__bool__Add, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Bool__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__int__bool__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__int__bool__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Count", Dictionary__int__bool__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__int__bool__get_Item, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Keys", Dictionary__int__bool__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__int__bool__typeof()),
        ::uNewFunction("get_Values", Dictionary__int__bool__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__int__bool__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__int__bool__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__int__bool__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__bool__New_1, 0, true, Dictionary__int__bool__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__bool__New_2, 0, true, Dictionary__int__bool__typeof(), ::app::Uno::Collections::IDictionary__int__bool__typeof()),
        ::uNewFunction("Remove", Dictionary__int__bool__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__int__bool__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Bool__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__int__bool__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof(), ::app::Uno::Bool__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__int__bool__GetEnumerator_boxed(Dictionary__int__bool* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__int__bool__typeof(), __this->GetEnumerator());
}

void Dictionary__int__bool___ObjInit(Dictionary__int__bool* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__bool__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__int__bool___ObjInit_1(Dictionary__int__bool* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_bool_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__int__bool keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_int_bool_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__int__bool__Add(Dictionary__int__bool* __this, int key, bool value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__bool__Clear(Dictionary__int__bool* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__int__bool__ContainsKey(Dictionary__int__bool* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__int__bool__get_Count(Dictionary__int__bool* __this)
{
    return __this->_count;
}

bool Dictionary__int__bool__get_Item(Dictionary__int__bool* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__int__bool* Dictionary__int__bool__get_Keys(Dictionary__int__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__int__bool__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__int__bool* Dictionary__int__bool__get_Values(Dictionary__int__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__int__bool__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__int__bool Dictionary__int__bool__GetEnumerator(Dictionary__int__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__int__bool__New_1(NULL, __this);
}

Dictionary__int__bool* Dictionary__int__bool__New_1(::uStatic* __this)
{
    Dictionary__int__bool* inst = (Dictionary__int__bool*)::uAllocObject(sizeof(Dictionary__int__bool), Dictionary__int__bool__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__int__bool* Dictionary__int__bool__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__int__bool* inst = (Dictionary__int__bool*)::uAllocObject(sizeof(Dictionary__int__bool), Dictionary__int__bool__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__int__bool__Rehash(Dictionary__int__bool* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__bool__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(i).Value);
        }
    }
}

bool Dictionary__int__bool__Remove(Dictionary__int__bool* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__bool__set_Item(Dictionary__int__bool* __this, int key, bool value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__int__bool__TryGetValue(Dictionary__int__bool* __this, int key, bool* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__bool>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__bool__Uno_Collections_ICollection_Add(Dictionary__int__bool* __this, ::app::Uno::Collections::KeyValuePair__int__bool item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__int__bool__Uno_Collections_ICollection_Contains(Dictionary__int__bool* __this, ::app::Uno::Collections::KeyValuePair__int__bool item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__int__bool__Uno_Collections_ICollection_Remove(Dictionary__int__bool* __this, ::app::Uno::Collections::KeyValuePair__int__bool item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__int__Fuse_Input_Capturer__uType* Dictionary__int__Fuse_Input_Capturer__typeof()
{
    static ::uStaticStrong<Dictionary__int__Fuse_Input_Capturer__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__int__Fuse_Input_Capturer__uType*)::uAllocClassType(sizeof(Dictionary__int__Fuse_Input_Capturer__uType), "Uno.Collections.Dictionary<int,Fuse.Input.Capturer>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__int__Fuse_Input_Capturer__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__int__Fuse_Input_Capturer__typeof(), offsetof(Dictionary__int__Fuse_Input_Capturer__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_Fuse_Input_Capturer___typeof(), offsetof(Dictionary__int__Fuse_Input_Capturer__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__int__Fuse_Input_Capturer, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__int__Fuse_Input_Capturer, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__int__Fuse_Input_Capturer, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__int__Fuse_Input_Capturer, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__int__Fuse_Input_Capturer, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__int__Fuse_Input_Capturer__Add, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::Capturer__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__int__Fuse_Input_Capturer__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__int__Fuse_Input_Capturer__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Count", Dictionary__int__Fuse_Input_Capturer__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__int__Fuse_Input_Capturer__get_Item, 0, false, ::app::Fuse::Input::Capturer__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Keys", Dictionary__int__Fuse_Input_Capturer__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__int__Fuse_Input_Capturer__typeof()),
        ::uNewFunction("get_Values", Dictionary__int__Fuse_Input_Capturer__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__int__Fuse_Input_Capturer__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__int__Fuse_Input_Capturer__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Input_Capturer__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__Fuse_Input_Capturer__New_1, 0, true, Dictionary__int__Fuse_Input_Capturer__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__Fuse_Input_Capturer__New_2, 0, true, Dictionary__int__Fuse_Input_Capturer__typeof(), ::app::Uno::Collections::IDictionary__int__Fuse_Input_Capturer__typeof()),
        ::uNewFunction("Remove", Dictionary__int__Fuse_Input_Capturer__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__int__Fuse_Input_Capturer__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::Capturer__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__int__Fuse_Input_Capturer__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof(), ::app::Fuse::Input::Capturer__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__int__Fuse_Input_Capturer__GetEnumerator_boxed(Dictionary__int__Fuse_Input_Capturer* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Input_Capturer__typeof(), __this->GetEnumerator());
}

void Dictionary__int__Fuse_Input_Capturer___ObjInit(Dictionary__int__Fuse_Input_Capturer* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__int__Fuse_Input_Capturer___ObjInit_1(Dictionary__int__Fuse_Input_Capturer* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_Fuse_Input_Capturer_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__int__Fuse_Input_Capturer keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_int_Fuse_Input_Capturer_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__int__Fuse_Input_Capturer__Add(Dictionary__int__Fuse_Input_Capturer* __this, int key, ::app::Fuse::Input::Capturer* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Fuse_Input_Capturer__Clear(Dictionary__int__Fuse_Input_Capturer* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__int__Fuse_Input_Capturer__ContainsKey(Dictionary__int__Fuse_Input_Capturer* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__int__Fuse_Input_Capturer__get_Count(Dictionary__int__Fuse_Input_Capturer* __this)
{
    return __this->_count;
}

::app::Fuse::Input::Capturer* Dictionary__int__Fuse_Input_Capturer__get_Item(Dictionary__int__Fuse_Input_Capturer* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__int__Fuse_Input_Capturer* Dictionary__int__Fuse_Input_Capturer__get_Keys(Dictionary__int__Fuse_Input_Capturer* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__int__Fuse_Input_Capturer__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__int__Fuse_Input_Capturer* Dictionary__int__Fuse_Input_Capturer__get_Values(Dictionary__int__Fuse_Input_Capturer* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__int__Fuse_Input_Capturer__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Input_Capturer Dictionary__int__Fuse_Input_Capturer__GetEnumerator(Dictionary__int__Fuse_Input_Capturer* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Input_Capturer__New_1(NULL, __this);
}

Dictionary__int__Fuse_Input_Capturer* Dictionary__int__Fuse_Input_Capturer__New_1(::uStatic* __this)
{
    Dictionary__int__Fuse_Input_Capturer* inst = (Dictionary__int__Fuse_Input_Capturer*)::uAllocObject(sizeof(Dictionary__int__Fuse_Input_Capturer), Dictionary__int__Fuse_Input_Capturer__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__int__Fuse_Input_Capturer* Dictionary__int__Fuse_Input_Capturer__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__int__Fuse_Input_Capturer* inst = (Dictionary__int__Fuse_Input_Capturer*)::uAllocObject(sizeof(Dictionary__int__Fuse_Input_Capturer), Dictionary__int__Fuse_Input_Capturer__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__int__Fuse_Input_Capturer__Rehash(Dictionary__int__Fuse_Input_Capturer* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(i).Value);
        }
    }
}

bool Dictionary__int__Fuse_Input_Capturer__Remove(Dictionary__int__Fuse_Input_Capturer* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Fuse_Input_Capturer__set_Item(Dictionary__int__Fuse_Input_Capturer* __this, int key, ::app::Fuse::Input::Capturer* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__int__Fuse_Input_Capturer__TryGetValue(Dictionary__int__Fuse_Input_Capturer* __this, int key, ::app::Fuse::Input::Capturer** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Capturer>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Fuse_Input_Capturer__Uno_Collections_ICollection_Add(Dictionary__int__Fuse_Input_Capturer* __this, ::app::Uno::Collections::KeyValuePair__int__Fuse_Input_Capturer item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__int__Fuse_Input_Capturer__Uno_Collections_ICollection_Contains(Dictionary__int__Fuse_Input_Capturer* __this, ::app::Uno::Collections::KeyValuePair__int__Fuse_Input_Capturer item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__int__Fuse_Input_Capturer__Uno_Collections_ICollection_Remove(Dictionary__int__Fuse_Input_Capturer* __this, ::app::Uno::Collections::KeyValuePair__int__Fuse_Input_Capturer item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__int__Fuse_Input_Pointer_PointerRecord__uType* Dictionary__int__Fuse_Input_Pointer_PointerRecord__typeof()
{
    static ::uStaticStrong<Dictionary__int__Fuse_Input_Pointer_PointerRecord__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__int__Fuse_Input_Pointer_PointerRecord__uType*)::uAllocClassType(sizeof(Dictionary__int__Fuse_Input_Pointer_PointerRecord__uType), "Uno.Collections.Dictionary<int,Fuse.Input.Pointer_PointerRecord>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__int__Fuse_Input_Pointer_PointerRecord__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__int__Fuse_Input_Pointer_PointerRecord__typeof(), offsetof(Dictionary__int__Fuse_Input_Pointer_PointerRecord__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_Fuse_Input_Pointer_PointerRecord___typeof(), offsetof(Dictionary__int__Fuse_Input_Pointer_PointerRecord__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__int__Fuse_Input_Pointer_PointerRecord, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__int__Fuse_Input_Pointer_PointerRecord, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__int__Fuse_Input_Pointer_PointerRecord, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__int__Fuse_Input_Pointer_PointerRecord, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__int__Fuse_Input_Pointer_PointerRecord, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__int__Fuse_Input_Pointer_PointerRecord__Add, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::Pointer_PointerRecord__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__int__Fuse_Input_Pointer_PointerRecord__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__int__Fuse_Input_Pointer_PointerRecord__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Count", Dictionary__int__Fuse_Input_Pointer_PointerRecord__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__int__Fuse_Input_Pointer_PointerRecord__get_Item, 0, false, ::app::Fuse::Input::Pointer_PointerRecord__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Keys", Dictionary__int__Fuse_Input_Pointer_PointerRecord__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__int__Fuse_Input_Pointer_PointerRecord__typeof()),
        ::uNewFunction("get_Values", Dictionary__int__Fuse_Input_Pointer_PointerRecord__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__int__Fuse_Input_Pointer_PointerRecord__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__int__Fuse_Input_Pointer_PointerRecord__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Input_Pointer_PointerRecord__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__Fuse_Input_Pointer_PointerRecord__New_1, 0, true, Dictionary__int__Fuse_Input_Pointer_PointerRecord__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__Fuse_Input_Pointer_PointerRecord__New_2, 0, true, Dictionary__int__Fuse_Input_Pointer_PointerRecord__typeof(), ::app::Uno::Collections::IDictionary__int__Fuse_Input_Pointer_PointerRecord__typeof()),
        ::uNewFunction("Remove", Dictionary__int__Fuse_Input_Pointer_PointerRecord__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__int__Fuse_Input_Pointer_PointerRecord__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Input::Pointer_PointerRecord__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__int__Fuse_Input_Pointer_PointerRecord__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof(), ::app::Fuse::Input::Pointer_PointerRecord__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__int__Fuse_Input_Pointer_PointerRecord__GetEnumerator_boxed(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Input_Pointer_PointerRecord__typeof(), __this->GetEnumerator());
}

void Dictionary__int__Fuse_Input_Pointer_PointerRecord___ObjInit(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__int__Fuse_Input_Pointer_PointerRecord___ObjInit_1(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_Fuse_Input_Pointer_PointerRecord_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__int__Fuse_Input_Pointer_PointerRecord keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_int_Fuse_Input_Pointer_PointerRecord_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__int__Fuse_Input_Pointer_PointerRecord__Add(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this, int key, ::app::Fuse::Input::Pointer_PointerRecord* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Fuse_Input_Pointer_PointerRecord__Clear(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__int__Fuse_Input_Pointer_PointerRecord__ContainsKey(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__int__Fuse_Input_Pointer_PointerRecord__get_Count(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this)
{
    return __this->_count;
}

::app::Fuse::Input::Pointer_PointerRecord* Dictionary__int__Fuse_Input_Pointer_PointerRecord__get_Item(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__int__Fuse_Input_Pointer_PointerRecord* Dictionary__int__Fuse_Input_Pointer_PointerRecord__get_Keys(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__int__Fuse_Input_Pointer_PointerRecord__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__int__Fuse_Input_Pointer_PointerRecord* Dictionary__int__Fuse_Input_Pointer_PointerRecord__get_Values(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__int__Fuse_Input_Pointer_PointerRecord__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Input_Pointer_PointerRecord Dictionary__int__Fuse_Input_Pointer_PointerRecord__GetEnumerator(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Input_Pointer_PointerRecord__New_1(NULL, __this);
}

Dictionary__int__Fuse_Input_Pointer_PointerRecord* Dictionary__int__Fuse_Input_Pointer_PointerRecord__New_1(::uStatic* __this)
{
    Dictionary__int__Fuse_Input_Pointer_PointerRecord* inst = (Dictionary__int__Fuse_Input_Pointer_PointerRecord*)::uAllocObject(sizeof(Dictionary__int__Fuse_Input_Pointer_PointerRecord), Dictionary__int__Fuse_Input_Pointer_PointerRecord__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__int__Fuse_Input_Pointer_PointerRecord* Dictionary__int__Fuse_Input_Pointer_PointerRecord__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__int__Fuse_Input_Pointer_PointerRecord* inst = (Dictionary__int__Fuse_Input_Pointer_PointerRecord*)::uAllocObject(sizeof(Dictionary__int__Fuse_Input_Pointer_PointerRecord), Dictionary__int__Fuse_Input_Pointer_PointerRecord__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__int__Fuse_Input_Pointer_PointerRecord__Rehash(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(i).Value);
        }
    }
}

bool Dictionary__int__Fuse_Input_Pointer_PointerRecord__Remove(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Fuse_Input_Pointer_PointerRecord__set_Item(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this, int key, ::app::Fuse::Input::Pointer_PointerRecord* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__int__Fuse_Input_Pointer_PointerRecord__TryGetValue(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this, int key, ::app::Fuse::Input::Pointer_PointerRecord** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Input_Pointer_PointerRecord>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Fuse_Input_Pointer_PointerRecord__Uno_Collections_ICollection_Add(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this, ::app::Uno::Collections::KeyValuePair__int__Fuse_Input_Pointer_PointerRecord item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__int__Fuse_Input_Pointer_PointerRecord__Uno_Collections_ICollection_Contains(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this, ::app::Uno::Collections::KeyValuePair__int__Fuse_Input_Pointer_PointerRecord item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__int__Fuse_Input_Pointer_PointerRecord__Uno_Collections_ICollection_Remove(Dictionary__int__Fuse_Input_Pointer_PointerRecord* __this, ::app::Uno::Collections::KeyValuePair__int__Fuse_Input_Pointer_PointerRecord item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__int__Fuse_Scripting_Callback__uType* Dictionary__int__Fuse_Scripting_Callback__typeof()
{
    static ::uStaticStrong<Dictionary__int__Fuse_Scripting_Callback__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__int__Fuse_Scripting_Callback__uType*)::uAllocClassType(sizeof(Dictionary__int__Fuse_Scripting_Callback__uType), "Uno.Collections.Dictionary<int,Fuse.Scripting.Callback>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__int__Fuse_Scripting_Callback__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__int__Fuse_Scripting_Callback__typeof(), offsetof(Dictionary__int__Fuse_Scripting_Callback__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_Fuse_Scripting_Callback___typeof(), offsetof(Dictionary__int__Fuse_Scripting_Callback__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__int__Fuse_Scripting_Callback, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__int__Fuse_Scripting_Callback, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__int__Fuse_Scripting_Callback, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__int__Fuse_Scripting_Callback, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__int__Fuse_Scripting_Callback, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__int__Fuse_Scripting_Callback__Add, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Scripting::Callback__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__int__Fuse_Scripting_Callback__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__int__Fuse_Scripting_Callback__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Count", Dictionary__int__Fuse_Scripting_Callback__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__int__Fuse_Scripting_Callback__get_Item, 0, false, ::app::Fuse::Scripting::Callback__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Keys", Dictionary__int__Fuse_Scripting_Callback__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__int__Fuse_Scripting_Callback__typeof()),
        ::uNewFunction("get_Values", Dictionary__int__Fuse_Scripting_Callback__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__int__Fuse_Scripting_Callback__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__int__Fuse_Scripting_Callback__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Scripting_Callback__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__Fuse_Scripting_Callback__New_1, 0, true, Dictionary__int__Fuse_Scripting_Callback__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__Fuse_Scripting_Callback__New_2, 0, true, Dictionary__int__Fuse_Scripting_Callback__typeof(), ::app::Uno::Collections::IDictionary__int__Fuse_Scripting_Callback__typeof()),
        ::uNewFunction("Remove", Dictionary__int__Fuse_Scripting_Callback__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__int__Fuse_Scripting_Callback__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Fuse::Scripting::Callback__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__int__Fuse_Scripting_Callback__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof(), ::app::Fuse::Scripting::Callback__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__int__Fuse_Scripting_Callback__GetEnumerator_boxed(Dictionary__int__Fuse_Scripting_Callback* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Scripting_Callback__typeof(), __this->GetEnumerator());
}

void Dictionary__int__Fuse_Scripting_Callback___ObjInit(Dictionary__int__Fuse_Scripting_Callback* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__int__Fuse_Scripting_Callback___ObjInit_1(Dictionary__int__Fuse_Scripting_Callback* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_Fuse_Scripting_Callback_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__int__Fuse_Scripting_Callback keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_int_Fuse_Scripting_Callback_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__int__Fuse_Scripting_Callback__Add(Dictionary__int__Fuse_Scripting_Callback* __this, int key, ::uDelegate* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Fuse_Scripting_Callback__Clear(Dictionary__int__Fuse_Scripting_Callback* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__int__Fuse_Scripting_Callback__ContainsKey(Dictionary__int__Fuse_Scripting_Callback* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__int__Fuse_Scripting_Callback__get_Count(Dictionary__int__Fuse_Scripting_Callback* __this)
{
    return __this->_count;
}

::uDelegate* Dictionary__int__Fuse_Scripting_Callback__get_Item(Dictionary__int__Fuse_Scripting_Callback* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__int__Fuse_Scripting_Callback* Dictionary__int__Fuse_Scripting_Callback__get_Keys(Dictionary__int__Fuse_Scripting_Callback* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__int__Fuse_Scripting_Callback__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__int__Fuse_Scripting_Callback* Dictionary__int__Fuse_Scripting_Callback__get_Values(Dictionary__int__Fuse_Scripting_Callback* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__int__Fuse_Scripting_Callback__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Scripting_Callback Dictionary__int__Fuse_Scripting_Callback__GetEnumerator(Dictionary__int__Fuse_Scripting_Callback* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__int__Fuse_Scripting_Callback__New_1(NULL, __this);
}

Dictionary__int__Fuse_Scripting_Callback* Dictionary__int__Fuse_Scripting_Callback__New_1(::uStatic* __this)
{
    Dictionary__int__Fuse_Scripting_Callback* inst = (Dictionary__int__Fuse_Scripting_Callback*)::uAllocObject(sizeof(Dictionary__int__Fuse_Scripting_Callback), Dictionary__int__Fuse_Scripting_Callback__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__int__Fuse_Scripting_Callback* Dictionary__int__Fuse_Scripting_Callback__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__int__Fuse_Scripting_Callback* inst = (Dictionary__int__Fuse_Scripting_Callback*)::uAllocObject(sizeof(Dictionary__int__Fuse_Scripting_Callback), Dictionary__int__Fuse_Scripting_Callback__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__int__Fuse_Scripting_Callback__Rehash(Dictionary__int__Fuse_Scripting_Callback* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(i).Value);
        }
    }
}

bool Dictionary__int__Fuse_Scripting_Callback__Remove(Dictionary__int__Fuse_Scripting_Callback* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Fuse_Scripting_Callback__set_Item(Dictionary__int__Fuse_Scripting_Callback* __this, int key, ::uDelegate* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__int__Fuse_Scripting_Callback__TryGetValue(Dictionary__int__Fuse_Scripting_Callback* __this, int key, ::uDelegate** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Fuse_Scripting_Callback>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Fuse_Scripting_Callback__Uno_Collections_ICollection_Add(Dictionary__int__Fuse_Scripting_Callback* __this, ::app::Uno::Collections::KeyValuePair__int__Fuse_Scripting_Callback item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__int__Fuse_Scripting_Callback__Uno_Collections_ICollection_Contains(Dictionary__int__Fuse_Scripting_Callback* __this, ::app::Uno::Collections::KeyValuePair__int__Fuse_Scripting_Callback item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__int__Fuse_Scripting_Callback__Uno_Collections_ICollection_Remove(Dictionary__int__Fuse_Scripting_Callback* __this, ::app::Uno::Collections::KeyValuePair__int__Fuse_Scripting_Callback item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__int__int__uType* Dictionary__int__int__typeof()
{
    static ::uStaticStrong<Dictionary__int__int__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__int__int__uType*)::uAllocClassType(sizeof(Dictionary__int__int__uType), "Uno.Collections.Dictionary<int,int>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__int__int__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__int__int__typeof(), offsetof(Dictionary__int__int__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_int___typeof(), offsetof(Dictionary__int__int__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__int__int, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__int__int, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__int__int__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__int__int, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__int__int, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__int__int, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__int__int__Add, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__int__int__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__int__int__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Count", Dictionary__int__int__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__int__int__get_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Keys", Dictionary__int__int__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__int__int__typeof()),
        ::uNewFunction("get_Values", Dictionary__int__int__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__int__int__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__int__int__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__int__int__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__int__New_1, 0, true, Dictionary__int__int__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__int__New_2, 0, true, Dictionary__int__int__typeof(), ::app::Uno::Collections::IDictionary__int__int__typeof()),
        ::uNewFunction("Remove", Dictionary__int__int__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__int__int__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__int__int__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof(), ::app::Uno::Int__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__int__int__GetEnumerator_boxed(Dictionary__int__int* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__int__int__typeof(), __this->GetEnumerator());
}

void Dictionary__int__int___ObjInit(Dictionary__int__int* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__int__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__int__int___ObjInit_1(Dictionary__int__int* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_int_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__int__int keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_int_int_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__int__int__Add(Dictionary__int__int* __this, int key, int value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__int__Clear(Dictionary__int__int* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__int__int__ContainsKey(Dictionary__int__int* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__int__int__get_Count(Dictionary__int__int* __this)
{
    return __this->_count;
}

int Dictionary__int__int__get_Item(Dictionary__int__int* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__int__int* Dictionary__int__int__get_Keys(Dictionary__int__int* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__int__int__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__int__int* Dictionary__int__int__get_Values(Dictionary__int__int* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__int__int__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__int__int Dictionary__int__int__GetEnumerator(Dictionary__int__int* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__int__int__New_1(NULL, __this);
}

Dictionary__int__int* Dictionary__int__int__New_1(::uStatic* __this)
{
    Dictionary__int__int* inst = (Dictionary__int__int*)::uAllocObject(sizeof(Dictionary__int__int), Dictionary__int__int__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__int__int* Dictionary__int__int__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__int__int* inst = (Dictionary__int__int*)::uAllocObject(sizeof(Dictionary__int__int), Dictionary__int__int__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__int__int__Rehash(Dictionary__int__int* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__int__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(i).Value);
        }
    }
}

bool Dictionary__int__int__Remove(Dictionary__int__int* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__int__set_Item(Dictionary__int__int* __this, int key, int value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__int__int__TryGetValue(Dictionary__int__int* __this, int key, int* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__int>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__int__Uno_Collections_ICollection_Add(Dictionary__int__int* __this, ::app::Uno::Collections::KeyValuePair__int__int item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__int__int__Uno_Collections_ICollection_Contains(Dictionary__int__int* __this, ::app::Uno::Collections::KeyValuePair__int__int item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__int__int__Uno_Collections_ICollection_Remove(Dictionary__int__int* __this, ::app::Uno::Collections::KeyValuePair__int__int item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__int__string__uType* Dictionary__int__string__typeof()
{
    static ::uStaticStrong<Dictionary__int__string__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__int__string__uType*)::uAllocClassType(sizeof(Dictionary__int__string__uType), "Uno.Collections.Dictionary<int,string>", false, 2, 1, 0);

    type->__interface_0.__fp_TryGetValue = (bool(*)(void*, int, ::uString**))Dictionary__int__string__TryGetValue;
    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__int__string__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__int__string__typeof(), offsetof(Dictionary__int__string__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_string___typeof(), offsetof(Dictionary__int__string__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__int__string, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__int__string, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__int__string__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__int__string, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__int__string, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__int__string, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__int__string__Add, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__int__string__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__int__string__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Count", Dictionary__int__string__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__int__string__get_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Keys", Dictionary__int__string__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__int__string__typeof()),
        ::uNewFunction("get_Values", Dictionary__int__string__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__int__string__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__int__string__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__int__string__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__string__New_1, 0, true, Dictionary__int__string__typeof()),
        ::uNewFunction(".ctor", Dictionary__int__string__New_2, 0, true, Dictionary__int__string__typeof(), ::app::Uno::Collections::IDictionary__int__string__typeof()),
        ::uNewFunction("Remove", Dictionary__int__string__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__int__string__set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__int__string__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof(), ::app::Uno::String__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__int__string__GetEnumerator_boxed(Dictionary__int__string* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__int__string__typeof(), __this->GetEnumerator());
}

void Dictionary__int__string___ObjInit(Dictionary__int__string* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__string__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__int__string___ObjInit_1(Dictionary__int__string* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_string_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__int__string keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_int_string_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__int__string__Add(Dictionary__int__string* __this, int key, ::uString* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__string__Clear(Dictionary__int__string* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__int__string__ContainsKey(Dictionary__int__string* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__int__string__get_Count(Dictionary__int__string* __this)
{
    return __this->_count;
}

::uString* Dictionary__int__string__get_Item(Dictionary__int__string* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__int__string* Dictionary__int__string__get_Keys(Dictionary__int__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__int__string__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__int__string* Dictionary__int__string__get_Values(Dictionary__int__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__int__string__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__int__string Dictionary__int__string__GetEnumerator(Dictionary__int__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__int__string__New_1(NULL, __this);
}

Dictionary__int__string* Dictionary__int__string__New_1(::uStatic* __this)
{
    Dictionary__int__string* inst = (Dictionary__int__string*)::uAllocObject(sizeof(Dictionary__int__string), Dictionary__int__string__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__int__string* Dictionary__int__string__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__int__string* inst = (Dictionary__int__string*)::uAllocObject(sizeof(Dictionary__int__string), Dictionary__int__string__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__int__string__Rehash(Dictionary__int__string* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__string__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(i).Value);
        }
    }
}

bool Dictionary__int__string__Remove(Dictionary__int__string* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__string__set_Item(Dictionary__int__string* __this, int key, ::uString* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__int__string__TryGetValue(Dictionary__int__string* __this, int key, ::uString** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__string>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__string__Uno_Collections_ICollection_Add(Dictionary__int__string* __this, ::app::Uno::Collections::KeyValuePair__int__string item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__int__string__Uno_Collections_ICollection_Contains(Dictionary__int__string* __this, ::app::Uno::Collections::KeyValuePair__int__string item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__int__string__Uno_Collections_ICollection_Remove(Dictionary__int__string* __this, ::app::Uno::Collections::KeyValuePair__int__string item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___uType* Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof()
{
    static ::uStaticStrong<Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___uType*)::uAllocClassType(sizeof(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___uType), "Uno.Collections.Dictionary<int,Uno.Collections.IList<Fuse.Input.Capturer>>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof(), offsetof(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_Uno_Collections_IList_Fuse_Input_Capturer____typeof(), offsetof(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___Add, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::IList__Fuse_Input_Capturer__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Count", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___get_Item, 0, false, ::app::Uno::Collections::IList__Fuse_Input_Capturer__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Keys", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof()),
        ::uNewFunction("get_Values", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof()),
        ::uNewFunction(".ctor", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___New_1, 0, true, Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof()),
        ::uNewFunction(".ctor", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___New_2, 0, true, Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof(), ::app::Uno::Collections::IDictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof()),
        ::uNewFunction("Remove", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::IList__Fuse_Input_Capturer__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof(), ::app::Uno::Collections::IList__Fuse_Input_Capturer__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___GetEnumerator_boxed(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof(), __this->GetEnumerator());
}

void Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer____ObjInit(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer____ObjInit_1(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_Uno_Collections_IList_Fuse_Input_Capturer__::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__int__Uno_Collections_IList_Fuse_Input_Capturer_ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_int_Uno_Collections_IList_Fuse_Input_Capturer__::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___Add(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this, int key, ::uObject* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___Clear(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___ContainsKey(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___get_Count(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this)
{
    return __this->_count;
}

::uObject* Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___get_Item(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__int__Uno_Collections_IList_Fuse_Input_Capturer_* Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___get_Keys(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__int__Uno_Collections_IList_Fuse_Input_Capturer___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__int__Uno_Collections_IList_Fuse_Input_Capturer_* Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___get_Values(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__int__Uno_Collections_IList_Fuse_Input_Capturer___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__int__Uno_Collections_IList_Fuse_Input_Capturer_ Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___GetEnumerator(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__int__Uno_Collections_IList_Fuse_Input_Capturer___New_1(NULL, __this);
}

Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___New_1(::uStatic* __this)
{
    Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* inst = (Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_*)::uAllocObject(sizeof(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_), Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* inst = (Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_*)::uAllocObject(sizeof(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_), Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___Rehash(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer___typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(i).Value);
        }
    }
}

bool Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___Remove(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___set_Item(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this, int key, ::uObject* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___TryGetValue(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this, int key, ::uObject** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_IList_Fuse_Input_Capturer_>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___Uno_Collections_ICollection_Add(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this, ::app::Uno::Collections::KeyValuePair__int__Uno_Collections_IList_Fuse_Input_Capturer_ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___Uno_Collections_ICollection_Contains(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this, ::app::Uno::Collections::KeyValuePair__int__Uno_Collections_IList_Fuse_Input_Capturer_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer___Uno_Collections_ICollection_Remove(Dictionary__int__Uno_Collections_IList_Fuse_Input_Capturer_* __this, ::app::Uno::Collections::KeyValuePair__int__Uno_Collections_IList_Fuse_Input_Capturer_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___uType* Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof()
{
    static ::uStaticStrong<Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___uType*)::uAllocClassType(sizeof(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___uType), "Uno.Collections.Dictionary<int,Uno.Collections.List<Fuse.Input.Pointer_PELHolder>>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof(), offsetof(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_Uno_Collections_List_Fuse_Input_Pointer_PELHolder____typeof(), offsetof(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___Add, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::List__Fuse_Input_Pointer_PELHolder__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Count", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___get_Item, 0, false, ::app::Uno::Collections::List__Fuse_Input_Pointer_PELHolder__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Keys", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof()),
        ::uNewFunction("get_Values", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof()),
        ::uNewFunction(".ctor", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___New_1, 0, true, Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof()),
        ::uNewFunction(".ctor", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___New_2, 0, true, Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof(), ::app::Uno::Collections::IDictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof()),
        ::uNewFunction("Remove", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___set_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::Collections::List__Fuse_Input_Pointer_PELHolder__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Int__typeof(), ::app::Uno::Collections::List__Fuse_Input_Pointer_PELHolder__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___GetEnumerator_boxed(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof(), __this->GetEnumerator());
}

void Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder____ObjInit(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder____ObjInit_1(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_int_Uno_Collections_List_Fuse_Input_Pointer_PELHolder__::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_int_Uno_Collections_List_Fuse_Input_Pointer_PELHolder__::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___Add(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this, int key, ::app::Uno::Collections::List__Fuse_Input_Pointer_PELHolder* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___Clear(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(i).Key = 0;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___ContainsKey(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___get_Count(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this)
{
    return __this->_count;
}

::app::Uno::Collections::List__Fuse_Input_Pointer_PELHolder* Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___get_Item(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___get_Keys(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___get_Values(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_ Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___GetEnumerator(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___New_1(NULL, __this);
}

Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___New_1(::uStatic* __this)
{
    Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* inst = (Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_*)::uAllocObject(sizeof(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_), Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* inst = (Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_*)::uAllocObject(sizeof(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_), Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___Rehash(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(i).Value);
        }
    }
}

bool Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___Remove(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this, int key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Key = 0;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___set_Item(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this, int key, ::app::Uno::Collections::List__Fuse_Input_Pointer_PELHolder* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___TryGetValue(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this, int key, ::app::Uno::Collections::List__Fuse_Input_Pointer_PELHolder** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox< int>(::app::Uno::Int__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__int(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___Uno_Collections_ICollection_Add(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this, ::app::Uno::Collections::KeyValuePair__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___Uno_Collections_ICollection_Contains(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this, ::app::Uno::Collections::KeyValuePair__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder___Uno_Collections_ICollection_Remove(Dictionary__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_* __this, ::app::Uno::Collections::KeyValuePair__int__Uno_Collections_List_Fuse_Input_Pointer_PELHolder_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__object__object__uType* Dictionary__object__object__typeof()
{
    static ::uStaticStrong<Dictionary__object__object__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__object__object__uType*)::uAllocClassType(sizeof(Dictionary__object__object__uType), "Uno.Collections.Dictionary<object,object>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__object__object__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__object__object__typeof(), offsetof(Dictionary__object__object__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_object_object___typeof(), offsetof(Dictionary__object__object__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__object__object, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__object__object, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__object__object__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__object__object, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__object__object, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__object__object, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__object__object__Add, 0, false, ::uObject__typeof(), ::uObject__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__object__object__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__object__object__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::uObject__typeof()),
        ::uNewFunction("get_Count", Dictionary__object__object__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__object__object__get_Item, 0, false, ::uObject__typeof(), ::uObject__typeof()),
        ::uNewFunction("get_Keys", Dictionary__object__object__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__object__object__typeof()),
        ::uNewFunction("get_Values", Dictionary__object__object__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__object__object__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__object__object__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__object__object__typeof()),
        ::uNewFunction(".ctor", Dictionary__object__object__New_1, 0, true, Dictionary__object__object__typeof()),
        ::uNewFunction(".ctor", Dictionary__object__object__New_2, 0, true, Dictionary__object__object__typeof(), ::app::Uno::Collections::IDictionary__object__object__typeof()),
        ::uNewFunction("Remove", Dictionary__object__object__Remove, 0, false, ::app::Uno::Bool__typeof(), ::uObject__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__object__object__set_Item, 0, false, ::uObject__typeof(), ::uObject__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__object__object__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::uObject__typeof(), ::uObject__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__object__object__GetEnumerator_boxed(Dictionary__object__object* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__object__object__typeof(), __this->GetEnumerator());
}

void Dictionary__object__object___ObjInit(Dictionary__object__object* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__object__object__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__object__object___ObjInit_1(Dictionary__object__object* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_object_object_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__object__object keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_object_object_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__object__object__Add(Dictionary__object__object* __this, ::uObject* key, ::uObject* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__object__object__Clear(Dictionary__object__object* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__object__object__ContainsKey(Dictionary__object__object* __this, ::uObject* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__object__object__get_Count(Dictionary__object__object* __this)
{
    return __this->_count;
}

::uObject* Dictionary__object__object__get_Item(Dictionary__object__object* __this, ::uObject* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__object__object* Dictionary__object__object__get_Keys(Dictionary__object__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__object__object__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__object__object* Dictionary__object__object__get_Values(Dictionary__object__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__object__object__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__object__object Dictionary__object__object__GetEnumerator(Dictionary__object__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__object__object__New_1(NULL, __this);
}

Dictionary__object__object* Dictionary__object__object__New_1(::uStatic* __this)
{
    Dictionary__object__object* inst = (Dictionary__object__object*)::uAllocObject(sizeof(Dictionary__object__object), Dictionary__object__object__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__object__object* Dictionary__object__object__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__object__object* inst = (Dictionary__object__object*)::uAllocObject(sizeof(Dictionary__object__object), Dictionary__object__object__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__object__object__Rehash(Dictionary__object__object* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__object__object__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(i).Value);
        }
    }
}

bool Dictionary__object__object__Remove(Dictionary__object__object* __this, ::uObject* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__object__object__set_Item(Dictionary__object__object* __this, ::uObject* key, ::uObject* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__object__object__TryGetValue(Dictionary__object__object* __this, ::uObject* key, ::uObject** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__object>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__object__object__Uno_Collections_ICollection_Add(Dictionary__object__object* __this, ::app::Uno::Collections::KeyValuePair__object__object item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__object__object__Uno_Collections_ICollection_Contains(Dictionary__object__object* __this, ::app::Uno::Collections::KeyValuePair__object__object item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__object__object__Uno_Collections_ICollection_Remove(Dictionary__object__object* __this, ::app::Uno::Collections::KeyValuePair__object__object item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__object__string__uType* Dictionary__object__string__typeof()
{
    static ::uStaticStrong<Dictionary__object__string__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__object__string__uType*)::uAllocClassType(sizeof(Dictionary__object__string__uType), "Uno.Collections.Dictionary<object,string>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__object__string__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__object__string__typeof(), offsetof(Dictionary__object__string__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_object_string___typeof(), offsetof(Dictionary__object__string__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__object__string, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__object__string, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__object__string__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__object__string, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__object__string, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__object__string, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__object__string__Add, 0, false, ::uObject__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__object__string__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__object__string__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::uObject__typeof()),
        ::uNewFunction("get_Count", Dictionary__object__string__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__object__string__get_Item, 0, false, ::app::Uno::String__typeof(), ::uObject__typeof()),
        ::uNewFunction("get_Keys", Dictionary__object__string__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__object__string__typeof()),
        ::uNewFunction("get_Values", Dictionary__object__string__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__object__string__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__object__string__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__object__string__typeof()),
        ::uNewFunction(".ctor", Dictionary__object__string__New_1, 0, true, Dictionary__object__string__typeof()),
        ::uNewFunction(".ctor", Dictionary__object__string__New_2, 0, true, Dictionary__object__string__typeof(), ::app::Uno::Collections::IDictionary__object__string__typeof()),
        ::uNewFunction("Remove", Dictionary__object__string__Remove, 0, false, ::app::Uno::Bool__typeof(), ::uObject__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__object__string__set_Item, 0, false, ::uObject__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__object__string__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::uObject__typeof(), ::app::Uno::String__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__object__string__GetEnumerator_boxed(Dictionary__object__string* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__object__string__typeof(), __this->GetEnumerator());
}

void Dictionary__object__string___ObjInit(Dictionary__object__string* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__object__string__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__object__string___ObjInit_1(Dictionary__object__string* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_object_string_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__object__string keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_object_string_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__object__string__Add(Dictionary__object__string* __this, ::uObject* key, ::uString* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__object__string__Clear(Dictionary__object__string* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__object__string__ContainsKey(Dictionary__object__string* __this, ::uObject* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__object__string__get_Count(Dictionary__object__string* __this)
{
    return __this->_count;
}

::uString* Dictionary__object__string__get_Item(Dictionary__object__string* __this, ::uObject* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__object__string* Dictionary__object__string__get_Keys(Dictionary__object__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__object__string__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__object__string* Dictionary__object__string__get_Values(Dictionary__object__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__object__string__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__object__string Dictionary__object__string__GetEnumerator(Dictionary__object__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__object__string__New_1(NULL, __this);
}

Dictionary__object__string* Dictionary__object__string__New_1(::uStatic* __this)
{
    Dictionary__object__string* inst = (Dictionary__object__string*)::uAllocObject(sizeof(Dictionary__object__string), Dictionary__object__string__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__object__string* Dictionary__object__string__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__object__string* inst = (Dictionary__object__string*)::uAllocObject(sizeof(Dictionary__object__string), Dictionary__object__string__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__object__string__Rehash(Dictionary__object__string* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__object__string__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(i).Value);
        }
    }
}

bool Dictionary__object__string__Remove(Dictionary__object__string* __this, ::uObject* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__object__string__set_Item(Dictionary__object__string* __this, ::uObject* key, ::uString* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__object__string__TryGetValue(Dictionary__object__string* __this, ::uObject* key, ::uString** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uObject*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__object(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__object__string>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__object__string__Uno_Collections_ICollection_Add(Dictionary__object__string* __this, ::app::Uno::Collections::KeyValuePair__object__string item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__object__string__Uno_Collections_ICollection_Contains(Dictionary__object__string* __this, ::app::Uno::Collections::KeyValuePair__object__string item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__object__string__Uno_Collections_ICollection_Remove(Dictionary__object__string* __this, ::app::Uno::Collections::KeyValuePair__object__string item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__uType* Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof()
{
    static ::uStaticStrong<Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__uType*)::uAllocClassType(sizeof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__uType), "Uno.Collections.Dictionary<Outracks.Simulator.Bytecode.TypeName,Outracks.Simulator.Bytecode.TypeName>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof(), offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Outracks_Simulator_Bytecode_TypeName_Outracks_Simulator_Bytecode_TypeName___typeof(), offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__Add, 0, false, ::app::Outracks::Simulator::Bytecode::TypeName__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunction("get_Count", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__get_Item, 0, false, ::app::Outracks::Simulator::Bytecode::TypeName__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction("get_Values", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction(".ctor", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__New_1, 0, true, Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction(".ctor", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__New_2, 0, true, Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof(), ::app::Uno::Collections::IDictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof()),
        ::uNewFunction("Remove", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__set_Item, 0, false, ::app::Outracks::Simulator::Bytecode::TypeName__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__GetEnumerator_boxed(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof(), __this->GetEnumerator());
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName___ObjInit(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName___ObjInit_1(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Outracks_Simulator_Bytecode_TypeName_Outracks_Simulator_Bytecode_TypeName_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Outracks_Simulator_Bytecode_TypeName_Outracks_Simulator_Bytecode_TypeName_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__Add(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key, ::app::Outracks::Simulator::Bytecode::TypeName* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__Clear(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__ContainsKey(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__get_Count(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return __this->_count;
}

::app::Outracks::Simulator::Bytecode::TypeName* Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__get_Item(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__get_Keys(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__get_Values(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__GetEnumerator(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__New_1(NULL, __this);
}

Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__New_1(::uStatic* __this)
{
    Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* inst = (Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName*)::uAllocObject(sizeof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName), Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* inst = (Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName*)::uAllocObject(sizeof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName), Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__Rehash(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(i).Value);
        }
    }
}

bool Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__Remove(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__set_Item(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key, ::app::Outracks::Simulator::Bytecode::TypeName* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__TryGetValue(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key, ::app::Outracks::Simulator::Bytecode::TypeName** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__Uno_Collections_ICollection_Add(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__Uno_Collections_ICollection_Contains(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName__Uno_Collections_ICollection_Remove(Dictionary__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName* __this, ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_TypeName__Outracks_Simulator_Bytecode_TypeName item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__uType* Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()
{
    static ::uStaticStrong<Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__uType*)::uAllocClassType(sizeof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__uType), "Uno.Collections.Dictionary<Outracks.Simulator.Bytecode.TypeName,Uno.Type>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof(), offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Outracks_Simulator_Bytecode_TypeName_Uno_Type___typeof(), offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__Add, 0, false, ::app::Outracks::Simulator::Bytecode::TypeName__typeof(), ::uType__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunction("get_Count", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__get_Item, 0, false, ::uType__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunction("get_Values", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunction(".ctor", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__New_1, 0, true, Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunction(".ctor", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__New_2, 0, true, Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof(), ::app::Uno::Collections::IDictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof()),
        ::uNewFunction("Remove", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__set_Item, 0, false, ::app::Outracks::Simulator::Bytecode::TypeName__typeof(), ::uType__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::TypeName__typeof(), ::uType__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__GetEnumerator_boxed(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof(), __this->GetEnumerator());
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type___ObjInit(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type___ObjInit_1(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Outracks_Simulator_Bytecode_TypeName_Uno_Type_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_TypeName__Uno_Type keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Outracks_Simulator_Bytecode_TypeName_Uno_Type_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__Add(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key, ::uType* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__Clear(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__ContainsKey(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__get_Count(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this)
{
    return __this->_count;
}

::uType* Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__get_Item(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Outracks_Simulator_Bytecode_TypeName__Uno_Type* Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__get_Keys(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Outracks_Simulator_Bytecode_TypeName__Uno_Type__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Outracks_Simulator_Bytecode_TypeName__Uno_Type* Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__get_Values(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Outracks_Simulator_Bytecode_TypeName__Uno_Type__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_TypeName__Uno_Type Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__GetEnumerator(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_TypeName__Uno_Type__New_1(NULL, __this);
}

Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__New_1(::uStatic* __this)
{
    Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* inst = (Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*)::uAllocObject(sizeof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type), Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* inst = (Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type*)::uAllocObject(sizeof(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type), Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__Rehash(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(i).Value);
        }
    }
}

bool Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__Remove(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__set_Item(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key, ::uType* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__TryGetValue(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this, ::app::Outracks::Simulator::Bytecode::TypeName* key, ::uType** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::TypeName*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_TypeName(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_TypeName__Uno_Type>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__Uno_Collections_ICollection_Add(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this, ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_TypeName__Uno_Type item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__Uno_Collections_ICollection_Contains(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this, ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_TypeName__Uno_Type item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type__Uno_Collections_ICollection_Remove(Dictionary__Outracks_Simulator_Bytecode_TypeName__Uno_Type* __this, ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_TypeName__Uno_Type item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Outracks_Simulator_Bytecode_Variable__object__uType* Dictionary__Outracks_Simulator_Bytecode_Variable__object__typeof()
{
    static ::uStaticStrong<Dictionary__Outracks_Simulator_Bytecode_Variable__object__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Outracks_Simulator_Bytecode_Variable__object__uType*)::uAllocClassType(sizeof(Dictionary__Outracks_Simulator_Bytecode_Variable__object__uType), "Uno.Collections.Dictionary<Outracks.Simulator.Bytecode.Variable,object>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Outracks_Simulator_Bytecode_Variable__object__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Outracks_Simulator_Bytecode_Variable__object__typeof(), offsetof(Dictionary__Outracks_Simulator_Bytecode_Variable__object__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Outracks_Simulator_Bytecode_Variable_object___typeof(), offsetof(Dictionary__Outracks_Simulator_Bytecode_Variable__object__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Outracks_Simulator_Bytecode_Variable__object, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_Variable__object, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_Variable__object, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_Variable__object, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Outracks_Simulator_Bytecode_Variable__object, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Outracks_Simulator_Bytecode_Variable__object__Add, 0, false, ::app::Outracks::Simulator::Bytecode::Variable__typeof(), ::uObject__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Outracks_Simulator_Bytecode_Variable__object__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Outracks_Simulator_Bytecode_Variable__object__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::Variable__typeof()),
        ::uNewFunction("get_Count", Dictionary__Outracks_Simulator_Bytecode_Variable__object__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Outracks_Simulator_Bytecode_Variable__object__get_Item, 0, false, ::uObject__typeof(), ::app::Outracks::Simulator::Bytecode::Variable__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Outracks_Simulator_Bytecode_Variable__object__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Outracks_Simulator_Bytecode_Variable__object__typeof()),
        ::uNewFunction("get_Values", Dictionary__Outracks_Simulator_Bytecode_Variable__object__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Outracks_Simulator_Bytecode_Variable__object__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Outracks_Simulator_Bytecode_Variable__object__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_Variable__object__typeof()),
        ::uNewFunction(".ctor", Dictionary__Outracks_Simulator_Bytecode_Variable__object__New_1, 0, true, Dictionary__Outracks_Simulator_Bytecode_Variable__object__typeof()),
        ::uNewFunction(".ctor", Dictionary__Outracks_Simulator_Bytecode_Variable__object__New_2, 0, true, Dictionary__Outracks_Simulator_Bytecode_Variable__object__typeof(), ::app::Uno::Collections::IDictionary__Outracks_Simulator_Bytecode_Variable__object__typeof()),
        ::uNewFunction("Remove", Dictionary__Outracks_Simulator_Bytecode_Variable__object__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::Variable__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Outracks_Simulator_Bytecode_Variable__object__set_Item, 0, false, ::app::Outracks::Simulator::Bytecode::Variable__typeof(), ::uObject__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Outracks_Simulator_Bytecode_Variable__object__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Outracks::Simulator::Bytecode::Variable__typeof(), ::uObject__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Outracks_Simulator_Bytecode_Variable__object__GetEnumerator_boxed(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_Variable__object__typeof(), __this->GetEnumerator());
}

void Dictionary__Outracks_Simulator_Bytecode_Variable__object___ObjInit(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Outracks_Simulator_Bytecode_Variable__object___ObjInit_1(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Outracks_Simulator_Bytecode_Variable_object_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_Variable__object keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Outracks_Simulator_Bytecode_Variable_object_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Outracks_Simulator_Bytecode_Variable__object__Add(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this, ::app::Outracks::Simulator::Bytecode::Variable* key, ::uObject* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::Variable*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_Variable(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Outracks_Simulator_Bytecode_Variable__object__Clear(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Outracks_Simulator_Bytecode_Variable__object__ContainsKey(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this, ::app::Outracks::Simulator::Bytecode::Variable* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::Variable*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_Variable(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Outracks_Simulator_Bytecode_Variable__object__get_Count(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this)
{
    return __this->_count;
}

::uObject* Dictionary__Outracks_Simulator_Bytecode_Variable__object__get_Item(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this, ::app::Outracks::Simulator::Bytecode::Variable* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::Variable*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_Variable(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Outracks_Simulator_Bytecode_Variable__object* Dictionary__Outracks_Simulator_Bytecode_Variable__object__get_Keys(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Outracks_Simulator_Bytecode_Variable__object__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Outracks_Simulator_Bytecode_Variable__object* Dictionary__Outracks_Simulator_Bytecode_Variable__object__get_Values(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Outracks_Simulator_Bytecode_Variable__object__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_Variable__object Dictionary__Outracks_Simulator_Bytecode_Variable__object__GetEnumerator(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Outracks_Simulator_Bytecode_Variable__object__New_1(NULL, __this);
}

Dictionary__Outracks_Simulator_Bytecode_Variable__object* Dictionary__Outracks_Simulator_Bytecode_Variable__object__New_1(::uStatic* __this)
{
    Dictionary__Outracks_Simulator_Bytecode_Variable__object* inst = (Dictionary__Outracks_Simulator_Bytecode_Variable__object*)::uAllocObject(sizeof(Dictionary__Outracks_Simulator_Bytecode_Variable__object), Dictionary__Outracks_Simulator_Bytecode_Variable__object__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Outracks_Simulator_Bytecode_Variable__object* Dictionary__Outracks_Simulator_Bytecode_Variable__object__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Outracks_Simulator_Bytecode_Variable__object* inst = (Dictionary__Outracks_Simulator_Bytecode_Variable__object*)::uAllocObject(sizeof(Dictionary__Outracks_Simulator_Bytecode_Variable__object), Dictionary__Outracks_Simulator_Bytecode_Variable__object__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Outracks_Simulator_Bytecode_Variable__object__Rehash(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(i).Value);
        }
    }
}

bool Dictionary__Outracks_Simulator_Bytecode_Variable__object__Remove(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this, ::app::Outracks::Simulator::Bytecode::Variable* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::Variable*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_Variable(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Outracks_Simulator_Bytecode_Variable__object__set_Item(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this, ::app::Outracks::Simulator::Bytecode::Variable* key, ::uObject* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::Variable*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_Variable(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Outracks_Simulator_Bytecode_Variable__object__TryGetValue(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this, ::app::Outracks::Simulator::Bytecode::Variable* key, ::uObject** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Outracks::Simulator::Bytecode::Variable*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Outracks_Simulator_Bytecode_Variable(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Outracks_Simulator_Bytecode_Variable__object>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Outracks_Simulator_Bytecode_Variable__object__Uno_Collections_ICollection_Add(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this, ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_Variable__object item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Outracks_Simulator_Bytecode_Variable__object__Uno_Collections_ICollection_Contains(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this, ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_Variable__object item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Outracks_Simulator_Bytecode_Variable__object__Uno_Collections_ICollection_Remove(Dictionary__Outracks_Simulator_Bytecode_Variable__object* __this, ::app::Uno::Collections::KeyValuePair__Outracks_Simulator_Bytecode_Variable__object item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Android_android_graphics_Bitmap__uType* Dictionary__string__Android_android_graphics_Bitmap__typeof()
{
    static ::uStaticStrong<Dictionary__string__Android_android_graphics_Bitmap__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Android_android_graphics_Bitmap__uType*)::uAllocClassType(sizeof(Dictionary__string__Android_android_graphics_Bitmap__uType), "Uno.Collections.Dictionary<string,Android.android.graphics.Bitmap>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Android_android_graphics_Bitmap__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Android_android_graphics_Bitmap__typeof(), offsetof(Dictionary__string__Android_android_graphics_Bitmap__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Android_android_graphics_Bitmap___typeof(), offsetof(Dictionary__string__Android_android_graphics_Bitmap__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Android_android_graphics_Bitmap, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Android_android_graphics_Bitmap, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Android_android_graphics_Bitmap, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Android_android_graphics_Bitmap, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Android_android_graphics_Bitmap, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Android_android_graphics_Bitmap__Add, 0, false, ::app::Uno::String__typeof(), ::app::Android::android::graphics::Bitmap__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Android_android_graphics_Bitmap__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Android_android_graphics_Bitmap__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Android_android_graphics_Bitmap__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Android_android_graphics_Bitmap__get_Item, 0, false, ::app::Android::android::graphics::Bitmap__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Android_android_graphics_Bitmap__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Android_android_graphics_Bitmap__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Android_android_graphics_Bitmap__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Android_android_graphics_Bitmap__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Android_android_graphics_Bitmap__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Android_android_graphics_Bitmap__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Android_android_graphics_Bitmap__New_1, 0, true, Dictionary__string__Android_android_graphics_Bitmap__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Android_android_graphics_Bitmap__New_2, 0, true, Dictionary__string__Android_android_graphics_Bitmap__typeof(), ::app::Uno::Collections::IDictionary__string__Android_android_graphics_Bitmap__typeof()),
        ::uNewFunction("Remove", Dictionary__string__Android_android_graphics_Bitmap__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Android_android_graphics_Bitmap__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Android::android::graphics::Bitmap__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Android_android_graphics_Bitmap__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Android::android::graphics::Bitmap__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Android_android_graphics_Bitmap__GetEnumerator_boxed(Dictionary__string__Android_android_graphics_Bitmap* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Android_android_graphics_Bitmap__typeof(), __this->GetEnumerator());
}

void Dictionary__string__Android_android_graphics_Bitmap___ObjInit(Dictionary__string__Android_android_graphics_Bitmap* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Android_android_graphics_Bitmap___ObjInit_1(Dictionary__string__Android_android_graphics_Bitmap* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Android_android_graphics_Bitmap_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Android_android_graphics_Bitmap keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Android_android_graphics_Bitmap_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Android_android_graphics_Bitmap__Add(Dictionary__string__Android_android_graphics_Bitmap* __this, ::uString* key, ::app::Android::android::graphics::Bitmap* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Android_android_graphics_Bitmap__Clear(Dictionary__string__Android_android_graphics_Bitmap* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Android_android_graphics_Bitmap__ContainsKey(Dictionary__string__Android_android_graphics_Bitmap* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Android_android_graphics_Bitmap__get_Count(Dictionary__string__Android_android_graphics_Bitmap* __this)
{
    return __this->_count;
}

::app::Android::android::graphics::Bitmap* Dictionary__string__Android_android_graphics_Bitmap__get_Item(Dictionary__string__Android_android_graphics_Bitmap* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Android_android_graphics_Bitmap* Dictionary__string__Android_android_graphics_Bitmap__get_Keys(Dictionary__string__Android_android_graphics_Bitmap* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Android_android_graphics_Bitmap__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Android_android_graphics_Bitmap* Dictionary__string__Android_android_graphics_Bitmap__get_Values(Dictionary__string__Android_android_graphics_Bitmap* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Android_android_graphics_Bitmap__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Android_android_graphics_Bitmap Dictionary__string__Android_android_graphics_Bitmap__GetEnumerator(Dictionary__string__Android_android_graphics_Bitmap* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Android_android_graphics_Bitmap__New_1(NULL, __this);
}

Dictionary__string__Android_android_graphics_Bitmap* Dictionary__string__Android_android_graphics_Bitmap__New_1(::uStatic* __this)
{
    Dictionary__string__Android_android_graphics_Bitmap* inst = (Dictionary__string__Android_android_graphics_Bitmap*)::uAllocObject(sizeof(Dictionary__string__Android_android_graphics_Bitmap), Dictionary__string__Android_android_graphics_Bitmap__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Android_android_graphics_Bitmap* Dictionary__string__Android_android_graphics_Bitmap__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Android_android_graphics_Bitmap* inst = (Dictionary__string__Android_android_graphics_Bitmap*)::uAllocObject(sizeof(Dictionary__string__Android_android_graphics_Bitmap), Dictionary__string__Android_android_graphics_Bitmap__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Android_android_graphics_Bitmap__Rehash(Dictionary__string__Android_android_graphics_Bitmap* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(i).Value);
        }
    }
}

bool Dictionary__string__Android_android_graphics_Bitmap__Remove(Dictionary__string__Android_android_graphics_Bitmap* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Android_android_graphics_Bitmap__set_Item(Dictionary__string__Android_android_graphics_Bitmap* __this, ::uString* key, ::app::Android::android::graphics::Bitmap* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Android_android_graphics_Bitmap__TryGetValue(Dictionary__string__Android_android_graphics_Bitmap* __this, ::uString* key, ::app::Android::android::graphics::Bitmap** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Bitmap>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Android_android_graphics_Bitmap__Uno_Collections_ICollection_Add(Dictionary__string__Android_android_graphics_Bitmap* __this, ::app::Uno::Collections::KeyValuePair__string__Android_android_graphics_Bitmap item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Android_android_graphics_Bitmap__Uno_Collections_ICollection_Contains(Dictionary__string__Android_android_graphics_Bitmap* __this, ::app::Uno::Collections::KeyValuePair__string__Android_android_graphics_Bitmap item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Android_android_graphics_Bitmap__Uno_Collections_ICollection_Remove(Dictionary__string__Android_android_graphics_Bitmap* __this, ::app::Uno::Collections::KeyValuePair__string__Android_android_graphics_Bitmap item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Android_android_graphics_Typeface__uType* Dictionary__string__Android_android_graphics_Typeface__typeof()
{
    static ::uStaticStrong<Dictionary__string__Android_android_graphics_Typeface__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Android_android_graphics_Typeface__uType*)::uAllocClassType(sizeof(Dictionary__string__Android_android_graphics_Typeface__uType), "Uno.Collections.Dictionary<string,Android.android.graphics.Typeface>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Android_android_graphics_Typeface__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Android_android_graphics_Typeface__typeof(), offsetof(Dictionary__string__Android_android_graphics_Typeface__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Android_android_graphics_Typeface___typeof(), offsetof(Dictionary__string__Android_android_graphics_Typeface__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Android_android_graphics_Typeface, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Android_android_graphics_Typeface, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Android_android_graphics_Typeface, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Android_android_graphics_Typeface, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Android_android_graphics_Typeface, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Android_android_graphics_Typeface__Add, 0, false, ::app::Uno::String__typeof(), ::app::Android::android::graphics::Typeface__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Android_android_graphics_Typeface__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Android_android_graphics_Typeface__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Android_android_graphics_Typeface__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Android_android_graphics_Typeface__get_Item, 0, false, ::app::Android::android::graphics::Typeface__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Android_android_graphics_Typeface__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Android_android_graphics_Typeface__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Android_android_graphics_Typeface__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Android_android_graphics_Typeface__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Android_android_graphics_Typeface__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Android_android_graphics_Typeface__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Android_android_graphics_Typeface__New_1, 0, true, Dictionary__string__Android_android_graphics_Typeface__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Android_android_graphics_Typeface__New_2, 0, true, Dictionary__string__Android_android_graphics_Typeface__typeof(), ::app::Uno::Collections::IDictionary__string__Android_android_graphics_Typeface__typeof()),
        ::uNewFunction("Remove", Dictionary__string__Android_android_graphics_Typeface__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Android_android_graphics_Typeface__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Android::android::graphics::Typeface__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Android_android_graphics_Typeface__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Android::android::graphics::Typeface__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Android_android_graphics_Typeface__GetEnumerator_boxed(Dictionary__string__Android_android_graphics_Typeface* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Android_android_graphics_Typeface__typeof(), __this->GetEnumerator());
}

void Dictionary__string__Android_android_graphics_Typeface___ObjInit(Dictionary__string__Android_android_graphics_Typeface* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Android_android_graphics_Typeface___ObjInit_1(Dictionary__string__Android_android_graphics_Typeface* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Android_android_graphics_Typeface_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Android_android_graphics_Typeface keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Android_android_graphics_Typeface_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Android_android_graphics_Typeface__Add(Dictionary__string__Android_android_graphics_Typeface* __this, ::uString* key, ::app::Android::android::graphics::Typeface* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Android_android_graphics_Typeface__Clear(Dictionary__string__Android_android_graphics_Typeface* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Android_android_graphics_Typeface__ContainsKey(Dictionary__string__Android_android_graphics_Typeface* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Android_android_graphics_Typeface__get_Count(Dictionary__string__Android_android_graphics_Typeface* __this)
{
    return __this->_count;
}

::app::Android::android::graphics::Typeface* Dictionary__string__Android_android_graphics_Typeface__get_Item(Dictionary__string__Android_android_graphics_Typeface* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Android_android_graphics_Typeface* Dictionary__string__Android_android_graphics_Typeface__get_Keys(Dictionary__string__Android_android_graphics_Typeface* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Android_android_graphics_Typeface__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Android_android_graphics_Typeface* Dictionary__string__Android_android_graphics_Typeface__get_Values(Dictionary__string__Android_android_graphics_Typeface* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Android_android_graphics_Typeface__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Android_android_graphics_Typeface Dictionary__string__Android_android_graphics_Typeface__GetEnumerator(Dictionary__string__Android_android_graphics_Typeface* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Android_android_graphics_Typeface__New_1(NULL, __this);
}

Dictionary__string__Android_android_graphics_Typeface* Dictionary__string__Android_android_graphics_Typeface__New_1(::uStatic* __this)
{
    Dictionary__string__Android_android_graphics_Typeface* inst = (Dictionary__string__Android_android_graphics_Typeface*)::uAllocObject(sizeof(Dictionary__string__Android_android_graphics_Typeface), Dictionary__string__Android_android_graphics_Typeface__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Android_android_graphics_Typeface* Dictionary__string__Android_android_graphics_Typeface__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Android_android_graphics_Typeface* inst = (Dictionary__string__Android_android_graphics_Typeface*)::uAllocObject(sizeof(Dictionary__string__Android_android_graphics_Typeface), Dictionary__string__Android_android_graphics_Typeface__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Android_android_graphics_Typeface__Rehash(Dictionary__string__Android_android_graphics_Typeface* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(i).Value);
        }
    }
}

bool Dictionary__string__Android_android_graphics_Typeface__Remove(Dictionary__string__Android_android_graphics_Typeface* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Android_android_graphics_Typeface__set_Item(Dictionary__string__Android_android_graphics_Typeface* __this, ::uString* key, ::app::Android::android::graphics::Typeface* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Android_android_graphics_Typeface__TryGetValue(Dictionary__string__Android_android_graphics_Typeface* __this, ::uString* key, ::app::Android::android::graphics::Typeface** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Android_android_graphics_Typeface>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Android_android_graphics_Typeface__Uno_Collections_ICollection_Add(Dictionary__string__Android_android_graphics_Typeface* __this, ::app::Uno::Collections::KeyValuePair__string__Android_android_graphics_Typeface item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Android_android_graphics_Typeface__Uno_Collections_ICollection_Contains(Dictionary__string__Android_android_graphics_Typeface* __this, ::app::Uno::Collections::KeyValuePair__string__Android_android_graphics_Typeface item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Android_android_graphics_Typeface__Uno_Collections_ICollection_Remove(Dictionary__string__Android_android_graphics_Typeface* __this, ::app::Uno::Collections::KeyValuePair__string__Android_android_graphics_Typeface item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__bool__uType* Dictionary__string__bool__typeof()
{
    static ::uStaticStrong<Dictionary__string__bool__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__bool__uType*)::uAllocClassType(sizeof(Dictionary__string__bool__uType), "Uno.Collections.Dictionary<string,bool>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__bool__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__bool__typeof(), offsetof(Dictionary__string__bool__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_bool___typeof(), offsetof(Dictionary__string__bool__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__bool, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__bool, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__bool__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__bool, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__bool, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__bool, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__bool__Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Bool__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__bool__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__bool__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__bool__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__bool__get_Item, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__bool__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__bool__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__bool__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__bool__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__bool__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__bool__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__bool__New_1, 0, true, Dictionary__string__bool__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__bool__New_2, 0, true, Dictionary__string__bool__typeof(), ::app::Uno::Collections::IDictionary__string__bool__typeof()),
        ::uNewFunction("Remove", Dictionary__string__bool__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__bool__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Bool__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__bool__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::Bool__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__bool__GetEnumerator_boxed(Dictionary__string__bool* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__bool__typeof(), __this->GetEnumerator());
}

void Dictionary__string__bool___ObjInit(Dictionary__string__bool* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__bool__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__bool___ObjInit_1(Dictionary__string__bool* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_bool_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__bool keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_bool_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__bool__Add(Dictionary__string__bool* __this, ::uString* key, bool value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__bool__Clear(Dictionary__string__bool* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__bool__ContainsKey(Dictionary__string__bool* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__bool__get_Count(Dictionary__string__bool* __this)
{
    return __this->_count;
}

bool Dictionary__string__bool__get_Item(Dictionary__string__bool* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__bool* Dictionary__string__bool__get_Keys(Dictionary__string__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__bool__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__bool* Dictionary__string__bool__get_Values(Dictionary__string__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__bool__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__bool Dictionary__string__bool__GetEnumerator(Dictionary__string__bool* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__bool__New_1(NULL, __this);
}

Dictionary__string__bool* Dictionary__string__bool__New_1(::uStatic* __this)
{
    Dictionary__string__bool* inst = (Dictionary__string__bool*)::uAllocObject(sizeof(Dictionary__string__bool), Dictionary__string__bool__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__bool* Dictionary__string__bool__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__bool* inst = (Dictionary__string__bool*)::uAllocObject(sizeof(Dictionary__string__bool), Dictionary__string__bool__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__bool__Rehash(Dictionary__string__bool* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__bool__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(i).Value);
        }
    }
}

bool Dictionary__string__bool__Remove(Dictionary__string__bool* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__bool__set_Item(Dictionary__string__bool* __this, ::uString* key, bool value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__bool__TryGetValue(Dictionary__string__bool* __this, ::uString* key, bool* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__bool>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__bool__Uno_Collections_ICollection_Add(Dictionary__string__bool* __this, ::app::Uno::Collections::KeyValuePair__string__bool item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__bool__Uno_Collections_ICollection_Contains(Dictionary__string__bool* __this, ::app::Uno::Collections::KeyValuePair__string__bool item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__bool__Uno_Collections_ICollection_Remove(Dictionary__string__bool* __this, ::app::Uno::Collections::KeyValuePair__string__bool item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Experimental_Cache_DiskCacheEntry__uType* Dictionary__string__Experimental_Cache_DiskCacheEntry__typeof()
{
    static ::uStaticStrong<Dictionary__string__Experimental_Cache_DiskCacheEntry__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Experimental_Cache_DiskCacheEntry__uType*)::uAllocClassType(sizeof(Dictionary__string__Experimental_Cache_DiskCacheEntry__uType), "Uno.Collections.Dictionary<string,Experimental.Cache.DiskCacheEntry>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Experimental_Cache_DiskCacheEntry__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Experimental_Cache_DiskCacheEntry__typeof(), offsetof(Dictionary__string__Experimental_Cache_DiskCacheEntry__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Experimental_Cache_DiskCacheEntry___typeof(), offsetof(Dictionary__string__Experimental_Cache_DiskCacheEntry__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Experimental_Cache_DiskCacheEntry, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Experimental_Cache_DiskCacheEntry, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Experimental_Cache_DiskCacheEntry, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Experimental_Cache_DiskCacheEntry, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Experimental_Cache_DiskCacheEntry, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Experimental_Cache_DiskCacheEntry__Add, 0, false, ::app::Uno::String__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Experimental_Cache_DiskCacheEntry__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Experimental_Cache_DiskCacheEntry__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Experimental_Cache_DiskCacheEntry__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Experimental_Cache_DiskCacheEntry__get_Item, 0, false, ::app::Experimental::Cache::DiskCacheEntry__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Experimental_Cache_DiskCacheEntry__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Experimental_Cache_DiskCacheEntry__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Experimental_Cache_DiskCacheEntry__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Experimental_Cache_DiskCacheEntry__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Experimental_Cache_DiskCacheEntry__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Experimental_Cache_DiskCacheEntry__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Experimental_Cache_DiskCacheEntry__New_1, 0, true, Dictionary__string__Experimental_Cache_DiskCacheEntry__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Experimental_Cache_DiskCacheEntry__New_2, 0, true, Dictionary__string__Experimental_Cache_DiskCacheEntry__typeof(), ::app::Uno::Collections::IDictionary__string__Experimental_Cache_DiskCacheEntry__typeof()),
        ::uNewFunction("Remove", Dictionary__string__Experimental_Cache_DiskCacheEntry__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Experimental_Cache_DiskCacheEntry__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Experimental_Cache_DiskCacheEntry__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Experimental::Cache::DiskCacheEntry__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Experimental_Cache_DiskCacheEntry__GetEnumerator_boxed(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Experimental_Cache_DiskCacheEntry__typeof(), __this->GetEnumerator());
}

void Dictionary__string__Experimental_Cache_DiskCacheEntry___ObjInit(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Experimental_Cache_DiskCacheEntry___ObjInit_1(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Experimental_Cache_DiskCacheEntry_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Experimental_Cache_DiskCacheEntry keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Experimental_Cache_DiskCacheEntry_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Experimental_Cache_DiskCacheEntry__Add(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this, ::uString* key, ::app::Experimental::Cache::DiskCacheEntry* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Experimental_Cache_DiskCacheEntry__Clear(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Experimental_Cache_DiskCacheEntry__ContainsKey(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Experimental_Cache_DiskCacheEntry__get_Count(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this)
{
    return __this->_count;
}

::app::Experimental::Cache::DiskCacheEntry* Dictionary__string__Experimental_Cache_DiskCacheEntry__get_Item(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Experimental_Cache_DiskCacheEntry* Dictionary__string__Experimental_Cache_DiskCacheEntry__get_Keys(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Experimental_Cache_DiskCacheEntry__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Experimental_Cache_DiskCacheEntry* Dictionary__string__Experimental_Cache_DiskCacheEntry__get_Values(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Experimental_Cache_DiskCacheEntry__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Experimental_Cache_DiskCacheEntry Dictionary__string__Experimental_Cache_DiskCacheEntry__GetEnumerator(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Experimental_Cache_DiskCacheEntry__New_1(NULL, __this);
}

Dictionary__string__Experimental_Cache_DiskCacheEntry* Dictionary__string__Experimental_Cache_DiskCacheEntry__New_1(::uStatic* __this)
{
    Dictionary__string__Experimental_Cache_DiskCacheEntry* inst = (Dictionary__string__Experimental_Cache_DiskCacheEntry*)::uAllocObject(sizeof(Dictionary__string__Experimental_Cache_DiskCacheEntry), Dictionary__string__Experimental_Cache_DiskCacheEntry__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Experimental_Cache_DiskCacheEntry* Dictionary__string__Experimental_Cache_DiskCacheEntry__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Experimental_Cache_DiskCacheEntry* inst = (Dictionary__string__Experimental_Cache_DiskCacheEntry*)::uAllocObject(sizeof(Dictionary__string__Experimental_Cache_DiskCacheEntry), Dictionary__string__Experimental_Cache_DiskCacheEntry__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Experimental_Cache_DiskCacheEntry__Rehash(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(i).Value);
        }
    }
}

bool Dictionary__string__Experimental_Cache_DiskCacheEntry__Remove(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Experimental_Cache_DiskCacheEntry__set_Item(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this, ::uString* key, ::app::Experimental::Cache::DiskCacheEntry* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Experimental_Cache_DiskCacheEntry__TryGetValue(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this, ::uString* key, ::app::Experimental::Cache::DiskCacheEntry** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Experimental_Cache_DiskCacheEntry>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Experimental_Cache_DiskCacheEntry__Uno_Collections_ICollection_Add(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this, ::app::Uno::Collections::KeyValuePair__string__Experimental_Cache_DiskCacheEntry item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Experimental_Cache_DiskCacheEntry__Uno_Collections_ICollection_Contains(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this, ::app::Uno::Collections::KeyValuePair__string__Experimental_Cache_DiskCacheEntry item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Experimental_Cache_DiskCacheEntry__Uno_Collections_ICollection_Remove(Dictionary__string__Experimental_Cache_DiskCacheEntry* __this, ::app::Uno::Collections::KeyValuePair__string__Experimental_Cache_DiskCacheEntry item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Fuse_Shapes_GeometryCacheEntry__uType* Dictionary__string__Fuse_Shapes_GeometryCacheEntry__typeof()
{
    static ::uStaticStrong<Dictionary__string__Fuse_Shapes_GeometryCacheEntry__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Fuse_Shapes_GeometryCacheEntry__uType*)::uAllocClassType(sizeof(Dictionary__string__Fuse_Shapes_GeometryCacheEntry__uType), "Uno.Collections.Dictionary<string,Fuse.Shapes.GeometryCacheEntry>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Fuse_Shapes_GeometryCacheEntry__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Fuse_Shapes_GeometryCacheEntry__typeof(), offsetof(Dictionary__string__Fuse_Shapes_GeometryCacheEntry__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Fuse_Shapes_GeometryCacheEntry___typeof(), offsetof(Dictionary__string__Fuse_Shapes_GeometryCacheEntry__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Fuse_Shapes_GeometryCacheEntry, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Fuse_Shapes_GeometryCacheEntry, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Fuse_Shapes_GeometryCacheEntry, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Fuse_Shapes_GeometryCacheEntry, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Fuse_Shapes_GeometryCacheEntry, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__Add, 0, false, ::app::Uno::String__typeof(), ::app::Fuse::Shapes::GeometryCacheEntry__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__get_Item, 0, false, ::app::Fuse::Shapes::GeometryCacheEntry__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Fuse_Shapes_GeometryCacheEntry__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Fuse_Shapes_GeometryCacheEntry__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Fuse_Shapes_GeometryCacheEntry__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__New_1, 0, true, Dictionary__string__Fuse_Shapes_GeometryCacheEntry__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__New_2, 0, true, Dictionary__string__Fuse_Shapes_GeometryCacheEntry__typeof(), ::app::Uno::Collections::IDictionary__string__Fuse_Shapes_GeometryCacheEntry__typeof()),
        ::uNewFunction("Remove", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Fuse::Shapes::GeometryCacheEntry__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Fuse_Shapes_GeometryCacheEntry__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Fuse::Shapes::GeometryCacheEntry__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Fuse_Shapes_GeometryCacheEntry__GetEnumerator_boxed(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Fuse_Shapes_GeometryCacheEntry__typeof(), __this->GetEnumerator());
}

void Dictionary__string__Fuse_Shapes_GeometryCacheEntry___ObjInit(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Fuse_Shapes_GeometryCacheEntry___ObjInit_1(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Fuse_Shapes_GeometryCacheEntry_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Fuse_Shapes_GeometryCacheEntry keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Fuse_Shapes_GeometryCacheEntry_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Fuse_Shapes_GeometryCacheEntry__Add(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this, ::uString* key, ::app::Fuse::Shapes::GeometryCacheEntry* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Fuse_Shapes_GeometryCacheEntry__Clear(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Fuse_Shapes_GeometryCacheEntry__ContainsKey(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Fuse_Shapes_GeometryCacheEntry__get_Count(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this)
{
    return __this->_count;
}

::app::Fuse::Shapes::GeometryCacheEntry* Dictionary__string__Fuse_Shapes_GeometryCacheEntry__get_Item(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Fuse_Shapes_GeometryCacheEntry* Dictionary__string__Fuse_Shapes_GeometryCacheEntry__get_Keys(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Fuse_Shapes_GeometryCacheEntry__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Fuse_Shapes_GeometryCacheEntry* Dictionary__string__Fuse_Shapes_GeometryCacheEntry__get_Values(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Fuse_Shapes_GeometryCacheEntry__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Fuse_Shapes_GeometryCacheEntry Dictionary__string__Fuse_Shapes_GeometryCacheEntry__GetEnumerator(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Fuse_Shapes_GeometryCacheEntry__New_1(NULL, __this);
}

Dictionary__string__Fuse_Shapes_GeometryCacheEntry* Dictionary__string__Fuse_Shapes_GeometryCacheEntry__New_1(::uStatic* __this)
{
    Dictionary__string__Fuse_Shapes_GeometryCacheEntry* inst = (Dictionary__string__Fuse_Shapes_GeometryCacheEntry*)::uAllocObject(sizeof(Dictionary__string__Fuse_Shapes_GeometryCacheEntry), Dictionary__string__Fuse_Shapes_GeometryCacheEntry__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Fuse_Shapes_GeometryCacheEntry* Dictionary__string__Fuse_Shapes_GeometryCacheEntry__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Fuse_Shapes_GeometryCacheEntry* inst = (Dictionary__string__Fuse_Shapes_GeometryCacheEntry*)::uAllocObject(sizeof(Dictionary__string__Fuse_Shapes_GeometryCacheEntry), Dictionary__string__Fuse_Shapes_GeometryCacheEntry__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Fuse_Shapes_GeometryCacheEntry__Rehash(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(i).Value);
        }
    }
}

bool Dictionary__string__Fuse_Shapes_GeometryCacheEntry__Remove(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Fuse_Shapes_GeometryCacheEntry__set_Item(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this, ::uString* key, ::app::Fuse::Shapes::GeometryCacheEntry* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Fuse_Shapes_GeometryCacheEntry__TryGetValue(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this, ::uString* key, ::app::Fuse::Shapes::GeometryCacheEntry** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Fuse_Shapes_GeometryCacheEntry>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Fuse_Shapes_GeometryCacheEntry__Uno_Collections_ICollection_Add(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this, ::app::Uno::Collections::KeyValuePair__string__Fuse_Shapes_GeometryCacheEntry item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Fuse_Shapes_GeometryCacheEntry__Uno_Collections_ICollection_Contains(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this, ::app::Uno::Collections::KeyValuePair__string__Fuse_Shapes_GeometryCacheEntry item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Fuse_Shapes_GeometryCacheEntry__Uno_Collections_ICollection_Remove(Dictionary__string__Fuse_Shapes_GeometryCacheEntry* __this, ::app::Uno::Collections::KeyValuePair__string__Fuse_Shapes_GeometryCacheEntry item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__int__uType* Dictionary__string__int__typeof()
{
    static ::uStaticStrong<Dictionary__string__int__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__int__uType*)::uAllocClassType(sizeof(Dictionary__string__int__uType), "Uno.Collections.Dictionary<string,int>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__int__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__int__typeof(), offsetof(Dictionary__string__int__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_int___typeof(), offsetof(Dictionary__string__int__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__int, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__int, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__int__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__int, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__int, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__int, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__int__Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__int__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__int__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__int__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__int__get_Item, 0, false, ::app::Uno::Int__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__int__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__int__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__int__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__int__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__int__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__int__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__int__New_1, 0, true, Dictionary__string__int__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__int__New_2, 0, true, Dictionary__string__int__typeof(), ::app::Uno::Collections::IDictionary__string__int__typeof()),
        ::uNewFunction("Remove", Dictionary__string__int__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__int__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Int__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__int__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::Int__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__int__GetEnumerator_boxed(Dictionary__string__int* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__int__typeof(), __this->GetEnumerator());
}

void Dictionary__string__int___ObjInit(Dictionary__string__int* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__int__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__int___ObjInit_1(Dictionary__string__int* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_int_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__int keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_int_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__int__Add(Dictionary__string__int* __this, ::uString* key, int value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__int__Clear(Dictionary__string__int* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__int__ContainsKey(Dictionary__string__int* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__int__get_Count(Dictionary__string__int* __this)
{
    return __this->_count;
}

int Dictionary__string__int__get_Item(Dictionary__string__int* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__int* Dictionary__string__int__get_Keys(Dictionary__string__int* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__int__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__int* Dictionary__string__int__get_Values(Dictionary__string__int* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__int__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__int Dictionary__string__int__GetEnumerator(Dictionary__string__int* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__int__New_1(NULL, __this);
}

Dictionary__string__int* Dictionary__string__int__New_1(::uStatic* __this)
{
    Dictionary__string__int* inst = (Dictionary__string__int*)::uAllocObject(sizeof(Dictionary__string__int), Dictionary__string__int__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__int* Dictionary__string__int__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__int* inst = (Dictionary__string__int*)::uAllocObject(sizeof(Dictionary__string__int), Dictionary__string__int__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__int__Rehash(Dictionary__string__int* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__int__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(i).Value);
        }
    }
}

bool Dictionary__string__int__Remove(Dictionary__string__int* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__int__set_Item(Dictionary__string__int* __this, ::uString* key, int value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__int__TryGetValue(Dictionary__string__int* __this, ::uString* key, int* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__int>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__int__Uno_Collections_ICollection_Add(Dictionary__string__int* __this, ::app::Uno::Collections::KeyValuePair__string__int item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__int__Uno_Collections_ICollection_Contains(Dictionary__string__int* __this, ::app::Uno::Collections::KeyValuePair__string__int item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__int__Uno_Collections_ICollection_Remove(Dictionary__string__int* __this, ::app::Uno::Collections::KeyValuePair__string__int item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__object__uType* Dictionary__string__object__typeof()
{
    static ::uStaticStrong<Dictionary__string__object__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__object__uType*)::uAllocClassType(sizeof(Dictionary__string__object__uType), "Uno.Collections.Dictionary<string,object>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__object__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__object__typeof(), offsetof(Dictionary__string__object__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_object___typeof(), offsetof(Dictionary__string__object__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__object, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__object, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__object__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__object, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__object, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__object, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__object__Add, 0, false, ::app::Uno::String__typeof(), ::uObject__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__object__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__object__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__object__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__object__get_Item, 0, false, ::uObject__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__object__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__object__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__object__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__object__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__object__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__object__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__object__New_1, 0, true, Dictionary__string__object__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__object__New_2, 0, true, Dictionary__string__object__typeof(), ::app::Uno::Collections::IDictionary__string__object__typeof()),
        ::uNewFunction("Remove", Dictionary__string__object__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__object__set_Item, 0, false, ::app::Uno::String__typeof(), ::uObject__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__object__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::uObject__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__object__GetEnumerator_boxed(Dictionary__string__object* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__object__typeof(), __this->GetEnumerator());
}

void Dictionary__string__object___ObjInit(Dictionary__string__object* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__object__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__object___ObjInit_1(Dictionary__string__object* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_object_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__object keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_object_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__object__Add(Dictionary__string__object* __this, ::uString* key, ::uObject* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__object__Clear(Dictionary__string__object* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__object__ContainsKey(Dictionary__string__object* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__object__get_Count(Dictionary__string__object* __this)
{
    return __this->_count;
}

::uObject* Dictionary__string__object__get_Item(Dictionary__string__object* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__object* Dictionary__string__object__get_Keys(Dictionary__string__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__object__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__object* Dictionary__string__object__get_Values(Dictionary__string__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__object__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__object Dictionary__string__object__GetEnumerator(Dictionary__string__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__object__New_1(NULL, __this);
}

Dictionary__string__object* Dictionary__string__object__New_1(::uStatic* __this)
{
    Dictionary__string__object* inst = (Dictionary__string__object*)::uAllocObject(sizeof(Dictionary__string__object), Dictionary__string__object__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__object* Dictionary__string__object__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__object* inst = (Dictionary__string__object*)::uAllocObject(sizeof(Dictionary__string__object), Dictionary__string__object__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__object__Rehash(Dictionary__string__object* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__object__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(i).Value);
        }
    }
}

bool Dictionary__string__object__Remove(Dictionary__string__object* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__object__set_Item(Dictionary__string__object* __this, ::uString* key, ::uObject* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__object__TryGetValue(Dictionary__string__object* __this, ::uString* key, ::uObject** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__object>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__object__Uno_Collections_ICollection_Add(Dictionary__string__object* __this, ::app::Uno::Collections::KeyValuePair__string__object item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__object__Uno_Collections_ICollection_Contains(Dictionary__string__object* __this, ::app::Uno::Collections::KeyValuePair__string__object item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__object__Uno_Collections_ICollection_Remove(Dictionary__string__object* __this, ::app::Uno::Collections::KeyValuePair__string__object item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Outracks_Simulator_ByteFileSource__uType* Dictionary__string__Outracks_Simulator_ByteFileSource__typeof()
{
    static ::uStaticStrong<Dictionary__string__Outracks_Simulator_ByteFileSource__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Outracks_Simulator_ByteFileSource__uType*)::uAllocClassType(sizeof(Dictionary__string__Outracks_Simulator_ByteFileSource__uType), "Uno.Collections.Dictionary<string,Outracks.Simulator.ByteFileSource>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Outracks_Simulator_ByteFileSource__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Outracks_Simulator_ByteFileSource__typeof(), offsetof(Dictionary__string__Outracks_Simulator_ByteFileSource__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Outracks_Simulator_ByteFileSource___typeof(), offsetof(Dictionary__string__Outracks_Simulator_ByteFileSource__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Outracks_Simulator_ByteFileSource, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Outracks_Simulator_ByteFileSource, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Outracks_Simulator_ByteFileSource, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Outracks_Simulator_ByteFileSource, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Outracks_Simulator_ByteFileSource, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Outracks_Simulator_ByteFileSource__Add, 0, false, ::app::Uno::String__typeof(), ::app::Outracks::Simulator::ByteFileSource__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Outracks_Simulator_ByteFileSource__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Outracks_Simulator_ByteFileSource__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Outracks_Simulator_ByteFileSource__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Outracks_Simulator_ByteFileSource__get_Item, 0, false, ::app::Outracks::Simulator::ByteFileSource__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Outracks_Simulator_ByteFileSource__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Outracks_Simulator_ByteFileSource__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Outracks_Simulator_ByteFileSource__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Outracks_Simulator_ByteFileSource__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Outracks_Simulator_ByteFileSource__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Outracks_Simulator_ByteFileSource__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Outracks_Simulator_ByteFileSource__New_1, 0, true, Dictionary__string__Outracks_Simulator_ByteFileSource__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Outracks_Simulator_ByteFileSource__New_2, 0, true, Dictionary__string__Outracks_Simulator_ByteFileSource__typeof(), ::app::Uno::Collections::IDictionary__string__Outracks_Simulator_ByteFileSource__typeof()),
        ::uNewFunction("Remove", Dictionary__string__Outracks_Simulator_ByteFileSource__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Outracks_Simulator_ByteFileSource__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Outracks::Simulator::ByteFileSource__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Outracks_Simulator_ByteFileSource__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Outracks::Simulator::ByteFileSource__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Outracks_Simulator_ByteFileSource__GetEnumerator_boxed(Dictionary__string__Outracks_Simulator_ByteFileSource* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Outracks_Simulator_ByteFileSource__typeof(), __this->GetEnumerator());
}

void Dictionary__string__Outracks_Simulator_ByteFileSource___ObjInit(Dictionary__string__Outracks_Simulator_ByteFileSource* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Outracks_Simulator_ByteFileSource___ObjInit_1(Dictionary__string__Outracks_Simulator_ByteFileSource* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Outracks_Simulator_ByteFileSource_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Outracks_Simulator_ByteFileSource keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Outracks_Simulator_ByteFileSource_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Outracks_Simulator_ByteFileSource__Add(Dictionary__string__Outracks_Simulator_ByteFileSource* __this, ::uString* key, ::app::Outracks::Simulator::ByteFileSource* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Outracks_Simulator_ByteFileSource__Clear(Dictionary__string__Outracks_Simulator_ByteFileSource* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Outracks_Simulator_ByteFileSource__ContainsKey(Dictionary__string__Outracks_Simulator_ByteFileSource* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Outracks_Simulator_ByteFileSource__get_Count(Dictionary__string__Outracks_Simulator_ByteFileSource* __this)
{
    return __this->_count;
}

::app::Outracks::Simulator::ByteFileSource* Dictionary__string__Outracks_Simulator_ByteFileSource__get_Item(Dictionary__string__Outracks_Simulator_ByteFileSource* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Outracks_Simulator_ByteFileSource* Dictionary__string__Outracks_Simulator_ByteFileSource__get_Keys(Dictionary__string__Outracks_Simulator_ByteFileSource* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Outracks_Simulator_ByteFileSource__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Outracks_Simulator_ByteFileSource* Dictionary__string__Outracks_Simulator_ByteFileSource__get_Values(Dictionary__string__Outracks_Simulator_ByteFileSource* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Outracks_Simulator_ByteFileSource__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Outracks_Simulator_ByteFileSource Dictionary__string__Outracks_Simulator_ByteFileSource__GetEnumerator(Dictionary__string__Outracks_Simulator_ByteFileSource* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Outracks_Simulator_ByteFileSource__New_1(NULL, __this);
}

Dictionary__string__Outracks_Simulator_ByteFileSource* Dictionary__string__Outracks_Simulator_ByteFileSource__New_1(::uStatic* __this)
{
    Dictionary__string__Outracks_Simulator_ByteFileSource* inst = (Dictionary__string__Outracks_Simulator_ByteFileSource*)::uAllocObject(sizeof(Dictionary__string__Outracks_Simulator_ByteFileSource), Dictionary__string__Outracks_Simulator_ByteFileSource__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Outracks_Simulator_ByteFileSource* Dictionary__string__Outracks_Simulator_ByteFileSource__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Outracks_Simulator_ByteFileSource* inst = (Dictionary__string__Outracks_Simulator_ByteFileSource*)::uAllocObject(sizeof(Dictionary__string__Outracks_Simulator_ByteFileSource), Dictionary__string__Outracks_Simulator_ByteFileSource__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Outracks_Simulator_ByteFileSource__Rehash(Dictionary__string__Outracks_Simulator_ByteFileSource* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(i).Value);
        }
    }
}

bool Dictionary__string__Outracks_Simulator_ByteFileSource__Remove(Dictionary__string__Outracks_Simulator_ByteFileSource* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Outracks_Simulator_ByteFileSource__set_Item(Dictionary__string__Outracks_Simulator_ByteFileSource* __this, ::uString* key, ::app::Outracks::Simulator::ByteFileSource* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Outracks_Simulator_ByteFileSource__TryGetValue(Dictionary__string__Outracks_Simulator_ByteFileSource* __this, ::uString* key, ::app::Outracks::Simulator::ByteFileSource** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Outracks_Simulator_ByteFileSource>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Outracks_Simulator_ByteFileSource__Uno_Collections_ICollection_Add(Dictionary__string__Outracks_Simulator_ByteFileSource* __this, ::app::Uno::Collections::KeyValuePair__string__Outracks_Simulator_ByteFileSource item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Outracks_Simulator_ByteFileSource__Uno_Collections_ICollection_Contains(Dictionary__string__Outracks_Simulator_ByteFileSource* __this, ::app::Uno::Collections::KeyValuePair__string__Outracks_Simulator_ByteFileSource item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Outracks_Simulator_ByteFileSource__Uno_Collections_ICollection_Remove(Dictionary__string__Outracks_Simulator_ByteFileSource* __this, ::app::Uno::Collections::KeyValuePair__string__Outracks_Simulator_ByteFileSource item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__string__uType* Dictionary__string__string__typeof()
{
    static ::uStaticStrong<Dictionary__string__string__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__string__uType*)::uAllocClassType(sizeof(Dictionary__string__string__uType), "Uno.Collections.Dictionary<string,string>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__string__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__string__typeof(), offsetof(Dictionary__string__string__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_string___typeof(), offsetof(Dictionary__string__string__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__string, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__string, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__string__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__string, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__string, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__string, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__string__Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__string__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__string__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__string__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__string__get_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__string__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__string__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__string__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__string__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__string__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__string__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__string__New_1, 0, true, Dictionary__string__string__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__string__New_2, 0, true, Dictionary__string__string__typeof(), ::app::Uno::Collections::IDictionary__string__string__typeof()),
        ::uNewFunction("Remove", Dictionary__string__string__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__string__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__string__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::String__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__string__GetEnumerator_boxed(Dictionary__string__string* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__string__typeof(), __this->GetEnumerator());
}

void Dictionary__string__string___ObjInit(Dictionary__string__string* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__string__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__string___ObjInit_1(Dictionary__string__string* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_string_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__string keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_string_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__string__Add(Dictionary__string__string* __this, ::uString* key, ::uString* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__string__Clear(Dictionary__string__string* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__string__ContainsKey(Dictionary__string__string* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__string__get_Count(Dictionary__string__string* __this)
{
    return __this->_count;
}

::uString* Dictionary__string__string__get_Item(Dictionary__string__string* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__string* Dictionary__string__string__get_Keys(Dictionary__string__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__string__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__string* Dictionary__string__string__get_Values(Dictionary__string__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__string__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__string Dictionary__string__string__GetEnumerator(Dictionary__string__string* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__string__New_1(NULL, __this);
}

Dictionary__string__string* Dictionary__string__string__New_1(::uStatic* __this)
{
    Dictionary__string__string* inst = (Dictionary__string__string*)::uAllocObject(sizeof(Dictionary__string__string), Dictionary__string__string__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__string* Dictionary__string__string__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__string* inst = (Dictionary__string__string*)::uAllocObject(sizeof(Dictionary__string__string), Dictionary__string__string__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__string__Rehash(Dictionary__string__string* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__string__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(i).Value);
        }
    }
}

bool Dictionary__string__string__Remove(Dictionary__string__string* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__string__set_Item(Dictionary__string__string* __this, ::uString* key, ::uString* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__string__TryGetValue(Dictionary__string__string* __this, ::uString* key, ::uString** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__string>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__string__Uno_Collections_ICollection_Add(Dictionary__string__string* __this, ::app::Uno::Collections::KeyValuePair__string__string item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__string__Uno_Collections_ICollection_Contains(Dictionary__string__string* __this, ::app::Uno::Collections::KeyValuePair__string__string item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__string__Uno_Collections_ICollection_Remove(Dictionary__string__string* __this, ::app::Uno::Collections::KeyValuePair__string__string item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___uType* Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof()
{
    static ::uStaticStrong<Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___uType*)::uAllocClassType(sizeof(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___uType), "Uno.Collections.Dictionary<string,Uno.Collections.List<Fuse.Scripting.INameListener>>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof(), offsetof(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Collections_List_Fuse_Scripting_INameListener____typeof(), offsetof(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Collections::List__Fuse_Scripting_INameListener__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___get_Item, 0, false, ::app::Uno::Collections::List__Fuse_Scripting_INameListener__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___New_1, 0, true, Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___New_2, 0, true, Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof(), ::app::Uno::Collections::IDictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof()),
        ::uNewFunction("Remove", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Collections::List__Fuse_Scripting_INameListener__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::Collections::List__Fuse_Scripting_INameListener__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___GetEnumerator_boxed(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof(), __this->GetEnumerator());
}

void Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener____ObjInit(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener____ObjInit_1(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Collections_List_Fuse_Scripting_INameListener__::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_Fuse_Scripting_INameListener_ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Uno_Collections_List_Fuse_Scripting_INameListener__::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___Add(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this, ::uString* key, ::app::Uno::Collections::List__Fuse_Scripting_INameListener* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___Clear(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___ContainsKey(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___get_Count(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this)
{
    return __this->_count;
}

::app::Uno::Collections::List__Fuse_Scripting_INameListener* Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___get_Item(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Collections_List_Fuse_Scripting_INameListener_* Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___get_Keys(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Collections_List_Fuse_Scripting_INameListener___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Collections_List_Fuse_Scripting_INameListener_* Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___get_Values(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Collections_List_Fuse_Scripting_INameListener___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_Fuse_Scripting_INameListener_ Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___GetEnumerator(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_Fuse_Scripting_INameListener___New_1(NULL, __this);
}

Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___New_1(::uStatic* __this)
{
    Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* inst = (Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_*)::uAllocObject(sizeof(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_), Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* inst = (Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_*)::uAllocObject(sizeof(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_), Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___Rehash(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener___typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(i).Value);
        }
    }
}

bool Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___Remove(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___set_Item(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this, ::uString* key, ::app::Uno::Collections::List__Fuse_Scripting_INameListener* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___TryGetValue(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this, ::uString* key, ::app::Uno::Collections::List__Fuse_Scripting_INameListener** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Fuse_Scripting_INameListener_>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___Uno_Collections_ICollection_Add(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_Fuse_Scripting_INameListener_ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___Uno_Collections_ICollection_Contains(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_Fuse_Scripting_INameListener_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener___Uno_Collections_ICollection_Remove(Dictionary__string__Uno_Collections_List_Fuse_Scripting_INameListener_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_Fuse_Scripting_INameListener_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Uno_Collections_List_object___uType* Dictionary__string__Uno_Collections_List_object___typeof()
{
    static ::uStaticStrong<Dictionary__string__Uno_Collections_List_object___uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Uno_Collections_List_object___uType*)::uAllocClassType(sizeof(Dictionary__string__Uno_Collections_List_object___uType), "Uno.Collections.Dictionary<string,Uno.Collections.List<object>>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Uno_Collections_List_object___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Uno_Collections_List_object___typeof(), offsetof(Dictionary__string__Uno_Collections_List_object___uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Collections_List_object____typeof(), offsetof(Dictionary__string__Uno_Collections_List_object___uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Uno_Collections_List_object_, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Uno_Collections_List_object_, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object___typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Uno_Collections_List_object_, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Uno_Collections_List_object_, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Uno_Collections_List_object_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Uno_Collections_List_object___Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Collections::List__object__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Uno_Collections_List_object___Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Uno_Collections_List_object___ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Uno_Collections_List_object___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Uno_Collections_List_object___get_Item, 0, false, ::app::Uno::Collections::List__object__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Uno_Collections_List_object___get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Collections_List_object___typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Uno_Collections_List_object___get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Collections_List_object___typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Uno_Collections_List_object___GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_object___typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Collections_List_object___New_1, 0, true, Dictionary__string__Uno_Collections_List_object___typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Collections_List_object___New_2, 0, true, Dictionary__string__Uno_Collections_List_object___typeof(), ::app::Uno::Collections::IDictionary__string__Uno_Collections_List_object___typeof()),
        ::uNewFunction("Remove", Dictionary__string__Uno_Collections_List_object___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Uno_Collections_List_object___set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Collections::List__object__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Uno_Collections_List_object___TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::Collections::List__object__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Uno_Collections_List_object___GetEnumerator_boxed(Dictionary__string__Uno_Collections_List_object_* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_object___typeof(), __this->GetEnumerator());
}

void Dictionary__string__Uno_Collections_List_object____ObjInit(Dictionary__string__Uno_Collections_List_object_* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object___typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Uno_Collections_List_object____ObjInit_1(Dictionary__string__Uno_Collections_List_object_* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Collections_List_object__::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_object_ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Uno_Collections_List_object__::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Uno_Collections_List_object___Add(Dictionary__string__Uno_Collections_List_object_* __this, ::uString* key, ::app::Uno::Collections::List__object* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Collections_List_object___Clear(Dictionary__string__Uno_Collections_List_object_* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Uno_Collections_List_object___ContainsKey(Dictionary__string__Uno_Collections_List_object_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Uno_Collections_List_object___get_Count(Dictionary__string__Uno_Collections_List_object_* __this)
{
    return __this->_count;
}

::app::Uno::Collections::List__object* Dictionary__string__Uno_Collections_List_object___get_Item(Dictionary__string__Uno_Collections_List_object_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Collections_List_object_* Dictionary__string__Uno_Collections_List_object___get_Keys(Dictionary__string__Uno_Collections_List_object_* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Collections_List_object___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Collections_List_object_* Dictionary__string__Uno_Collections_List_object___get_Values(Dictionary__string__Uno_Collections_List_object_* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Collections_List_object___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_object_ Dictionary__string__Uno_Collections_List_object___GetEnumerator(Dictionary__string__Uno_Collections_List_object_* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_object___New_1(NULL, __this);
}

Dictionary__string__Uno_Collections_List_object_* Dictionary__string__Uno_Collections_List_object___New_1(::uStatic* __this)
{
    Dictionary__string__Uno_Collections_List_object_* inst = (Dictionary__string__Uno_Collections_List_object_*)::uAllocObject(sizeof(Dictionary__string__Uno_Collections_List_object_), Dictionary__string__Uno_Collections_List_object___typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Uno_Collections_List_object_* Dictionary__string__Uno_Collections_List_object___New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Uno_Collections_List_object_* inst = (Dictionary__string__Uno_Collections_List_object_*)::uAllocObject(sizeof(Dictionary__string__Uno_Collections_List_object_), Dictionary__string__Uno_Collections_List_object___typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Uno_Collections_List_object___Rehash(Dictionary__string__Uno_Collections_List_object_* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object___typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(i).Value);
        }
    }
}

bool Dictionary__string__Uno_Collections_List_object___Remove(Dictionary__string__Uno_Collections_List_object_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Collections_List_object___set_Item(Dictionary__string__Uno_Collections_List_object_* __this, ::uString* key, ::app::Uno::Collections::List__object* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Uno_Collections_List_object___TryGetValue(Dictionary__string__Uno_Collections_List_object_* __this, ::uString* key, ::app::Uno::Collections::List__object** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_object_>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Collections_List_object___Uno_Collections_ICollection_Add(Dictionary__string__Uno_Collections_List_object_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_object_ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Uno_Collections_List_object___Uno_Collections_ICollection_Contains(Dictionary__string__Uno_Collections_List_object_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_object_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Uno_Collections_List_object___Uno_Collections_ICollection_Remove(Dictionary__string__Uno_Collections_List_object_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_object_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Uno_Collections_List_Uno_Action___uType* Dictionary__string__Uno_Collections_List_Uno_Action___typeof()
{
    static ::uStaticStrong<Dictionary__string__Uno_Collections_List_Uno_Action___uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Uno_Collections_List_Uno_Action___uType*)::uAllocClassType(sizeof(Dictionary__string__Uno_Collections_List_Uno_Action___uType), "Uno.Collections.Dictionary<string,Uno.Collections.List<Uno.Action>>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Uno_Collections_List_Uno_Action___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Uno_Collections_List_Uno_Action___typeof(), offsetof(Dictionary__string__Uno_Collections_List_Uno_Action___uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Collections_List_Uno_Action____typeof(), offsetof(Dictionary__string__Uno_Collections_List_Uno_Action___uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Uno_Collections_List_Uno_Action_, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Uno_Collections_List_Uno_Action_, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action___typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Uno_Collections_List_Uno_Action_, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Uno_Collections_List_Uno_Action_, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Uno_Collections_List_Uno_Action_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Uno_Collections_List_Uno_Action___Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Collections::List__Uno_Action__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Uno_Collections_List_Uno_Action___Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Uno_Collections_List_Uno_Action___ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Uno_Collections_List_Uno_Action___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Uno_Collections_List_Uno_Action___get_Item, 0, false, ::app::Uno::Collections::List__Uno_Action__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Uno_Collections_List_Uno_Action___get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Collections_List_Uno_Action___typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Uno_Collections_List_Uno_Action___get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Collections_List_Uno_Action___typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Uno_Collections_List_Uno_Action___GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_Uno_Action___typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Collections_List_Uno_Action___New_1, 0, true, Dictionary__string__Uno_Collections_List_Uno_Action___typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Collections_List_Uno_Action___New_2, 0, true, Dictionary__string__Uno_Collections_List_Uno_Action___typeof(), ::app::Uno::Collections::IDictionary__string__Uno_Collections_List_Uno_Action___typeof()),
        ::uNewFunction("Remove", Dictionary__string__Uno_Collections_List_Uno_Action___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Uno_Collections_List_Uno_Action___set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Collections::List__Uno_Action__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Uno_Collections_List_Uno_Action___TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::Collections::List__Uno_Action__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Uno_Collections_List_Uno_Action___GetEnumerator_boxed(Dictionary__string__Uno_Collections_List_Uno_Action_* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_Uno_Action___typeof(), __this->GetEnumerator());
}

void Dictionary__string__Uno_Collections_List_Uno_Action____ObjInit(Dictionary__string__Uno_Collections_List_Uno_Action_* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action___typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Uno_Collections_List_Uno_Action____ObjInit_1(Dictionary__string__Uno_Collections_List_Uno_Action_* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Collections_List_Uno_Action__::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_Uno_Action_ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Uno_Collections_List_Uno_Action__::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Uno_Collections_List_Uno_Action___Add(Dictionary__string__Uno_Collections_List_Uno_Action_* __this, ::uString* key, ::app::Uno::Collections::List__Uno_Action* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Collections_List_Uno_Action___Clear(Dictionary__string__Uno_Collections_List_Uno_Action_* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Uno_Collections_List_Uno_Action___ContainsKey(Dictionary__string__Uno_Collections_List_Uno_Action_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Uno_Collections_List_Uno_Action___get_Count(Dictionary__string__Uno_Collections_List_Uno_Action_* __this)
{
    return __this->_count;
}

::app::Uno::Collections::List__Uno_Action* Dictionary__string__Uno_Collections_List_Uno_Action___get_Item(Dictionary__string__Uno_Collections_List_Uno_Action_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Collections_List_Uno_Action_* Dictionary__string__Uno_Collections_List_Uno_Action___get_Keys(Dictionary__string__Uno_Collections_List_Uno_Action_* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Collections_List_Uno_Action___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Collections_List_Uno_Action_* Dictionary__string__Uno_Collections_List_Uno_Action___get_Values(Dictionary__string__Uno_Collections_List_Uno_Action_* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Collections_List_Uno_Action___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_Uno_Action_ Dictionary__string__Uno_Collections_List_Uno_Action___GetEnumerator(Dictionary__string__Uno_Collections_List_Uno_Action_* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Collections_List_Uno_Action___New_1(NULL, __this);
}

Dictionary__string__Uno_Collections_List_Uno_Action_* Dictionary__string__Uno_Collections_List_Uno_Action___New_1(::uStatic* __this)
{
    Dictionary__string__Uno_Collections_List_Uno_Action_* inst = (Dictionary__string__Uno_Collections_List_Uno_Action_*)::uAllocObject(sizeof(Dictionary__string__Uno_Collections_List_Uno_Action_), Dictionary__string__Uno_Collections_List_Uno_Action___typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Uno_Collections_List_Uno_Action_* Dictionary__string__Uno_Collections_List_Uno_Action___New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Uno_Collections_List_Uno_Action_* inst = (Dictionary__string__Uno_Collections_List_Uno_Action_*)::uAllocObject(sizeof(Dictionary__string__Uno_Collections_List_Uno_Action_), Dictionary__string__Uno_Collections_List_Uno_Action___typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Uno_Collections_List_Uno_Action___Rehash(Dictionary__string__Uno_Collections_List_Uno_Action_* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action___typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(i).Value);
        }
    }
}

bool Dictionary__string__Uno_Collections_List_Uno_Action___Remove(Dictionary__string__Uno_Collections_List_Uno_Action_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Collections_List_Uno_Action___set_Item(Dictionary__string__Uno_Collections_List_Uno_Action_* __this, ::uString* key, ::app::Uno::Collections::List__Uno_Action* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Uno_Collections_List_Uno_Action___TryGetValue(Dictionary__string__Uno_Collections_List_Uno_Action_* __this, ::uString* key, ::app::Uno::Collections::List__Uno_Action** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Collections_List_Uno_Action_>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Collections_List_Uno_Action___Uno_Collections_ICollection_Add(Dictionary__string__Uno_Collections_List_Uno_Action_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_Uno_Action_ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Uno_Collections_List_Uno_Action___Uno_Collections_ICollection_Contains(Dictionary__string__Uno_Collections_List_Uno_Action_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_Uno_Action_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Uno_Collections_List_Uno_Action___Uno_Collections_ICollection_Remove(Dictionary__string__Uno_Collections_List_Uno_Action_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Collections_List_Uno_Action_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Uno_Content_Models_ModelParameter__uType* Dictionary__string__Uno_Content_Models_ModelParameter__typeof()
{
    static ::uStaticStrong<Dictionary__string__Uno_Content_Models_ModelParameter__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Uno_Content_Models_ModelParameter__uType*)::uAllocClassType(sizeof(Dictionary__string__Uno_Content_Models_ModelParameter__uType), "Uno.Collections.Dictionary<string,Uno.Content.Models.ModelParameter>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Uno_Content_Models_ModelParameter__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Uno_Content_Models_ModelParameter__typeof(), offsetof(Dictionary__string__Uno_Content_Models_ModelParameter__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Content_Models_ModelParameter___typeof(), offsetof(Dictionary__string__Uno_Content_Models_ModelParameter__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Uno_Content_Models_ModelParameter, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Uno_Content_Models_ModelParameter, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Uno_Content_Models_ModelParameter, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Uno_Content_Models_ModelParameter, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Uno_Content_Models_ModelParameter, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Uno_Content_Models_ModelParameter__Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Content::Models::ModelParameter__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Uno_Content_Models_ModelParameter__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Uno_Content_Models_ModelParameter__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Uno_Content_Models_ModelParameter__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Uno_Content_Models_ModelParameter__get_Item, 0, false, ::app::Uno::Content::Models::ModelParameter__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Uno_Content_Models_ModelParameter__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Content_Models_ModelParameter__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Uno_Content_Models_ModelParameter__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Content_Models_ModelParameter__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Uno_Content_Models_ModelParameter__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Content_Models_ModelParameter__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Content_Models_ModelParameter__New_1, 0, true, Dictionary__string__Uno_Content_Models_ModelParameter__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Content_Models_ModelParameter__New_2, 0, true, Dictionary__string__Uno_Content_Models_ModelParameter__typeof(), ::app::Uno::Collections::IDictionary__string__Uno_Content_Models_ModelParameter__typeof()),
        ::uNewFunction("Remove", Dictionary__string__Uno_Content_Models_ModelParameter__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Uno_Content_Models_ModelParameter__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Content::Models::ModelParameter__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Uno_Content_Models_ModelParameter__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::Content::Models::ModelParameter__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Uno_Content_Models_ModelParameter__GetEnumerator_boxed(Dictionary__string__Uno_Content_Models_ModelParameter* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Content_Models_ModelParameter__typeof(), __this->GetEnumerator());
}

void Dictionary__string__Uno_Content_Models_ModelParameter___ObjInit(Dictionary__string__Uno_Content_Models_ModelParameter* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Uno_Content_Models_ModelParameter___ObjInit_1(Dictionary__string__Uno_Content_Models_ModelParameter* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Content_Models_ModelParameter_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Uno_Content_Models_ModelParameter keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Uno_Content_Models_ModelParameter_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Uno_Content_Models_ModelParameter__Add(Dictionary__string__Uno_Content_Models_ModelParameter* __this, ::uString* key, ::app::Uno::Content::Models::ModelParameter* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Content_Models_ModelParameter__Clear(Dictionary__string__Uno_Content_Models_ModelParameter* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Uno_Content_Models_ModelParameter__ContainsKey(Dictionary__string__Uno_Content_Models_ModelParameter* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Uno_Content_Models_ModelParameter__get_Count(Dictionary__string__Uno_Content_Models_ModelParameter* __this)
{
    return __this->_count;
}

::app::Uno::Content::Models::ModelParameter* Dictionary__string__Uno_Content_Models_ModelParameter__get_Item(Dictionary__string__Uno_Content_Models_ModelParameter* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Content_Models_ModelParameter* Dictionary__string__Uno_Content_Models_ModelParameter__get_Keys(Dictionary__string__Uno_Content_Models_ModelParameter* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Content_Models_ModelParameter__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Content_Models_ModelParameter* Dictionary__string__Uno_Content_Models_ModelParameter__get_Values(Dictionary__string__Uno_Content_Models_ModelParameter* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Content_Models_ModelParameter__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Content_Models_ModelParameter Dictionary__string__Uno_Content_Models_ModelParameter__GetEnumerator(Dictionary__string__Uno_Content_Models_ModelParameter* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Content_Models_ModelParameter__New_1(NULL, __this);
}

Dictionary__string__Uno_Content_Models_ModelParameter* Dictionary__string__Uno_Content_Models_ModelParameter__New_1(::uStatic* __this)
{
    Dictionary__string__Uno_Content_Models_ModelParameter* inst = (Dictionary__string__Uno_Content_Models_ModelParameter*)::uAllocObject(sizeof(Dictionary__string__Uno_Content_Models_ModelParameter), Dictionary__string__Uno_Content_Models_ModelParameter__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Uno_Content_Models_ModelParameter* Dictionary__string__Uno_Content_Models_ModelParameter__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Uno_Content_Models_ModelParameter* inst = (Dictionary__string__Uno_Content_Models_ModelParameter*)::uAllocObject(sizeof(Dictionary__string__Uno_Content_Models_ModelParameter), Dictionary__string__Uno_Content_Models_ModelParameter__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Uno_Content_Models_ModelParameter__Rehash(Dictionary__string__Uno_Content_Models_ModelParameter* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(i).Value);
        }
    }
}

bool Dictionary__string__Uno_Content_Models_ModelParameter__Remove(Dictionary__string__Uno_Content_Models_ModelParameter* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Content_Models_ModelParameter__set_Item(Dictionary__string__Uno_Content_Models_ModelParameter* __this, ::uString* key, ::app::Uno::Content::Models::ModelParameter* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Uno_Content_Models_ModelParameter__TryGetValue(Dictionary__string__Uno_Content_Models_ModelParameter* __this, ::uString* key, ::app::Uno::Content::Models::ModelParameter** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_ModelParameter>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Content_Models_ModelParameter__Uno_Collections_ICollection_Add(Dictionary__string__Uno_Content_Models_ModelParameter* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Content_Models_ModelParameter item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Uno_Content_Models_ModelParameter__Uno_Collections_ICollection_Contains(Dictionary__string__Uno_Content_Models_ModelParameter* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Content_Models_ModelParameter item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Uno_Content_Models_ModelParameter__Uno_Collections_ICollection_Remove(Dictionary__string__Uno_Content_Models_ModelParameter* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Content_Models_ModelParameter item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Uno_Content_Models_VertexAttributeArray__uType* Dictionary__string__Uno_Content_Models_VertexAttributeArray__typeof()
{
    static ::uStaticStrong<Dictionary__string__Uno_Content_Models_VertexAttributeArray__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Uno_Content_Models_VertexAttributeArray__uType*)::uAllocClassType(sizeof(Dictionary__string__Uno_Content_Models_VertexAttributeArray__uType), "Uno.Collections.Dictionary<string,Uno.Content.Models.VertexAttributeArray>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Uno_Content_Models_VertexAttributeArray__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Uno_Content_Models_VertexAttributeArray__typeof(), offsetof(Dictionary__string__Uno_Content_Models_VertexAttributeArray__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Content_Models_VertexAttributeArray___typeof(), offsetof(Dictionary__string__Uno_Content_Models_VertexAttributeArray__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Uno_Content_Models_VertexAttributeArray, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Uno_Content_Models_VertexAttributeArray, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Uno_Content_Models_VertexAttributeArray, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Uno_Content_Models_VertexAttributeArray, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Uno_Content_Models_VertexAttributeArray, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Uno_Content_Models_VertexAttributeArray__Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Content::Models::VertexAttributeArray__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Uno_Content_Models_VertexAttributeArray__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Uno_Content_Models_VertexAttributeArray__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Uno_Content_Models_VertexAttributeArray__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Uno_Content_Models_VertexAttributeArray__get_Item, 0, false, ::app::Uno::Content::Models::VertexAttributeArray__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Uno_Content_Models_VertexAttributeArray__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Content_Models_VertexAttributeArray__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Uno_Content_Models_VertexAttributeArray__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Content_Models_VertexAttributeArray__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Uno_Content_Models_VertexAttributeArray__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Content_Models_VertexAttributeArray__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Content_Models_VertexAttributeArray__New_1, 0, true, Dictionary__string__Uno_Content_Models_VertexAttributeArray__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Content_Models_VertexAttributeArray__New_2, 0, true, Dictionary__string__Uno_Content_Models_VertexAttributeArray__typeof(), ::app::Uno::Collections::IDictionary__string__Uno_Content_Models_VertexAttributeArray__typeof()),
        ::uNewFunction("Remove", Dictionary__string__Uno_Content_Models_VertexAttributeArray__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Uno_Content_Models_VertexAttributeArray__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Content::Models::VertexAttributeArray__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Uno_Content_Models_VertexAttributeArray__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::Content::Models::VertexAttributeArray__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Uno_Content_Models_VertexAttributeArray__GetEnumerator_boxed(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Content_Models_VertexAttributeArray__typeof(), __this->GetEnumerator());
}

void Dictionary__string__Uno_Content_Models_VertexAttributeArray___ObjInit(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Uno_Content_Models_VertexAttributeArray___ObjInit_1(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Content_Models_VertexAttributeArray_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Uno_Content_Models_VertexAttributeArray keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Uno_Content_Models_VertexAttributeArray_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Uno_Content_Models_VertexAttributeArray__Add(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this, ::uString* key, ::app::Uno::Content::Models::VertexAttributeArray* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Content_Models_VertexAttributeArray__Clear(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Uno_Content_Models_VertexAttributeArray__ContainsKey(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Uno_Content_Models_VertexAttributeArray__get_Count(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this)
{
    return __this->_count;
}

::app::Uno::Content::Models::VertexAttributeArray* Dictionary__string__Uno_Content_Models_VertexAttributeArray__get_Item(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Content_Models_VertexAttributeArray* Dictionary__string__Uno_Content_Models_VertexAttributeArray__get_Keys(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Content_Models_VertexAttributeArray__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Content_Models_VertexAttributeArray* Dictionary__string__Uno_Content_Models_VertexAttributeArray__get_Values(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Content_Models_VertexAttributeArray__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Content_Models_VertexAttributeArray Dictionary__string__Uno_Content_Models_VertexAttributeArray__GetEnumerator(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Content_Models_VertexAttributeArray__New_1(NULL, __this);
}

Dictionary__string__Uno_Content_Models_VertexAttributeArray* Dictionary__string__Uno_Content_Models_VertexAttributeArray__New_1(::uStatic* __this)
{
    Dictionary__string__Uno_Content_Models_VertexAttributeArray* inst = (Dictionary__string__Uno_Content_Models_VertexAttributeArray*)::uAllocObject(sizeof(Dictionary__string__Uno_Content_Models_VertexAttributeArray), Dictionary__string__Uno_Content_Models_VertexAttributeArray__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Uno_Content_Models_VertexAttributeArray* Dictionary__string__Uno_Content_Models_VertexAttributeArray__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Uno_Content_Models_VertexAttributeArray* inst = (Dictionary__string__Uno_Content_Models_VertexAttributeArray*)::uAllocObject(sizeof(Dictionary__string__Uno_Content_Models_VertexAttributeArray), Dictionary__string__Uno_Content_Models_VertexAttributeArray__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Uno_Content_Models_VertexAttributeArray__Rehash(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(i).Value);
        }
    }
}

bool Dictionary__string__Uno_Content_Models_VertexAttributeArray__Remove(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Content_Models_VertexAttributeArray__set_Item(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this, ::uString* key, ::app::Uno::Content::Models::VertexAttributeArray* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Uno_Content_Models_VertexAttributeArray__TryGetValue(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this, ::uString* key, ::app::Uno::Content::Models::VertexAttributeArray** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Content_Models_VertexAttributeArray>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Content_Models_VertexAttributeArray__Uno_Collections_ICollection_Add(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Content_Models_VertexAttributeArray item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Uno_Content_Models_VertexAttributeArray__Uno_Collections_ICollection_Contains(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Content_Models_VertexAttributeArray item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Uno_Content_Models_VertexAttributeArray__Uno_Collections_ICollection_Remove(Dictionary__string__Uno_Content_Models_VertexAttributeArray* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Content_Models_VertexAttributeArray item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Uno_Data_Json_Value__uType* Dictionary__string__Uno_Data_Json_Value__typeof()
{
    static ::uStaticStrong<Dictionary__string__Uno_Data_Json_Value__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Uno_Data_Json_Value__uType*)::uAllocClassType(sizeof(Dictionary__string__Uno_Data_Json_Value__uType), "Uno.Collections.Dictionary<string,Uno.Data.Json.Value>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Uno_Data_Json_Value__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Uno_Data_Json_Value__typeof(), offsetof(Dictionary__string__Uno_Data_Json_Value__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Data_Json_Value___typeof(), offsetof(Dictionary__string__Uno_Data_Json_Value__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Uno_Data_Json_Value, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Uno_Data_Json_Value, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Uno_Data_Json_Value, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Uno_Data_Json_Value, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Uno_Data_Json_Value, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Uno_Data_Json_Value__Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Data::Json::Value__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Uno_Data_Json_Value__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Uno_Data_Json_Value__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Uno_Data_Json_Value__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Uno_Data_Json_Value__get_Item, 0, false, ::app::Uno::Data::Json::Value__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Uno_Data_Json_Value__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Data_Json_Value__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Uno_Data_Json_Value__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Data_Json_Value__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Uno_Data_Json_Value__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Data_Json_Value__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Data_Json_Value__New_1, 0, true, Dictionary__string__Uno_Data_Json_Value__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Data_Json_Value__New_2, 0, true, Dictionary__string__Uno_Data_Json_Value__typeof(), ::app::Uno::Collections::IDictionary__string__Uno_Data_Json_Value__typeof()),
        ::uNewFunction("Remove", Dictionary__string__Uno_Data_Json_Value__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Uno_Data_Json_Value__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Data::Json::Value__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Uno_Data_Json_Value__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::Data::Json::Value__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Uno_Data_Json_Value__GetEnumerator_boxed(Dictionary__string__Uno_Data_Json_Value* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Data_Json_Value__typeof(), __this->GetEnumerator());
}

void Dictionary__string__Uno_Data_Json_Value___ObjInit(Dictionary__string__Uno_Data_Json_Value* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Uno_Data_Json_Value___ObjInit_1(Dictionary__string__Uno_Data_Json_Value* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Data_Json_Value_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Uno_Data_Json_Value keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Uno_Data_Json_Value_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Uno_Data_Json_Value__Add(Dictionary__string__Uno_Data_Json_Value* __this, ::uString* key, ::app::Uno::Data::Json::Value* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Data_Json_Value__Clear(Dictionary__string__Uno_Data_Json_Value* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Uno_Data_Json_Value__ContainsKey(Dictionary__string__Uno_Data_Json_Value* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Uno_Data_Json_Value__get_Count(Dictionary__string__Uno_Data_Json_Value* __this)
{
    return __this->_count;
}

::app::Uno::Data::Json::Value* Dictionary__string__Uno_Data_Json_Value__get_Item(Dictionary__string__Uno_Data_Json_Value* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Data_Json_Value* Dictionary__string__Uno_Data_Json_Value__get_Keys(Dictionary__string__Uno_Data_Json_Value* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Data_Json_Value__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Data_Json_Value* Dictionary__string__Uno_Data_Json_Value__get_Values(Dictionary__string__Uno_Data_Json_Value* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Data_Json_Value__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Data_Json_Value Dictionary__string__Uno_Data_Json_Value__GetEnumerator(Dictionary__string__Uno_Data_Json_Value* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Data_Json_Value__New_1(NULL, __this);
}

Dictionary__string__Uno_Data_Json_Value* Dictionary__string__Uno_Data_Json_Value__New_1(::uStatic* __this)
{
    Dictionary__string__Uno_Data_Json_Value* inst = (Dictionary__string__Uno_Data_Json_Value*)::uAllocObject(sizeof(Dictionary__string__Uno_Data_Json_Value), Dictionary__string__Uno_Data_Json_Value__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Uno_Data_Json_Value* Dictionary__string__Uno_Data_Json_Value__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Uno_Data_Json_Value* inst = (Dictionary__string__Uno_Data_Json_Value*)::uAllocObject(sizeof(Dictionary__string__Uno_Data_Json_Value), Dictionary__string__Uno_Data_Json_Value__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Uno_Data_Json_Value__Rehash(Dictionary__string__Uno_Data_Json_Value* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(i).Value);
        }
    }
}

bool Dictionary__string__Uno_Data_Json_Value__Remove(Dictionary__string__Uno_Data_Json_Value* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Data_Json_Value__set_Item(Dictionary__string__Uno_Data_Json_Value* __this, ::uString* key, ::app::Uno::Data::Json::Value* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Uno_Data_Json_Value__TryGetValue(Dictionary__string__Uno_Data_Json_Value* __this, ::uString* key, ::app::Uno::Data::Json::Value** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Json_Value>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Data_Json_Value__Uno_Collections_ICollection_Add(Dictionary__string__Uno_Data_Json_Value* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Data_Json_Value item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Uno_Data_Json_Value__Uno_Collections_ICollection_Contains(Dictionary__string__Uno_Data_Json_Value* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Data_Json_Value item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Uno_Data_Json_Value__Uno_Collections_ICollection_Remove(Dictionary__string__Uno_Data_Json_Value* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Data_Json_Value item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Uno_Data_Xml_XmlEncoding__uType* Dictionary__string__Uno_Data_Xml_XmlEncoding__typeof()
{
    static ::uStaticStrong<Dictionary__string__Uno_Data_Xml_XmlEncoding__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Uno_Data_Xml_XmlEncoding__uType*)::uAllocClassType(sizeof(Dictionary__string__Uno_Data_Xml_XmlEncoding__uType), "Uno.Collections.Dictionary<string,Uno.Data.Xml.XmlEncoding>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Uno_Data_Xml_XmlEncoding__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Uno_Data_Xml_XmlEncoding__typeof(), offsetof(Dictionary__string__Uno_Data_Xml_XmlEncoding__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Data_Xml_XmlEncoding___typeof(), offsetof(Dictionary__string__Uno_Data_Xml_XmlEncoding__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Uno_Data_Xml_XmlEncoding, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Uno_Data_Xml_XmlEncoding, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Uno_Data_Xml_XmlEncoding, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Uno_Data_Xml_XmlEncoding, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Uno_Data_Xml_XmlEncoding, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Uno_Data_Xml_XmlEncoding__Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Data::Xml::XmlEncoding__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Uno_Data_Xml_XmlEncoding__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Uno_Data_Xml_XmlEncoding__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Uno_Data_Xml_XmlEncoding__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Uno_Data_Xml_XmlEncoding__get_Item, 0, false, ::app::Uno::Data::Xml::XmlEncoding__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Uno_Data_Xml_XmlEncoding__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Data_Xml_XmlEncoding__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Uno_Data_Xml_XmlEncoding__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Data_Xml_XmlEncoding__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Uno_Data_Xml_XmlEncoding__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Data_Xml_XmlEncoding__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Data_Xml_XmlEncoding__New_1, 0, true, Dictionary__string__Uno_Data_Xml_XmlEncoding__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Data_Xml_XmlEncoding__New_2, 0, true, Dictionary__string__Uno_Data_Xml_XmlEncoding__typeof(), ::app::Uno::Collections::IDictionary__string__Uno_Data_Xml_XmlEncoding__typeof()),
        ::uNewFunction("Remove", Dictionary__string__Uno_Data_Xml_XmlEncoding__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Uno_Data_Xml_XmlEncoding__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Data::Xml::XmlEncoding__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Uno_Data_Xml_XmlEncoding__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::Data::Xml::XmlEncoding__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Uno_Data_Xml_XmlEncoding__GetEnumerator_boxed(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Data_Xml_XmlEncoding__typeof(), __this->GetEnumerator());
}

void Dictionary__string__Uno_Data_Xml_XmlEncoding___ObjInit(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Uno_Data_Xml_XmlEncoding___ObjInit_1(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Data_Xml_XmlEncoding_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Uno_Data_Xml_XmlEncoding keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Uno_Data_Xml_XmlEncoding_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Uno_Data_Xml_XmlEncoding__Add(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this, ::uString* key, int value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Data_Xml_XmlEncoding__Clear(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Uno_Data_Xml_XmlEncoding__ContainsKey(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Uno_Data_Xml_XmlEncoding__get_Count(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this)
{
    return __this->_count;
}

int Dictionary__string__Uno_Data_Xml_XmlEncoding__get_Item(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Data_Xml_XmlEncoding* Dictionary__string__Uno_Data_Xml_XmlEncoding__get_Keys(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Data_Xml_XmlEncoding__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Data_Xml_XmlEncoding* Dictionary__string__Uno_Data_Xml_XmlEncoding__get_Values(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Data_Xml_XmlEncoding__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Data_Xml_XmlEncoding Dictionary__string__Uno_Data_Xml_XmlEncoding__GetEnumerator(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Data_Xml_XmlEncoding__New_1(NULL, __this);
}

Dictionary__string__Uno_Data_Xml_XmlEncoding* Dictionary__string__Uno_Data_Xml_XmlEncoding__New_1(::uStatic* __this)
{
    Dictionary__string__Uno_Data_Xml_XmlEncoding* inst = (Dictionary__string__Uno_Data_Xml_XmlEncoding*)::uAllocObject(sizeof(Dictionary__string__Uno_Data_Xml_XmlEncoding), Dictionary__string__Uno_Data_Xml_XmlEncoding__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Uno_Data_Xml_XmlEncoding* Dictionary__string__Uno_Data_Xml_XmlEncoding__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Uno_Data_Xml_XmlEncoding* inst = (Dictionary__string__Uno_Data_Xml_XmlEncoding*)::uAllocObject(sizeof(Dictionary__string__Uno_Data_Xml_XmlEncoding), Dictionary__string__Uno_Data_Xml_XmlEncoding__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Uno_Data_Xml_XmlEncoding__Rehash(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(i).Value);
        }
    }
}

bool Dictionary__string__Uno_Data_Xml_XmlEncoding__Remove(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Data_Xml_XmlEncoding__set_Item(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this, ::uString* key, int value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Uno_Data_Xml_XmlEncoding__TryGetValue(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this, ::uString* key, int* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Data_Xml_XmlEncoding>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Data_Xml_XmlEncoding__Uno_Collections_ICollection_Add(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Data_Xml_XmlEncoding item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Uno_Data_Xml_XmlEncoding__Uno_Collections_ICollection_Contains(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Data_Xml_XmlEncoding item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Uno_Data_Xml_XmlEncoding__Uno_Collections_ICollection_Remove(Dictionary__string__Uno_Data_Xml_XmlEncoding* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Data_Xml_XmlEncoding item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__uType* Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof()
{
    static ::uStaticStrong<Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__uType*)::uAllocClassType(sizeof(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__uType), "Uno.Collections.Dictionary<string,Uno.Runtime.Implementation.ShaderBackends.OpenGL.GLCompiledProgram>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof(), offsetof(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram___typeof(), offsetof(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLCompiledProgram__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__get_Item, 0, false, ::app::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLCompiledProgram__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__New_1, 0, true, Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__New_2, 0, true, Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof(), ::app::Uno::Collections::IDictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof()),
        ::uNewFunction("Remove", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLCompiledProgram__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLCompiledProgram__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__GetEnumerator_boxed(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof(), __this->GetEnumerator());
}

void Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram___ObjInit(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram___ObjInit_1(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__Add(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this, ::uString* key, ::app::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLCompiledProgram* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__Clear(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__ContainsKey(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__get_Count(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this)
{
    return __this->_count;
}

::app::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLCompiledProgram* Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__get_Item(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__get_Keys(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__get_Values(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__GetEnumerator(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__New_1(NULL, __this);
}

Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__New_1(::uStatic* __this)
{
    Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* inst = (Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram*)::uAllocObject(sizeof(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram), Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* inst = (Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram*)::uAllocObject(sizeof(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram), Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__Rehash(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(i).Value);
        }
    }
}

bool Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__Remove(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__set_Item(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this, ::uString* key, ::app::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLCompiledProgram* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__TryGetValue(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this, ::uString* key, ::app::Uno::Runtime::Implementation::ShaderBackends::OpenGL::GLCompiledProgram** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__Uno_Collections_ICollection_Add(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__Uno_Collections_ICollection_Contains(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram__Uno_Collections_ICollection_Remove(Dictionary__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_Runtime_Implementation_ShaderBackends_OpenGL_GLCompiledProgram item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___uType* Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof()
{
    static ::uStaticStrong<Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___uType*)::uAllocClassType(sizeof(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___uType), "Uno.Collections.Dictionary<string,Uno.WeakReference<Fuse.Resources.HttpImageSourceImpl>>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof(), offsetof(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl____typeof(), offsetof(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___Add, 0, false, ::app::Uno::String__typeof(), ::app::Uno::WeakReference__Fuse_Resources_HttpImageSourceImpl__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Count", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___get_Item, 0, false, ::app::Uno::WeakReference__Fuse_Resources_HttpImageSourceImpl__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunction("get_Keys", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof()),
        ::uNewFunction("get_Values", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___New_1, 0, true, Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof()),
        ::uNewFunction(".ctor", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___New_2, 0, true, Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof(), ::app::Uno::Collections::IDictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof()),
        ::uNewFunction("Remove", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___set_Item, 0, false, ::app::Uno::String__typeof(), ::app::Uno::WeakReference__Fuse_Resources_HttpImageSourceImpl__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::String__typeof(), ::app::Uno::WeakReference__Fuse_Resources_HttpImageSourceImpl__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___GetEnumerator_boxed(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof(), __this->GetEnumerator());
}

void Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl____ObjInit(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl____ObjInit_1(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_string_Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl__::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_string_Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl__::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___Add(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this, ::uString* key, ::app::Uno::WeakReference__Fuse_Resources_HttpImageSourceImpl* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___Clear(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___ContainsKey(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___get_Count(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this)
{
    return __this->_count;
}

::app::Uno::WeakReference__Fuse_Resources_HttpImageSourceImpl* Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___get_Item(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___get_Keys(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___get_Values(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_ Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___GetEnumerator(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___New_1(NULL, __this);
}

Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___New_1(::uStatic* __this)
{
    Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* inst = (Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_*)::uAllocObject(sizeof(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_), Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* inst = (Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_*)::uAllocObject(sizeof(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_), Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___Rehash(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(i).Value);
        }
    }
}

bool Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___Remove(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this, ::uString* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___set_Item(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this, ::uString* key, ::app::Uno::WeakReference__Fuse_Resources_HttpImageSourceImpl* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___TryGetValue(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this, ::uString* key, ::app::Uno::WeakReference__Fuse_Resources_HttpImageSourceImpl** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uString*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__string(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___Uno_Collections_ICollection_Add(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___Uno_Collections_ICollection_Contains(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl___Uno_Collections_ICollection_Remove(Dictionary__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_* __this, ::app::Uno::Collections::KeyValuePair__string__Uno_WeakReference_Fuse_Resources_HttpImageSourceImpl_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__uType* Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof()
{
    static ::uStaticStrong<Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__uType*)::uAllocClassType(sizeof(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__uType), "Uno.Collections.Dictionary<Uno.Content.Fonts.BitmapFont_CharPair,float>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof(), offsetof(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_Content_Fonts_BitmapFont_CharPair_float___typeof(), offsetof(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__Add, 0, false, ::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof(), ::app::Uno::Float__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof()),
        ::uNewFunction("get_Count", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__get_Item, 0, false, ::app::Uno::Float__typeof(), ::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof()),
        ::uNewFunction("get_Values", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__New_1, 0, true, Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__New_2, 0, true, Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof(), ::app::Uno::Collections::IDictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof()),
        ::uNewFunction("Remove", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__set_Item, 0, false, ::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof(), ::app::Uno::Float__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof(), ::app::Uno::Float__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__GetEnumerator_boxed(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof(), __this->GetEnumerator());
}

void Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float___ObjInit(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float___ObjInit_1(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_Content_Fonts_BitmapFont_CharPair_float_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Uno_Content_Fonts_BitmapFont_CharPair__float keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Uno_Content_Fonts_BitmapFont_CharPair_float_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__Add(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this, ::app::Uno::Content::Fonts::BitmapFont_CharPair key, float value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox(::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Content_Fonts_BitmapFont_CharPair(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__Clear(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(i).Value = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(i).Key = ::uDefault< ::app::Uno::Content::Fonts::BitmapFont_CharPair>();
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__ContainsKey(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this, ::app::Uno::Content::Fonts::BitmapFont_CharPair key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox(::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Content_Fonts_BitmapFont_CharPair(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__get_Count(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this)
{
    return __this->_count;
}

float Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__get_Item(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this, ::app::Uno::Content::Fonts::BitmapFont_CharPair key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox(::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Content_Fonts_BitmapFont_CharPair(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Content_Fonts_BitmapFont_CharPair__float* Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__get_Keys(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Content_Fonts_BitmapFont_CharPair__float__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Content_Fonts_BitmapFont_CharPair__float* Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__get_Values(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Content_Fonts_BitmapFont_CharPair__float__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Uno_Content_Fonts_BitmapFont_CharPair__float Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__GetEnumerator(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Uno_Content_Fonts_BitmapFont_CharPair__float__New_1(NULL, __this);
}

Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__New_1(::uStatic* __this)
{
    Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* inst = (Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float*)::uAllocObject(sizeof(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float), Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* inst = (Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float*)::uAllocObject(sizeof(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float), Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__Rehash(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(i).Value);
        }
    }
}

bool Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__Remove(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this, ::app::Uno::Content::Fonts::BitmapFont_CharPair key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox(::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Content_Fonts_BitmapFont_CharPair(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Value = 0;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Key = ::uDefault< ::app::Uno::Content::Fonts::BitmapFont_CharPair>();
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__set_Item(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this, ::app::Uno::Content::Fonts::BitmapFont_CharPair key, float value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox(::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Content_Fonts_BitmapFont_CharPair(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__TryGetValue(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this, ::app::Uno::Content::Fonts::BitmapFont_CharPair key, float* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uBox(::app::Uno::Content::Fonts::BitmapFont_CharPair__typeof(), key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Content_Fonts_BitmapFont_CharPair(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Content_Fonts_BitmapFont_CharPair__float>(x).State == 0)
        {
            *value = 0;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__Uno_Collections_ICollection_Add(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this, ::app::Uno::Collections::KeyValuePair__Uno_Content_Fonts_BitmapFont_CharPair__float item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__Uno_Collections_ICollection_Contains(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this, ::app::Uno::Collections::KeyValuePair__Uno_Content_Fonts_BitmapFont_CharPair__float item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float__Uno_Collections_ICollection_Remove(Dictionary__Uno_Content_Fonts_BitmapFont_CharPair__float* __this, ::app::Uno::Collections::KeyValuePair__Uno_Content_Fonts_BitmapFont_CharPair__float item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Uno_Type__object__uType* Dictionary__Uno_Type__object__typeof()
{
    static ::uStaticStrong<Dictionary__Uno_Type__object__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Uno_Type__object__uType*)::uAllocClassType(sizeof(Dictionary__Uno_Type__object__uType), "Uno.Collections.Dictionary<Uno.Type,object>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Uno_Type__object__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Uno_Type__object__typeof(), offsetof(Dictionary__Uno_Type__object__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_Type_object___typeof(), offsetof(Dictionary__Uno_Type__object__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Uno_Type__object, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Uno_Type__object, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Uno_Type__object, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Uno_Type__object, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Uno_Type__object, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Uno_Type__object__Add, 0, false, ::uType__typeof(), ::uObject__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Uno_Type__object__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Uno_Type__object__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::uType__typeof()),
        ::uNewFunction("get_Count", Dictionary__Uno_Type__object__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Uno_Type__object__get_Item, 0, false, ::uObject__typeof(), ::uType__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Uno_Type__object__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Type__object__typeof()),
        ::uNewFunction("get_Values", Dictionary__Uno_Type__object__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Type__object__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Uno_Type__object__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__object__typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_Type__object__New_1, 0, true, Dictionary__Uno_Type__object__typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_Type__object__New_2, 0, true, Dictionary__Uno_Type__object__typeof(), ::app::Uno::Collections::IDictionary__Uno_Type__object__typeof()),
        ::uNewFunction("Remove", Dictionary__Uno_Type__object__Remove, 0, false, ::app::Uno::Bool__typeof(), ::uType__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Uno_Type__object__set_Item, 0, false, ::uType__typeof(), ::uObject__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Uno_Type__object__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::uType__typeof(), ::uObject__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Uno_Type__object__GetEnumerator_boxed(Dictionary__Uno_Type__object* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__object__typeof(), __this->GetEnumerator());
}

void Dictionary__Uno_Type__object___ObjInit(Dictionary__Uno_Type__object* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Uno_Type__object___ObjInit_1(Dictionary__Uno_Type__object* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_Type_object_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Uno_Type__object keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Uno_Type_object_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Uno_Type__object__Add(Dictionary__Uno_Type__object* __this, ::uType* key, ::uObject* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Type__object__Clear(Dictionary__Uno_Type__object* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Uno_Type__object__ContainsKey(Dictionary__Uno_Type__object* __this, ::uType* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Uno_Type__object__get_Count(Dictionary__Uno_Type__object* __this)
{
    return __this->_count;
}

::uObject* Dictionary__Uno_Type__object__get_Item(Dictionary__Uno_Type__object* __this, ::uType* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Type__object* Dictionary__Uno_Type__object__get_Keys(Dictionary__Uno_Type__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Type__object__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Type__object* Dictionary__Uno_Type__object__get_Values(Dictionary__Uno_Type__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Type__object__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__object Dictionary__Uno_Type__object__GetEnumerator(Dictionary__Uno_Type__object* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__object__New_1(NULL, __this);
}

Dictionary__Uno_Type__object* Dictionary__Uno_Type__object__New_1(::uStatic* __this)
{
    Dictionary__Uno_Type__object* inst = (Dictionary__Uno_Type__object*)::uAllocObject(sizeof(Dictionary__Uno_Type__object), Dictionary__Uno_Type__object__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Uno_Type__object* Dictionary__Uno_Type__object__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Uno_Type__object* inst = (Dictionary__Uno_Type__object*)::uAllocObject(sizeof(Dictionary__Uno_Type__object), Dictionary__Uno_Type__object__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Uno_Type__object__Rehash(Dictionary__Uno_Type__object* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(i).Value);
        }
    }
}

bool Dictionary__Uno_Type__object__Remove(Dictionary__Uno_Type__object* __this, ::uType* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Type__object__set_Item(Dictionary__Uno_Type__object* __this, ::uType* key, ::uObject* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Uno_Type__object__TryGetValue(Dictionary__Uno_Type__object* __this, ::uType* key, ::uObject** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__object>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Type__object__Uno_Collections_ICollection_Add(Dictionary__Uno_Type__object* __this, ::app::Uno::Collections::KeyValuePair__Uno_Type__object item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Uno_Type__object__Uno_Collections_ICollection_Contains(Dictionary__Uno_Type__object* __this, ::app::Uno::Collections::KeyValuePair__Uno_Type__object item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Uno_Type__object__Uno_Collections_ICollection_Remove(Dictionary__Uno_Type__object* __this, ::app::Uno::Collections::KeyValuePair__Uno_Type__object item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Uno_Type__Uno_Reflection_CppField____uType* Dictionary__Uno_Type__Uno_Reflection_CppField____typeof()
{
    static ::uStaticStrong<Dictionary__Uno_Type__Uno_Reflection_CppField____uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Uno_Type__Uno_Reflection_CppField____uType*)::uAllocClassType(sizeof(Dictionary__Uno_Type__Uno_Reflection_CppField____uType), "Uno.Collections.Dictionary<Uno.Type,Uno.Reflection.CppField[]>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Uno_Type__Uno_Reflection_CppField____GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Uno_Type__Uno_Reflection_CppField____typeof(), offsetof(Dictionary__Uno_Type__Uno_Reflection_CppField____uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_Type_Uno_Reflection_CppField_____typeof(), offsetof(Dictionary__Uno_Type__Uno_Reflection_CppField____uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Uno_Type__Uno_Reflection_CppField__, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Uno_Type__Uno_Reflection_CppField__, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField____typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Uno_Type__Uno_Reflection_CppField__, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Uno_Type__Uno_Reflection_CppField__, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Uno_Type__Uno_Reflection_CppField__, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Uno_Type__Uno_Reflection_CppField____Add, 0, false, ::uType__typeof(), ::uGetArrayType(::app::Uno::Reflection::CppField__typeof())),
        ::uNewFunctionVoid("Clear", Dictionary__Uno_Type__Uno_Reflection_CppField____Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Uno_Type__Uno_Reflection_CppField____ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::uType__typeof()),
        ::uNewFunction("get_Count", Dictionary__Uno_Type__Uno_Reflection_CppField____get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Uno_Type__Uno_Reflection_CppField____get_Item, 0, false, ::uGetArrayType(::app::Uno::Reflection::CppField__typeof()), ::uType__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Uno_Type__Uno_Reflection_CppField____get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Type__Uno_Reflection_CppField____typeof()),
        ::uNewFunction("get_Values", Dictionary__Uno_Type__Uno_Reflection_CppField____get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Type__Uno_Reflection_CppField____typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Uno_Type__Uno_Reflection_CppField____GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__Uno_Reflection_CppField____typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_Type__Uno_Reflection_CppField____New_1, 0, true, Dictionary__Uno_Type__Uno_Reflection_CppField____typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_Type__Uno_Reflection_CppField____New_2, 0, true, Dictionary__Uno_Type__Uno_Reflection_CppField____typeof(), ::app::Uno::Collections::IDictionary__Uno_Type__Uno_Reflection_CppField____typeof()),
        ::uNewFunction("Remove", Dictionary__Uno_Type__Uno_Reflection_CppField____Remove, 0, false, ::app::Uno::Bool__typeof(), ::uType__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Uno_Type__Uno_Reflection_CppField____set_Item, 0, false, ::uType__typeof(), ::uGetArrayType(::app::Uno::Reflection::CppField__typeof())),
        ::uNewFunction("TryGetValue", Dictionary__Uno_Type__Uno_Reflection_CppField____TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::uType__typeof(), ::uGetArrayType(::app::Uno::Reflection::CppField__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Uno_Type__Uno_Reflection_CppField____GetEnumerator_boxed(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__Uno_Reflection_CppField____typeof(), __this->GetEnumerator());
}

void Dictionary__Uno_Type__Uno_Reflection_CppField_____ObjInit(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField____typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Uno_Type__Uno_Reflection_CppField_____ObjInit_1(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_Type_Uno_Reflection_CppField___::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Uno_Type__Uno_Reflection_CppField__ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Uno_Type_Uno_Reflection_CppField___::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Uno_Type__Uno_Reflection_CppField____Add(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this, ::uType* key, ::uArray* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Type__Uno_Reflection_CppField____Clear(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Uno_Type__Uno_Reflection_CppField____ContainsKey(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this, ::uType* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Uno_Type__Uno_Reflection_CppField____get_Count(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this)
{
    return __this->_count;
}

::uArray* Dictionary__Uno_Type__Uno_Reflection_CppField____get_Item(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this, ::uType* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Type__Uno_Reflection_CppField__* Dictionary__Uno_Type__Uno_Reflection_CppField____get_Keys(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Type__Uno_Reflection_CppField____New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Type__Uno_Reflection_CppField__* Dictionary__Uno_Type__Uno_Reflection_CppField____get_Values(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Type__Uno_Reflection_CppField____New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__Uno_Reflection_CppField__ Dictionary__Uno_Type__Uno_Reflection_CppField____GetEnumerator(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__Uno_Reflection_CppField____New_1(NULL, __this);
}

Dictionary__Uno_Type__Uno_Reflection_CppField__* Dictionary__Uno_Type__Uno_Reflection_CppField____New_1(::uStatic* __this)
{
    Dictionary__Uno_Type__Uno_Reflection_CppField__* inst = (Dictionary__Uno_Type__Uno_Reflection_CppField__*)::uAllocObject(sizeof(Dictionary__Uno_Type__Uno_Reflection_CppField__), Dictionary__Uno_Type__Uno_Reflection_CppField____typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Uno_Type__Uno_Reflection_CppField__* Dictionary__Uno_Type__Uno_Reflection_CppField____New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Uno_Type__Uno_Reflection_CppField__* inst = (Dictionary__Uno_Type__Uno_Reflection_CppField__*)::uAllocObject(sizeof(Dictionary__Uno_Type__Uno_Reflection_CppField__), Dictionary__Uno_Type__Uno_Reflection_CppField____typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Uno_Type__Uno_Reflection_CppField____Rehash(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField____typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(i).Value);
        }
    }
}

bool Dictionary__Uno_Type__Uno_Reflection_CppField____Remove(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this, ::uType* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Type__Uno_Reflection_CppField____set_Item(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this, ::uType* key, ::uArray* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Uno_Type__Uno_Reflection_CppField____TryGetValue(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this, ::uType* key, ::uArray** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppField__>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Type__Uno_Reflection_CppField____Uno_Collections_ICollection_Add(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this, ::app::Uno::Collections::KeyValuePair__Uno_Type__Uno_Reflection_CppField__ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Uno_Type__Uno_Reflection_CppField____Uno_Collections_ICollection_Contains(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this, ::app::Uno::Collections::KeyValuePair__Uno_Type__Uno_Reflection_CppField__ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Uno_Type__Uno_Reflection_CppField____Uno_Collections_ICollection_Remove(Dictionary__Uno_Type__Uno_Reflection_CppField__* __this, ::app::Uno::Collections::KeyValuePair__Uno_Type__Uno_Reflection_CppField__ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Uno_Type__Uno_Reflection_CppFunction____uType* Dictionary__Uno_Type__Uno_Reflection_CppFunction____typeof()
{
    static ::uStaticStrong<Dictionary__Uno_Type__Uno_Reflection_CppFunction____uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Uno_Type__Uno_Reflection_CppFunction____uType*)::uAllocClassType(sizeof(Dictionary__Uno_Type__Uno_Reflection_CppFunction____uType), "Uno.Collections.Dictionary<Uno.Type,Uno.Reflection.CppFunction[]>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Uno_Type__Uno_Reflection_CppFunction____GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Uno_Type__Uno_Reflection_CppFunction____typeof(), offsetof(Dictionary__Uno_Type__Uno_Reflection_CppFunction____uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_Type_Uno_Reflection_CppFunction_____typeof(), offsetof(Dictionary__Uno_Type__Uno_Reflection_CppFunction____uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Uno_Type__Uno_Reflection_CppFunction__, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Uno_Type__Uno_Reflection_CppFunction__, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction____typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Uno_Type__Uno_Reflection_CppFunction__, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Uno_Type__Uno_Reflection_CppFunction__, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Uno_Type__Uno_Reflection_CppFunction__, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Uno_Type__Uno_Reflection_CppFunction____Add, 0, false, ::uType__typeof(), ::uGetArrayType(::app::Uno::Reflection::CppFunction__typeof())),
        ::uNewFunctionVoid("Clear", Dictionary__Uno_Type__Uno_Reflection_CppFunction____Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Uno_Type__Uno_Reflection_CppFunction____ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::uType__typeof()),
        ::uNewFunction("get_Count", Dictionary__Uno_Type__Uno_Reflection_CppFunction____get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Uno_Type__Uno_Reflection_CppFunction____get_Item, 0, false, ::uGetArrayType(::app::Uno::Reflection::CppFunction__typeof()), ::uType__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Uno_Type__Uno_Reflection_CppFunction____get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Type__Uno_Reflection_CppFunction____typeof()),
        ::uNewFunction("get_Values", Dictionary__Uno_Type__Uno_Reflection_CppFunction____get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Type__Uno_Reflection_CppFunction____typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Uno_Type__Uno_Reflection_CppFunction____GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__Uno_Reflection_CppFunction____typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_Type__Uno_Reflection_CppFunction____New_1, 0, true, Dictionary__Uno_Type__Uno_Reflection_CppFunction____typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_Type__Uno_Reflection_CppFunction____New_2, 0, true, Dictionary__Uno_Type__Uno_Reflection_CppFunction____typeof(), ::app::Uno::Collections::IDictionary__Uno_Type__Uno_Reflection_CppFunction____typeof()),
        ::uNewFunction("Remove", Dictionary__Uno_Type__Uno_Reflection_CppFunction____Remove, 0, false, ::app::Uno::Bool__typeof(), ::uType__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Uno_Type__Uno_Reflection_CppFunction____set_Item, 0, false, ::uType__typeof(), ::uGetArrayType(::app::Uno::Reflection::CppFunction__typeof())),
        ::uNewFunction("TryGetValue", Dictionary__Uno_Type__Uno_Reflection_CppFunction____TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::uType__typeof(), ::uGetArrayType(::app::Uno::Reflection::CppFunction__typeof())));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Uno_Type__Uno_Reflection_CppFunction____GetEnumerator_boxed(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__Uno_Reflection_CppFunction____typeof(), __this->GetEnumerator());
}

void Dictionary__Uno_Type__Uno_Reflection_CppFunction_____ObjInit(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction____typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Uno_Type__Uno_Reflection_CppFunction_____ObjInit_1(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_Type_Uno_Reflection_CppFunction___::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Uno_Type__Uno_Reflection_CppFunction__ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Uno_Type_Uno_Reflection_CppFunction___::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Uno_Type__Uno_Reflection_CppFunction____Add(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this, ::uType* key, ::uArray* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Type__Uno_Reflection_CppFunction____Clear(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Uno_Type__Uno_Reflection_CppFunction____ContainsKey(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this, ::uType* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Uno_Type__Uno_Reflection_CppFunction____get_Count(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this)
{
    return __this->_count;
}

::uArray* Dictionary__Uno_Type__Uno_Reflection_CppFunction____get_Item(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this, ::uType* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Type__Uno_Reflection_CppFunction__* Dictionary__Uno_Type__Uno_Reflection_CppFunction____get_Keys(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_Type__Uno_Reflection_CppFunction____New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Type__Uno_Reflection_CppFunction__* Dictionary__Uno_Type__Uno_Reflection_CppFunction____get_Values(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_Type__Uno_Reflection_CppFunction____New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__Uno_Reflection_CppFunction__ Dictionary__Uno_Type__Uno_Reflection_CppFunction____GetEnumerator(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Uno_Type__Uno_Reflection_CppFunction____New_1(NULL, __this);
}

Dictionary__Uno_Type__Uno_Reflection_CppFunction__* Dictionary__Uno_Type__Uno_Reflection_CppFunction____New_1(::uStatic* __this)
{
    Dictionary__Uno_Type__Uno_Reflection_CppFunction__* inst = (Dictionary__Uno_Type__Uno_Reflection_CppFunction__*)::uAllocObject(sizeof(Dictionary__Uno_Type__Uno_Reflection_CppFunction__), Dictionary__Uno_Type__Uno_Reflection_CppFunction____typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Uno_Type__Uno_Reflection_CppFunction__* Dictionary__Uno_Type__Uno_Reflection_CppFunction____New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Uno_Type__Uno_Reflection_CppFunction__* inst = (Dictionary__Uno_Type__Uno_Reflection_CppFunction__*)::uAllocObject(sizeof(Dictionary__Uno_Type__Uno_Reflection_CppFunction__), Dictionary__Uno_Type__Uno_Reflection_CppFunction____typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Uno_Type__Uno_Reflection_CppFunction____Rehash(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction____typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(i).Value);
        }
    }
}

bool Dictionary__Uno_Type__Uno_Reflection_CppFunction____Remove(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this, ::uType* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Type__Uno_Reflection_CppFunction____set_Item(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this, ::uType* key, ::uArray* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Uno_Type__Uno_Reflection_CppFunction____TryGetValue(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this, ::uType* key, ::uArray** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::uType*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_Type(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_Type__Uno_Reflection_CppFunction__>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_Type__Uno_Reflection_CppFunction____Uno_Collections_ICollection_Add(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this, ::app::Uno::Collections::KeyValuePair__Uno_Type__Uno_Reflection_CppFunction__ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Uno_Type__Uno_Reflection_CppFunction____Uno_Collections_ICollection_Contains(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this, ::app::Uno::Collections::KeyValuePair__Uno_Type__Uno_Reflection_CppFunction__ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Uno_Type__Uno_Reflection_CppFunction____Uno_Collections_ICollection_Remove(Dictionary__Uno_Type__Uno_Reflection_CppFunction__* __this, ::app::Uno::Collections::KeyValuePair__Uno_Type__Uno_Reflection_CppFunction__ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__uType* Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof()
{
    static ::uStaticStrong<Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__uType*)::uAllocClassType(sizeof(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__uType), "Uno.Collections.Dictionary<Uno.UX.FileSource,Uno.Content.Fonts.FontFace>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof(), offsetof(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_UX_FileSource_Uno_Content_Fonts_FontFace___typeof(), offsetof(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__Add, 0, false, ::app::Uno::UX::FileSource__typeof(), ::app::Uno::Content::Fonts::FontFace__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunction("get_Count", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__get_Item, 0, false, ::app::Uno::Content::Fonts::FontFace__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof()),
        ::uNewFunction("get_Values", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__New_1, 0, true, Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__New_2, 0, true, Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof(), ::app::Uno::Collections::IDictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof()),
        ::uNewFunction("Remove", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__set_Item, 0, false, ::app::Uno::UX::FileSource__typeof(), ::app::Uno::Content::Fonts::FontFace__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::FileSource__typeof(), ::app::Uno::Content::Fonts::FontFace__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__GetEnumerator_boxed(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof(), __this->GetEnumerator());
}

void Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace___ObjInit(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace___ObjInit_1(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_UX_FileSource_Uno_Content_Fonts_FontFace_::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Uno_UX_FileSource__Uno_Content_Fonts_FontFace keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Uno_UX_FileSource_Uno_Content_Fonts_FontFace_::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__Add(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this, ::app::Uno::UX::FileSource* key, ::app::Uno::Content::Fonts::FontFace* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__Clear(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__ContainsKey(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this, ::app::Uno::UX::FileSource* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__get_Count(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this)
{
    return __this->_count;
}

::app::Uno::Content::Fonts::FontFace* Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__get_Item(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this, ::app::Uno::UX::FileSource* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__get_Keys(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__get_Values(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Uno_UX_FileSource__Uno_Content_Fonts_FontFace Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__GetEnumerator(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__New_1(NULL, __this);
}

Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__New_1(::uStatic* __this)
{
    Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* inst = (Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace*)::uAllocObject(sizeof(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace), Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* inst = (Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace*)::uAllocObject(sizeof(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace), Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__Rehash(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(i).Value);
        }
    }
}

bool Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__Remove(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this, ::app::Uno::UX::FileSource* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__set_Item(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this, ::app::Uno::UX::FileSource* key, ::app::Uno::Content::Fonts::FontFace* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__TryGetValue(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this, ::app::Uno::UX::FileSource* key, ::app::Uno::Content::Fonts::FontFace** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_Content_Fonts_FontFace>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__Uno_Collections_ICollection_Add(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this, ::app::Uno::Collections::KeyValuePair__Uno_UX_FileSource__Uno_Content_Fonts_FontFace item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__Uno_Collections_ICollection_Contains(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this, ::app::Uno::Collections::KeyValuePair__Uno_UX_FileSource__Uno_Content_Fonts_FontFace item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace__Uno_Collections_ICollection_Remove(Dictionary__Uno_UX_FileSource__Uno_Content_Fonts_FontFace* __this, ::app::Uno::Collections::KeyValuePair__Uno_UX_FileSource__Uno_Content_Fonts_FontFace item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

// This file was generated based on 'C:\ProgramData\Uno\Packages\UnoCore\0.13.2\Source\Uno\Collections\$.uno'.
// WARNING: Changes might be lost if you edit this file directly.

Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___uType* Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof()
{
    static ::uStaticStrong<Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___uType*> type;
    if (type != NULL) return type;

    type = (Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___uType*)::uAllocClassType(sizeof(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___uType), "Uno.Collections.Dictionary<Uno.UX.FileSource,Uno.WeakReference<Fuse.Resources.FileImageSourceImpl>>", false, 2, 1, 0);

    type->__interface_1.__fp_GetEnumerator = (::uObject*(*)(void*))Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___GetEnumerator_boxed;

    type->SetInterfaces(
        ::app::Uno::Collections::IDictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof(), offsetof(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___uType, __interface_0),
        ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_UX_FileSource_Uno_WeakReference_Fuse_Resources_FileImageSourceImpl____typeof(), offsetof(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___uType, __interface_1));

    type->SetStrongRefs(
        "_buckets", offsetof(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_, _buckets));

    type->SetFields(4,
        ::uNewField("_buckets", NULL, offsetof(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_, _buckets), ::uGetArrayType(::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof())),
        ::uNewField("_count", NULL, offsetof(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_, _count), ::app::Uno::Int__typeof()),
        ::uNewField("_dummies", NULL, offsetof(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_, _dummies), ::app::Uno::Int__typeof()),
        ::uNewField("_version", NULL, offsetof(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_, _version), ::app::Uno::Int__typeof()));

    type->SetFunctions(13,
        ::uNewFunctionVoid("Add", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___Add, 0, false, ::app::Uno::UX::FileSource__typeof(), ::app::Uno::WeakReference__Fuse_Resources_FileImageSourceImpl__typeof()),
        ::uNewFunctionVoid("Clear", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___Clear, 0, false),
        ::uNewFunction("ContainsKey", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___ContainsKey, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunction("get_Count", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___get_Count, 0, false, ::app::Uno::Int__typeof()),
        ::uNewFunction("get_Item", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___get_Item, 0, false, ::app::Uno::WeakReference__Fuse_Resources_FileImageSourceImpl__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunction("get_Keys", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___get_Keys, 0, false, ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof()),
        ::uNewFunction("get_Values", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___get_Values, 0, false, ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof()),
        ::uNewFunction("GetEnumerator", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___GetEnumerator, 0, false, ::app::Uno::Collections::Dictionary2_Enumerator__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___New_1, 0, true, Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof()),
        ::uNewFunction(".ctor", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___New_2, 0, true, Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof(), ::app::Uno::Collections::IDictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof()),
        ::uNewFunction("Remove", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___Remove, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::FileSource__typeof()),
        ::uNewFunctionVoid("set_Item", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___set_Item, 0, false, ::app::Uno::UX::FileSource__typeof(), ::app::Uno::WeakReference__Fuse_Resources_FileImageSourceImpl__typeof()),
        ::uNewFunction("TryGetValue", Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___TryGetValue, 0, false, ::app::Uno::Bool__typeof(), ::app::Uno::UX::FileSource__typeof(), ::app::Uno::WeakReference__Fuse_Resources_FileImageSourceImpl__typeof()));

    ::uRegisterType(type);
    return type;
}

::uObject* Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___GetEnumerator_boxed(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this)
{
    return ::uBox(::app::Uno::Collections::Dictionary2_Enumerator__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof(), __this->GetEnumerator());
}

void Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl____ObjInit(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this)
{
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof(), 8);
    __this->_count = 0;
    __this->_dummies = 0;
}

void Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl____ObjInit_1(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this, ::uObject* dictionary)
{
    __this->_ObjInit();

    for (::uObject* enum_123 = ::app::Uno::Collections::IEnumerable__Uno_Collections_KeyValuePair_Uno_UX_FileSource_Uno_WeakReference_Fuse_Resources_FileImageSourceImpl__::GetEnumerator(::uPtr< ::uObject*>(dictionary)); ::app::Uno::Collections::IEnumerator::MoveNext(::uPtr< ::uObject*>(enum_123)); )
    {
        ::app::Uno::Collections::KeyValuePair__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_ keyValuePair = ::app::Uno::Collections::IEnumerator__Uno_Collections_KeyValuePair_Uno_UX_FileSource_Uno_WeakReference_Fuse_Resources_FileImageSourceImpl__::Current(::uPtr< ::uObject*>(enum_123));
        __this->Add(keyValuePair.Key(), keyValuePair.Value());
    }
}

void Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___Add(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this, ::app::Uno::UX::FileSource* key, ::app::Uno::WeakReference__Fuse_Resources_FileImageSourceImpl* value)
{
    if ((__this->_count + __this->_dummies) > (::uPtr< ::uArray*>(__this->_buckets)->Length() / 2))
    {
        __this->Rehash();
    }

    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 0)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Key = key;
            __this->_count++;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 2)
        {
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State = 1;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Value = value;
            ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Key = key;
            __this->_count++;
            __this->_dummies--;
            __this->_version++;
            return;
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Key, key))
            {
                U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary already contains the given key")));
            }
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___Clear(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this)
{
    for (int i = 0; i < ::uPtr< ::uArray*>(__this->_buckets)->Length(); i++)
    {
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(i).State = 0;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(i).Value = NULL;
        ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(i).Key = NULL;
    }

    __this->_count = 0;
    __this->_dummies = 0;
    __this->_version++;
}

bool Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___ContainsKey(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this, ::app::Uno::UX::FileSource* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Key, key))
            {
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

int Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___get_Count(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this)
{
    return __this->_count;
}

::app::Uno::WeakReference__Fuse_Resources_FileImageSourceImpl* Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___get_Item(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this, ::app::Uno::UX::FileSource* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Key, key))
            {
                return ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Value;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 0)
        {
            U_THROW(::app::Uno::Exception__New_2(NULL, ::uGetConstString("Dictionary did not contain the given key")));
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

::app::Uno::Collections::Dictionary2_KeyCollection__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___get_Keys(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this)
{
    return ::app::Uno::Collections::Dictionary2_KeyCollection__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_ValueCollection__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___get_Values(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this)
{
    return ::app::Uno::Collections::Dictionary2_ValueCollection__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___New_1(NULL, __this);
}

::app::Uno::Collections::Dictionary2_Enumerator__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_ Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___GetEnumerator(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this)
{
    return ::app::Uno::Collections::Dictionary2_Enumerator__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___New_1(NULL, __this);
}

Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___New_1(::uStatic* __this)
{
    Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* inst = (Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_*)::uAllocObject(sizeof(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_), Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof());
    inst->_ObjInit();
    return inst;
}

Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___New_2(::uStatic* __this, ::uObject* dictionary)
{
    Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* inst = (Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_*)::uAllocObject(sizeof(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_), Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof());
    inst->_ObjInit_1(dictionary);
    return inst;
}

void Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___Rehash(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this)
{
    ::uArray* oldBuckets = __this->_buckets;
    __this->_buckets = ::uNewArray(::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___typeof(), ::uPtr< ::uArray*>(oldBuckets)->Length() * 2);
    __this->_count = 0;
    __this->_dummies = 0;

    for (int i = 0; i < oldBuckets->Length(); i++)
    {
        if (oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(i).State == 1)
        {
            __this->Add(oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(i).Key, oldBuckets->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(i).Value);
        }
    }
}

bool Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___Remove(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this, ::app::Uno::UX::FileSource* key)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State = 2;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Value = NULL;
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Key = NULL;
                __this->_count--;
                __this->_dummies++;
                __this->_version++;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 0)
        {
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___set_Item(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this, ::app::Uno::UX::FileSource* key, ::app::Uno::WeakReference__Fuse_Resources_FileImageSourceImpl* value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Key, key))
            {
                ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Value = value;
                __this->_version++;
                return;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 0)
        {
            __this->Add(key, value);
            return;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

bool Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___TryGetValue(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this, ::app::Uno::UX::FileSource* key, ::app::Uno::WeakReference__Fuse_Resources_FileImageSourceImpl** value)
{
    int x = ::app::Uno::Math__Abs_5(NULL, ::app::Uno::Object::GetHashCode(::uPtr< ::app::Uno::UX::FileSource*>(key))) & (::uPtr< ::uArray*>(__this->_buckets)->Length() - 1);

    while (true)
    {
        if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 1)
        {
            if (::app::Uno::Generic__Equals__Uno_UX_FileSource(NULL, ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Key, key))
            {
                *value = ::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).Value;
                return true;
            }
        }
        else if (::uPtr< ::uArray*>(__this->_buckets)->Item< ::app::Uno::Collections::Dictionary2_Bucket__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_>(x).State == 0)
        {
            *value = NULL;
            return false;
        }

        x++;

        if (x >= ::uPtr< ::uArray*>(__this->_buckets)->Length())
        {
            x = 0;
        }
    }
}

void Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___Uno_Collections_ICollection_Add(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this, ::app::Uno::Collections::KeyValuePair__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_ item)
{
    __this->Add(item.Key(), item.Value());
}

bool Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___Uno_Collections_ICollection_Contains(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this, ::app::Uno::Collections::KeyValuePair__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

bool Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl___Uno_Collections_ICollection_Remove(Dictionary__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_* __this, ::app::Uno::Collections::KeyValuePair__Uno_UX_FileSource__Uno_WeakReference_Fuse_Resources_FileImageSourceImpl_ item)
{
    U_THROW(::app::Uno::InvalidOperationException__New_3(NULL));
}

}}}
